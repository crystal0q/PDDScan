digraph G {
charset="UTF-8";
	rankdir="LR";
	concentrate="true";
	"<PyiModuleGraph>" [label="<PyiModuleGraph>"];
	"setuptools._distutils.util" [label="<f0> SourceModule| <f1> setuptools._distutils.util",shape="record"];
	"py_compile" [label="<f0> SourceModule| <f1> py_compile",shape="record"];
	"argparse" [label="<f0> SourceModule| <f1> argparse",shape="record"];
	"textwrap" [label="<f0> SourceModule| <f1> textwrap",shape="record"];
	"shutil" [label="<f0> SourceModule| <f1> shutil",shape="record"];
	"zipfile" [label="<f0> Package| <f1> zipfile",shape="record"];
	"zipfile._path" [label="<f0> Package| <f1> zipfile._path",shape="record"];
	"zipfile._path.glob" [label="<f0> SourceModule| <f1> zipfile._path.glob",shape="record"];
	"contextlib" [label="<f0> SourceModule| <f1> contextlib",shape="record"];
	"itertools" [label="<f0> BuiltinModule| <f1> itertools",shape="record"];
	"threading" [label="<f0> SourceModule| <f1> threading",shape="record"];
	"_threading_local" [label="<f0> SourceModule| <f1> _threading_local",shape="record"];
	"_collections" [label="<f0> BuiltinModule| <f1> _collections",shape="record"];
	"struct" [label="<f0> SourceModule| <f1> struct",shape="record"];
	"_struct" [label="<f0> BuiltinModule| <f1> _struct",shape="record"];
	"binascii" [label="<f0> BuiltinModule| <f1> binascii",shape="record"];
	"tarfile" [label="<f0> SourceModule| <f1> tarfile",shape="record"];
	"gzip" [label="<f0> SourceModule| <f1> gzip",shape="record"];
	"_compression" [label="<f0> SourceModule| <f1> _compression",shape="record"];
	"builtins" [label="<f0> BuiltinModule| <f1> builtins",shape="record"];
	"grp" [label="<f0> MissingModule| <f1> grp",shape="record"];
	"_winapi" [label="<f0> BuiltinModule| <f1> _winapi",shape="record"];
	"nt" [label="<f0> BuiltinModule| <f1> nt",shape="record"];
	"lzma" [label="<f0> SourceModule| <f1> lzma",shape="record"];
	"_lzma" [label="<f0> Extension| <f1> _lzma",shape="record"];
	"bz2" [label="<f0> SourceModule| <f1> bz2",shape="record"];
	"_bz2" [label="<f0> Extension| <f1> _bz2",shape="record"];
	"zlib" [label="<f0> BuiltinModule| <f1> zlib",shape="record"];
	"errno" [label="<f0> BuiltinModule| <f1> errno",shape="record"];
	"fnmatch" [label="<f0> SourceModule| <f1> fnmatch",shape="record"];
	"copy" [label="<f0> SourceModule| <f1> copy",shape="record"];
	"gettext" [label="<f0> SourceModule| <f1> gettext",shape="record"];
	"os.path" [label="<f0> AliasNode| <f1> os.path",shape="record"];
	"importlib.machinery" [label="<f0> SourceModule| <f1> importlib.machinery",shape="record"];
	"importlib" [label="<f0> Package| <f1> importlib",shape="record"];
	"_frozen_importlib_external" [label="<f0> MissingModule| <f1> _frozen_importlib_external",shape="record"];
	"_frozen_importlib" [label="<f0> ExcludedModule| <f1> _frozen_importlib",shape="record"];
	"_imp" [label="<f0> BuiltinModule| <f1> _imp",shape="record"];
	"importlib._bootstrap" [label="<f0> SourceModule| <f1> importlib._bootstrap",shape="record"];
	"importlib._bootstrap_external" [label="<f0> SourceModule| <f1> importlib._bootstrap_external",shape="record"];
	"importlib.metadata" [label="<f0> Package| <f1> importlib.metadata",shape="record"];
	"importlib.abc" [label="<f0> SourceModule| <f1> importlib.abc",shape="record"];
	"importlib.resources.abc" [label="<f0> SourceModule| <f1> importlib.resources.abc",shape="record"];
	"importlib.resources" [label="<f0> Package| <f1> importlib.resources",shape="record"];
	"importlib.resources._legacy" [label="<f0> SourceModule| <f1> importlib.resources._legacy",shape="record"];
	"importlib.resources._common" [label="<f0> SourceModule| <f1> importlib.resources._common",shape="record"];
	"importlib.resources._adapters" [label="<f0> SourceModule| <f1> importlib.resources._adapters",shape="record"];
	"importlib._abc" [label="<f0> SourceModule| <f1> importlib._abc",shape="record"];
	"importlib.metadata._itertools" [label="<f0> SourceModule| <f1> importlib.metadata._itertools",shape="record"];
	"importlib.metadata._functools" [label="<f0> SourceModule| <f1> importlib.metadata._functools",shape="record"];
	"importlib.metadata._collections" [label="<f0> SourceModule| <f1> importlib.metadata._collections",shape="record"];
	"importlib.metadata._meta" [label="<f0> SourceModule| <f1> importlib.metadata._meta",shape="record"];
	"importlib.metadata._adapters" [label="<f0> SourceModule| <f1> importlib.metadata._adapters",shape="record"];
	"importlib.metadata._text" [label="<f0> SourceModule| <f1> importlib.metadata._text",shape="record"];
	"email.message" [label="<f0> SourceModule| <f1> email.message",shape="record"];
	"email.policy" [label="<f0> SourceModule| <f1> email.policy",shape="record"];
	"email.contentmanager" [label="<f0> SourceModule| <f1> email.contentmanager",shape="record"];
	"email.quoprimime" [label="<f0> SourceModule| <f1> email.quoprimime",shape="record"];
	"email.headerregistry" [label="<f0> SourceModule| <f1> email.headerregistry",shape="record"];
	"email._header_value_parser" [label="<f0> SourceModule| <f1> email._header_value_parser",shape="record"];
	"urllib" [label="<f0> Package| <f1> urllib",shape="record"];
	"email.iterators" [label="<f0> SourceModule| <f1> email.iterators",shape="record"];
	"email.generator" [label="<f0> SourceModule| <f1> email.generator",shape="record"];
	"random" [label="<f0> SourceModule| <f1> random",shape="record"];
	"statistics" [label="<f0> SourceModule| <f1> statistics",shape="record"];
	"_statistics" [label="<f0> BuiltinModule| <f1> _statistics",shape="record"];
	"decimal" [label="<f0> SourceModule| <f1> decimal",shape="record"];
	"_pydecimal" [label="<f0> SourceModule| <f1> _pydecimal",shape="record"];
	"contextvars" [label="<f0> SourceModule| <f1> contextvars",shape="record"];
	"_contextvars" [label="<f0> BuiltinModule| <f1> _contextvars",shape="record"];
	"_decimal" [label="<f0> Extension| <f1> _decimal",shape="record"];
	"fractions" [label="<f0> SourceModule| <f1> fractions",shape="record"];
	"numbers" [label="<f0> SourceModule| <f1> numbers",shape="record"];
	"hashlib" [label="<f0> SourceModule| <f1> hashlib",shape="record"];
	"logging" [label="<f0> Package| <f1> logging",shape="record"];
	"atexit" [label="<f0> BuiltinModule| <f1> atexit",shape="record"];
	"pickle" [label="<f0> SourceModule| <f1> pickle",shape="record"];
	"pprint" [label="<f0> SourceModule| <f1> pprint",shape="record"];
	"dataclasses" [label="<f0> SourceModule| <f1> dataclasses",shape="record"];
	"_compat_pickle" [label="<f0> SourceModule| <f1> _compat_pickle",shape="record"];
	"_hashlib" [label="<f0> Extension| <f1> _hashlib",shape="record"];
	"_sha3" [label="<f0> BuiltinModule| <f1> _sha3",shape="record"];
	"_blake2" [label="<f0> BuiltinModule| <f1> _blake2",shape="record"];
	"_md5" [label="<f0> BuiltinModule| <f1> _md5",shape="record"];
	"_sha1" [label="<f0> BuiltinModule| <f1> _sha1",shape="record"];
	"_sha2" [label="<f0> BuiltinModule| <f1> _sha2",shape="record"];
	"_random" [label="<f0> BuiltinModule| <f1> _random",shape="record"];
	"bisect" [label="<f0> SourceModule| <f1> bisect",shape="record"];
	"_bisect" [label="<f0> BuiltinModule| <f1> _bisect",shape="record"];
	"math" [label="<f0> BuiltinModule| <f1> math",shape="record"];
	"email._encoded_words" [label="<f0> SourceModule| <f1> email._encoded_words",shape="record"];
	"base64" [label="<f0> SourceModule| <f1> base64",shape="record"];
	"getopt" [label="<f0> SourceModule| <f1> getopt",shape="record"];
	"email.charset" [label="<f0> SourceModule| <f1> email.charset",shape="record"];
	"email.encoders" [label="<f0> SourceModule| <f1> email.encoders",shape="record"];
	"email.base64mime" [label="<f0> SourceModule| <f1> email.base64mime",shape="record"];
	"email._policybase" [label="<f0> SourceModule| <f1> email._policybase",shape="record"];
	"email.header" [label="<f0> SourceModule| <f1> email.header",shape="record"];
	"email.errors" [label="<f0> SourceModule| <f1> email.errors",shape="record"];
	"email.utils" [label="<f0> SourceModule| <f1> email.utils",shape="record"];
	"email._parseaddr" [label="<f0> SourceModule| <f1> email._parseaddr",shape="record"];
	"calendar" [label="<f0> SourceModule| <f1> calendar",shape="record"];
	"urllib.parse" [label="<f0> SourceModule| <f1> urllib.parse",shape="record"];
	"unicodedata" [label="<f0> Extension| <f1> unicodedata",shape="record"];
	"ipaddress" [label="<f0> SourceModule| <f1> ipaddress",shape="record"];
	"socket" [label="<f0> SourceModule| <f1> socket",shape="record"];
	"array" [label="<f0> BuiltinModule| <f1> array",shape="record"];
	"selectors" [label="<f0> SourceModule| <f1> selectors",shape="record"];
	"select" [label="<f0> Extension| <f1> select",shape="record"];
	"_socket" [label="<f0> Extension| <f1> _socket",shape="record"];
	"quopri" [label="<f0> SourceModule| <f1> quopri",shape="record"];
	"inspect" [label="<f0> SourceModule| <f1> inspect",shape="record"];
	"token" [label="<f0> SourceModule| <f1> token",shape="record"];
	"dis" [label="<f0> SourceModule| <f1> dis",shape="record"];
	"opcode" [label="<f0> SourceModule| <f1> opcode",shape="record"];
	"_opcode" [label="<f0> BuiltinModule| <f1> _opcode",shape="record"];
	"ast" [label="<f0> SourceModule| <f1> ast",shape="record"];
	"_ast" [label="<f0> BuiltinModule| <f1> _ast",shape="record"];
	"email" [label="<f0> Package| <f1> email",shape="record"];
	"email.parser" [label="<f0> SourceModule| <f1> email.parser",shape="record"];
	"email.feedparser" [label="<f0> SourceModule| <f1> email.feedparser",shape="record"];
	"csv" [label="<f0> SourceModule| <f1> csv",shape="record"];
	"_csv" [label="<f0> BuiltinModule| <f1> _csv",shape="record"];
	"importlib.readers" [label="<f0> SourceModule| <f1> importlib.readers",shape="record"];
	"importlib.resources.readers" [label="<f0> SourceModule| <f1> importlib.resources.readers",shape="record"];
	"importlib.resources._itertools" [label="<f0> SourceModule| <f1> importlib.resources._itertools",shape="record"];
	"tokenize" [label="<f0> SourceModule| <f1> tokenize",shape="record"];
	"_tokenize" [label="<f0> BuiltinModule| <f1> _tokenize",shape="record"];
	"marshal" [label="<f0> BuiltinModule| <f1> marshal",shape="record"];
	"_warnings" [label="<f0> BuiltinModule| <f1> _warnings",shape="record"];
	"_io" [label="<f0> BuiltinModule| <f1> _io",shape="record"];
	"pwd" [label="<f0> MissingModule| <f1> pwd",shape="record"];
	"setuptools._distutils.sysconfig" [label="<f0> SourceModule| <f1> setuptools._distutils.sysconfig",shape="record"];
	"setuptools._distutils.text_file" [label="<f0> SourceModule| <f1> setuptools._distutils.text_file",shape="record"];
	"typing_extensions.deprecated" [label="<f0> MissingModule| <f1> typing_extensions.deprecated",shape="record"];
	"setuptools._distutils.compat.py39" [label="<f0> SourceModule| <f1> setuptools._distutils.compat.py39",shape="record"];
	"platform" [label="<f0> SourceModule| <f1> platform",shape="record"];
	"vms_lib" [label="<f0> MissingModule| <f1> vms_lib",shape="record"];
	"'java.lang'" [label="<f0> MissingModule| <f1> 'java.lang'",shape="record"];
	"java" [label="<f0> MissingModule| <f1> java",shape="record"];
	"_winreg" [label="<f0> MissingModule| <f1> _winreg",shape="record"];
	"_wmi" [label="<f0> Extension| <f1> _wmi",shape="record"];
	"setuptools._distutils.compat" [label="<f0> Package| <f1> setuptools._distutils.compat",shape="record"];
	"setuptools._distutils.ccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils.ccompiler",shape="record"];
	"setuptools._distutils.compilers.C.errors" [label="<f0> SourceModule| <f1> setuptools._distutils.compilers.C.errors",shape="record"];
	"setuptools._distutils.compilers.C.base" [label="<f0> SourceModule| <f1> setuptools._distutils.compilers.C.base",shape="record"];
	"setuptools._distutils.fancy_getopt" [label="<f0> SourceModule| <f1> setuptools._distutils.fancy_getopt",shape="record"];
	"setuptools._distutils.debug" [label="<f0> SourceModule| <f1> setuptools._distutils.debug",shape="record"];
	"typing_extensions.TypeAlias" [label="<f0> MissingModule| <f1> typing_extensions.TypeAlias",shape="record"];
	"setuptools._distutils.file_util" [label="<f0> SourceModule| <f1> setuptools._distutils.file_util",shape="record"];
	"setuptools._distutils.dir_util" [label="<f0> SourceModule| <f1> setuptools._distutils.dir_util",shape="record"];
	"more_itertools" [label="<f0> AliasNode| <f1> more_itertools",shape="record"];
	"setuptools._distutils.compilers.C" [label="<f0> NamespacePackage| <f1> setuptools._distutils.compilers.C",shape="record"];
	"setuptools._distutils.compilers.C.msvc" [label="<f0> SourceModule| <f1> setuptools._distutils.compilers.C.msvc",shape="record"];
	"unittest.mock" [label="<f0> SourceModule| <f1> unittest.mock",shape="record"];
	"unittest" [label="<f0> Package| <f1> unittest",shape="record"];
	"unittest.async_case" [label="<f0> SourceModule| <f1> unittest.async_case",shape="record"];
	"unittest.signals" [label="<f0> SourceModule| <f1> unittest.signals",shape="record"];
	"signal" [label="<f0> SourceModule| <f1> signal",shape="record"];
	"_signal" [label="<f0> BuiltinModule| <f1> _signal",shape="record"];
	"unittest.main" [label="<f0> SourceModule| <f1> unittest.main",shape="record"];
	"unittest.runner" [label="<f0> SourceModule| <f1> unittest.runner",shape="record"];
	"unittest.loader" [label="<f0> SourceModule| <f1> unittest.loader",shape="record"];
	"unittest.suite" [label="<f0> SourceModule| <f1> unittest.suite",shape="record"];
	"unittest.case" [label="<f0> SourceModule| <f1> unittest.case",shape="record"];
	"unittest._log" [label="<f0> SourceModule| <f1> unittest._log",shape="record"];
	"difflib" [label="<f0> SourceModule| <f1> difflib",shape="record"];
	"unittest.result" [label="<f0> SourceModule| <f1> unittest.result",shape="record"];
	"unittest.util" [label="<f0> SourceModule| <f1> unittest.util",shape="record"];
	"pkgutil" [label="<f0> SourceModule| <f1> pkgutil",shape="record"];
	"asyncio" [label="<f0> Package| <f1> asyncio",shape="record"];
	"asyncio.unix_events" [label="<f0> SourceModule| <f1> asyncio.unix_events",shape="record"];
	"asyncio.log" [label="<f0> SourceModule| <f1> asyncio.log",shape="record"];
	"asyncio.windows_events" [label="<f0> SourceModule| <f1> asyncio.windows_events",shape="record"];
	"msvcrt" [label="<f0> BuiltinModule| <f1> msvcrt",shape="record"];
	"_overlapped" [label="<f0> Extension| <f1> _overlapped",shape="record"];
	"asyncio.windows_utils" [label="<f0> SourceModule| <f1> asyncio.windows_utils",shape="record"];
	"asyncio.selector_events" [label="<f0> SourceModule| <f1> asyncio.selector_events",shape="record"];
	"ssl" [label="<f0> SourceModule| <f1> ssl",shape="record"];
	"asyncio.proactor_events" [label="<f0> SourceModule| <f1> asyncio.proactor_events",shape="record"];
	"asyncio.base_subprocess" [label="<f0> SourceModule| <f1> asyncio.base_subprocess",shape="record"];
	"asyncio.threads" [label="<f0> SourceModule| <f1> asyncio.threads",shape="record"];
	"asyncio.taskgroups" [label="<f0> SourceModule| <f1> asyncio.taskgroups",shape="record"];
	"asyncio.subprocess" [label="<f0> SourceModule| <f1> asyncio.subprocess",shape="record"];
	"asyncio.streams" [label="<f0> SourceModule| <f1> asyncio.streams",shape="record"];
	"asyncio.queues" [label="<f0> SourceModule| <f1> asyncio.queues",shape="record"];
	"asyncio.runners" [label="<f0> SourceModule| <f1> asyncio.runners",shape="record"];
	"asyncio.base_events" [label="<f0> SourceModule| <f1> asyncio.base_events",shape="record"];
	"concurrent.futures" [label="<f0> Package| <f1> concurrent.futures",shape="record"];
	"concurrent.futures.thread" [label="<f0> SourceModule| <f1> concurrent.futures.thread",shape="record"];
	"queue" [label="<f0> SourceModule| <f1> queue",shape="record"];
	"_queue" [label="<f0> Extension| <f1> _queue",shape="record"];
	"concurrent.futures.process" [label="<f0> SourceModule| <f1> concurrent.futures.process",shape="record"];
	"multiprocessing.synchronize" [label="<f0> SourceModule| <f1> multiprocessing.synchronize",shape="record"];
	"multiprocessing.heap" [label="<f0> SourceModule| <f1> multiprocessing.heap",shape="record"];
	"mmap" [label="<f0> BuiltinModule| <f1> mmap",shape="record"];
	"multiprocessing.resource_tracker" [label="<f0> SourceModule| <f1> multiprocessing.resource_tracker",shape="record"];
	"_posixshmem" [label="<f0> MissingModule| <f1> _posixshmem",shape="record"];
	"multiprocessing.spawn" [label="<f0> SourceModule| <f1> multiprocessing.spawn",shape="record"];
	"multiprocessing.set_start_method" [label="<f0> MissingModule| <f1> multiprocessing.set_start_method",shape="record"];
	"multiprocessing.get_start_method" [label="<f0> MissingModule| <f1> multiprocessing.get_start_method",shape="record"];
	"runpy" [label="<f0> SourceModule| <f1> runpy",shape="record"];
	"multiprocessing.util" [label="<f0> SourceModule| <f1> multiprocessing.util",shape="record"];
	"multiprocessing.forkserver" [label="<f0> SourceModule| <f1> multiprocessing.forkserver",shape="record"];
	"multiprocessing.process" [label="<f0> SourceModule| <f1> multiprocessing.process",shape="record"];
	"multiprocessing.context" [label="<f0> SourceModule| <f1> multiprocessing.context",shape="record"];
	"multiprocessing.popen_spawn_win32" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_win32",shape="record"];
	"multiprocessing.popen_forkserver" [label="<f0> SourceModule| <f1> multiprocessing.popen_forkserver",shape="record"];
	"multiprocessing.popen_spawn_posix" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_posix",shape="record"];
	"multiprocessing.popen_fork" [label="<f0> SourceModule| <f1> multiprocessing.popen_fork",shape="record"];
	"multiprocessing.sharedctypes" [label="<f0> SourceModule| <f1> multiprocessing.sharedctypes",shape="record"];
	"multiprocessing.get_context" [label="<f0> MissingModule| <f1> multiprocessing.get_context",shape="record"];
	"ctypes" [label="<f0> Package| <f1> ctypes",shape="record"];
	"ctypes._endian" [label="<f0> SourceModule| <f1> ctypes._endian",shape="record"];
	"_ctypes" [label="<f0> Extension| <f1> _ctypes",shape="record"];
	"multiprocessing.pool" [label="<f0> SourceModule| <f1> multiprocessing.pool",shape="record"];
	"multiprocessing.dummy" [label="<f0> Package| <f1> multiprocessing.dummy",shape="record"];
	"multiprocessing.dummy.connection" [label="<f0> SourceModule| <f1> multiprocessing.dummy.connection",shape="record"];
	"multiprocessing.TimeoutError" [label="<f0> MissingModule| <f1> multiprocessing.TimeoutError",shape="record"];
	"multiprocessing.managers" [label="<f0> SourceModule| <f1> multiprocessing.managers",shape="record"];
	"multiprocessing.shared_memory" [label="<f0> SourceModule| <f1> multiprocessing.shared_memory",shape="record"];
	"secrets" [label="<f0> SourceModule| <f1> secrets",shape="record"];
	"hmac" [label="<f0> SourceModule| <f1> hmac",shape="record"];
	"_operator" [label="<f0> BuiltinModule| <f1> _operator",shape="record"];
	"multiprocessing.reduction" [label="<f0> SourceModule| <f1> multiprocessing.reduction",shape="record"];
	"multiprocessing.resource_sharer" [label="<f0> SourceModule| <f1> multiprocessing.resource_sharer",shape="record"];
	"_multiprocessing" [label="<f0> Extension| <f1> _multiprocessing",shape="record"];
	"multiprocessing.queues" [label="<f0> SourceModule| <f1> multiprocessing.queues",shape="record"];
	"multiprocessing.connection" [label="<f0> SourceModule| <f1> multiprocessing.connection",shape="record"];
	"xmlrpc.client" [label="<f0> SourceModule| <f1> xmlrpc.client",shape="record"];
	"xmlrpc" [label="<f0> Package| <f1> xmlrpc",shape="record"];
	"xml.parsers.expat" [label="<f0> SourceModule| <f1> xml.parsers.expat",shape="record"];
	"pyexpat" [label="<f0> Extension| <f1> pyexpat",shape="record"];
	"xml.parsers" [label="<f0> Package| <f1> xml.parsers",shape="record"];
	"xml" [label="<f0> Package| <f1> xml",shape="record"];
	"xml.sax.expatreader" [label="<f0> SourceModule| <f1> xml.sax.expatreader",shape="record"];
	"_weakref" [label="<f0> BuiltinModule| <f1> _weakref",shape="record"];
	"xml.sax.saxutils" [label="<f0> SourceModule| <f1> xml.sax.saxutils",shape="record"];
	"urllib.request" [label="<f0> SourceModule| <f1> urllib.request",shape="record"];
	"_scproxy" [label="<f0> MissingModule| <f1> _scproxy",shape="record"];
	"getpass" [label="<f0> SourceModule| <f1> getpass",shape="record"];
	"termios" [label="<f0> MissingModule| <f1> termios",shape="record"];
	"nturl2path" [label="<f0> SourceModule| <f1> nturl2path",shape="record"];
	"ftplib" [label="<f0> SourceModule| <f1> ftplib",shape="record"];
	"netrc" [label="<f0> SourceModule| <f1> netrc",shape="record"];
	"mimetypes" [label="<f0> SourceModule| <f1> mimetypes",shape="record"];
	"http.cookiejar" [label="<f0> SourceModule| <f1> http.cookiejar",shape="record"];
	"http" [label="<f0> Package| <f1> http",shape="record"];
	"urllib.response" [label="<f0> SourceModule| <f1> urllib.response",shape="record"];
	"urllib.error" [label="<f0> SourceModule| <f1> urllib.error",shape="record"];
	"xml.sax" [label="<f0> Package| <f1> xml.sax",shape="record"];
	"xml.sax.handler" [label="<f0> SourceModule| <f1> xml.sax.handler",shape="record"];
	"xml.sax._exceptions" [label="<f0> SourceModule| <f1> xml.sax._exceptions",shape="record"];
	"xml.sax.xmlreader" [label="<f0> SourceModule| <f1> xml.sax.xmlreader",shape="record"];
	"http.client" [label="<f0> SourceModule| <f1> http.client",shape="record"];
	"multiprocessing.BufferTooShort" [label="<f0> MissingModule| <f1> multiprocessing.BufferTooShort",shape="record"];
	"multiprocessing.AuthenticationError" [label="<f0> MissingModule| <f1> multiprocessing.AuthenticationError",shape="record"];
	"multiprocessing" [label="<f0> Package| <f1> multiprocessing",shape="record"];
	"multiprocessing.Value" [label="<f0> MissingModule| <f1> multiprocessing.Value",shape="record"];
	"concurrent.futures._base" [label="<f0> SourceModule| <f1> concurrent.futures._base",shape="record"];
	"concurrent" [label="<f0> Package| <f1> concurrent",shape="record"];
	"asyncio.trsock" [label="<f0> SourceModule| <f1> asyncio.trsock",shape="record"];
	"asyncio.staggered" [label="<f0> SourceModule| <f1> asyncio.staggered",shape="record"];
	"asyncio.timeouts" [label="<f0> SourceModule| <f1> asyncio.timeouts",shape="record"];
	"asyncio.tasks" [label="<f0> SourceModule| <f1> asyncio.tasks",shape="record"];
	"_asyncio" [label="<f0> Extension| <f1> _asyncio",shape="record"];
	"asyncio.base_tasks" [label="<f0> SourceModule| <f1> asyncio.base_tasks",shape="record"];
	"asyncio.locks" [label="<f0> SourceModule| <f1> asyncio.locks",shape="record"];
	"asyncio.mixins" [label="<f0> SourceModule| <f1> asyncio.mixins",shape="record"];
	"asyncio.sslproto" [label="<f0> SourceModule| <f1> asyncio.sslproto",shape="record"];
	"asyncio.transports" [label="<f0> SourceModule| <f1> asyncio.transports",shape="record"];
	"asyncio.protocols" [label="<f0> SourceModule| <f1> asyncio.protocols",shape="record"];
	"asyncio.futures" [label="<f0> SourceModule| <f1> asyncio.futures",shape="record"];
	"asyncio.base_futures" [label="<f0> SourceModule| <f1> asyncio.base_futures",shape="record"];
	"asyncio.exceptions" [label="<f0> SourceModule| <f1> asyncio.exceptions",shape="record"];
	"asyncio.events" [label="<f0> SourceModule| <f1> asyncio.events",shape="record"];
	"asyncio.DefaultEventLoopPolicy" [label="<f0> MissingModule| <f1> asyncio.DefaultEventLoopPolicy",shape="record"];
	"asyncio.format_helpers" [label="<f0> SourceModule| <f1> asyncio.format_helpers",shape="record"];
	"asyncio.coroutines" [label="<f0> SourceModule| <f1> asyncio.coroutines",shape="record"];
	"asyncio.constants" [label="<f0> SourceModule| <f1> asyncio.constants",shape="record"];
	"setuptools._distutils.compilers" [label="<f0> NamespacePackage| <f1> setuptools._distutils.compilers",shape="record"];
	"setuptools._distutils.compat.numpy" [label="<f0> SourceModule| <f1> setuptools._distutils.compat.numpy",shape="record"];
	"distutils" [label="<f0> AliasNode| <f1> distutils",shape="record"];
	"typing_extensions.Unpack" [label="<f0> MissingModule| <f1> typing_extensions.Unpack",shape="record"];
	"typing_extensions.TypeVarTuple" [label="<f0> MissingModule| <f1> typing_extensions.TypeVarTuple",shape="record"];
	"typing_extensions" [label="<f0> AliasNode| <f1> typing_extensions",shape="record"];
	"typing_extensions.Buffer" [label="<f0> MissingModule| <f1> typing_extensions.Buffer",shape="record"];
	"typing_extensions.Literal" [label="<f0> MissingModule| <f1> typing_extensions.Literal",shape="record"];
	"typing_extensions.Self" [label="<f0> MissingModule| <f1> typing_extensions.Self",shape="record"];
	"setuptools._distutils.spawn" [label="<f0> SourceModule| <f1> setuptools._distutils.spawn",shape="record"];
	"setuptools._distutils.errors" [label="<f0> SourceModule| <f1> setuptools._distutils.errors",shape="record"];
	"setuptools._distutils._modified" [label="<f0> SourceModule| <f1> setuptools._distutils._modified",shape="record"];
	"setuptools._distutils._log" [label="<f0> SourceModule| <f1> setuptools._distutils._log",shape="record"];
	"jaraco.functools" [label="<f0> AliasNode| <f1> jaraco.functools",shape="record"];
	"jaraco" [label="<f0> NamespacePackage| <f1> jaraco",shape="record"];
	"typing" [label="<f0> SourceModule| <f1> typing",shape="record"];
	"_typing" [label="<f0> BuiltinModule| <f1> _typing",shape="record"];
	"tempfile" [label="<f0> SourceModule| <f1> tempfile",shape="record"];
	"sysconfig" [label="<f0> SourceModule| <f1> sysconfig",shape="record"];
	"_aix_support" [label="<f0> SourceModule| <f1> _aix_support",shape="record"];
	"sys" [label="<f0> BuiltinModule| <f1> sys",shape="record"];
	"subprocess" [label="<f0> SourceModule| <f1> subprocess",shape="record"];
	"fcntl" [label="<f0> MissingModule| <f1> fcntl",shape="record"];
	"string" [label="<f0> SourceModule| <f1> string",shape="record"];
	"_string" [label="<f0> BuiltinModule| <f1> _string",shape="record"];
	"pathlib" [label="<f0> SourceModule| <f1> pathlib",shape="record"];
	"importlib.util" [label="<f0> SourceModule| <f1> importlib.util",shape="record"];
	"__future__" [label="<f0> SourceModule| <f1> __future__",shape="record"];
	"setuptools._distutils.command.check" [label="<f0> SourceModule| <f1> setuptools._distutils.command.check",shape="record"];
	"setuptools._distutils.command" [label="<f0> Package| <f1> setuptools._distutils.command",shape="record"];
	"setuptools._distutils.core" [label="<f0> SourceModule| <f1> setuptools._distutils.core",shape="record"];
	"setuptools._distutils.extension" [label="<f0> SourceModule| <f1> setuptools._distutils.extension",shape="record"];
	"setuptools._distutils.dist" [label="<f0> SourceModule| <f1> setuptools._distutils.dist",shape="record"];
	"setuptools._distutils.versionpredicate" [label="<f0> SourceModule| <f1> setuptools._distutils.versionpredicate",shape="record"];
	"setuptools._distutils.version" [label="<f0> SourceModule| <f1> setuptools._distutils.version",shape="record"];
	"configparser" [label="<f0> SourceModule| <f1> configparser",shape="record"];
	"_typeshed" [label="<f0> MissingModule| <f1> _typeshed",shape="record"];
	"packaging.utils" [label="<f0> SourceModule| <f1> packaging.utils",shape="record"];
	"packaging" [label="<f0> Package| <f1> packaging",shape="record"];
	"packaging._musllinux" [label="<f0> SourceModule| <f1> packaging._musllinux",shape="record"];
	"packaging._elffile" [label="<f0> SourceModule| <f1> packaging._elffile",shape="record"];
	"packaging._manylinux" [label="<f0> SourceModule| <f1> packaging._manylinux",shape="record"];
	"_manylinux" [label="<f0> MissingModule| <f1> _manylinux",shape="record"];
	"packaging.version" [label="<f0> SourceModule| <f1> packaging.version",shape="record"];
	"packaging._structures" [label="<f0> SourceModule| <f1> packaging._structures",shape="record"];
	"packaging.tags" [label="<f0> SourceModule| <f1> packaging.tags",shape="record"];
	"setuptools._distutils.cmd" [label="<f0> SourceModule| <f1> setuptools._distutils.cmd",shape="record"];
	"setuptools._distutils.archive_util" [label="<f0> SourceModule| <f1> setuptools._distutils.archive_util",shape="record"];
	"openpyxl.worksheet.smart_tag" [label="<f0> SourceModule| <f1> openpyxl.worksheet.smart_tag",shape="record"];
	"openpyxl.worksheet" [label="<f0> Package| <f1> openpyxl.worksheet",shape="record"];
	"openpyxl" [label="<f0> Package| <f1> openpyxl",shape="record"];
	"openpyxl._constants" [label="<f0> SourceModule| <f1> openpyxl._constants",shape="record"];
	"openpyxl.reader.excel" [label="<f0> SourceModule| <f1> openpyxl.reader.excel",shape="record"];
	"openpyxl.reader" [label="<f0> Package| <f1> openpyxl.reader",shape="record"];
	"openpyxl.reader.drawings" [label="<f0> SourceModule| <f1> openpyxl.reader.drawings",shape="record"];
	"openpyxl.chart.reader" [label="<f0> SourceModule| <f1> openpyxl.chart.reader",shape="record"];
	"openpyxl.chart" [label="<f0> Package| <f1> openpyxl.chart",shape="record"];
	"openpyxl.chart.reference" [label="<f0> SourceModule| <f1> openpyxl.chart.reference",shape="record"];
	"openpyxl.utils" [label="<f0> Package| <f1> openpyxl.utils",shape="record"];
	"openpyxl.utils.formulas" [label="<f0> SourceModule| <f1> openpyxl.utils.formulas",shape="record"];
	"openpyxl.formula" [label="<f0> Package| <f1> openpyxl.formula",shape="record"];
	"openpyxl.formula.tokenizer" [label="<f0> SourceModule| <f1> openpyxl.formula.tokenizer",shape="record"];
	"openpyxl.utils.cell" [label="<f0> SourceModule| <f1> openpyxl.utils.cell",shape="record"];
	"openpyxl.worksheet.worksheet" [label="<f0> SourceModule| <f1> openpyxl.worksheet.worksheet",shape="record"];
	"openpyxl.worksheet.print_settings" [label="<f0> SourceModule| <f1> openpyxl.worksheet.print_settings",shape="record"];
	"openpyxl.worksheet.formula" [label="<f0> SourceModule| <f1> openpyxl.worksheet.formula",shape="record"];
	"openpyxl.worksheet.scenario" [label="<f0> SourceModule| <f1> openpyxl.worksheet.scenario",shape="record"];
	"openpyxl.worksheet.pagebreak" [label="<f0> SourceModule| <f1> openpyxl.worksheet.pagebreak",shape="record"];
	"openpyxl.worksheet.properties" [label="<f0> SourceModule| <f1> openpyxl.worksheet.properties",shape="record"];
	"openpyxl.styles.colors" [label="<f0> SourceModule| <f1> openpyxl.styles.colors",shape="record"];
	"openpyxl.styles" [label="<f0> Package| <f1> openpyxl.styles",shape="record"];
	"openpyxl.styles.named_styles" [label="<f0> SourceModule| <f1> openpyxl.styles.named_styles",shape="record"];
	"openpyxl.styles.cell_style" [label="<f0> SourceModule| <f1> openpyxl.styles.cell_style",shape="record"];
	"openpyxl.utils.indexed_list" [label="<f0> SourceModule| <f1> openpyxl.utils.indexed_list",shape="record"];
	"openpyxl.descriptors.excel" [label="<f0> SourceModule| <f1> openpyxl.descriptors.excel",shape="record"];
	"openpyxl.styles.protection" [label="<f0> SourceModule| <f1> openpyxl.styles.protection",shape="record"];
	"openpyxl.styles.numbers" [label="<f0> SourceModule| <f1> openpyxl.styles.numbers",shape="record"];
	"openpyxl.styles.fonts" [label="<f0> SourceModule| <f1> openpyxl.styles.fonts",shape="record"];
	"openpyxl.descriptors.nested" [label="<f0> SourceModule| <f1> openpyxl.descriptors.nested",shape="record"];
	"openpyxl.descriptors.base" [label="<f0> SourceModule| <f1> openpyxl.descriptors.base",shape="record"];
	"openpyxl.descriptors.namespace" [label="<f0> SourceModule| <f1> openpyxl.descriptors.namespace",shape="record"];
	"openpyxl.utils.datetime" [label="<f0> SourceModule| <f1> openpyxl.utils.datetime",shape="record"];
	"openpyxl.styles.fills" [label="<f0> SourceModule| <f1> openpyxl.styles.fills",shape="record"];
	"openpyxl.styles.borders" [label="<f0> SourceModule| <f1> openpyxl.styles.borders",shape="record"];
	"openpyxl.styles.alignment" [label="<f0> SourceModule| <f1> openpyxl.styles.alignment",shape="record"];
	"openpyxl.descriptors.sequence" [label="<f0> SourceModule| <f1> openpyxl.descriptors.sequence",shape="record"];
	"openpyxl.worksheet.merge" [label="<f0> SourceModule| <f1> openpyxl.worksheet.merge",shape="record"];
	"openpyxl.cell.cell" [label="<f0> SourceModule| <f1> openpyxl.cell.cell",shape="record"];
	"openpyxl.cell.rich_text" [label="<f0> SourceModule| <f1> openpyxl.cell.rich_text",shape="record"];
	"openpyxl.cell.text" [label="<f0> SourceModule| <f1> openpyxl.cell.text",shape="record"];
	"openpyxl.worksheet.hyperlink" [label="<f0> SourceModule| <f1> openpyxl.worksheet.hyperlink",shape="record"];
	"openpyxl.styles.styleable" [label="<f0> SourceModule| <f1> openpyxl.styles.styleable",shape="record"];
	"openpyxl.styles.builtins" [label="<f0> SourceModule| <f1> openpyxl.styles.builtins",shape="record"];
	"openpyxl.styles.proxy" [label="<f0> SourceModule| <f1> openpyxl.styles.proxy",shape="record"];
	"openpyxl.worksheet.cell_range" [label="<f0> SourceModule| <f1> openpyxl.worksheet.cell_range",shape="record"];
	"openpyxl.worksheet.views" [label="<f0> SourceModule| <f1> openpyxl.worksheet.views",shape="record"];
	"openpyxl.worksheet.filters" [label="<f0> SourceModule| <f1> openpyxl.worksheet.filters",shape="record"];
	"openpyxl.worksheet.protection" [label="<f0> SourceModule| <f1> openpyxl.worksheet.protection",shape="record"];
	"openpyxl.utils.protection" [label="<f0> SourceModule| <f1> openpyxl.utils.protection",shape="record"];
	"openpyxl.worksheet.dimensions" [label="<f0> SourceModule| <f1> openpyxl.worksheet.dimensions",shape="record"];
	"openpyxl.utils.bound_dictionary" [label="<f0> SourceModule| <f1> openpyxl.utils.bound_dictionary",shape="record"];
	"openpyxl.utils.units" [label="<f0> SourceModule| <f1> openpyxl.utils.units",shape="record"];
	"openpyxl.worksheet.page" [label="<f0> SourceModule| <f1> openpyxl.worksheet.page",shape="record"];
	"openpyxl.worksheet.datavalidation" [label="<f0> SourceModule| <f1> openpyxl.worksheet.datavalidation",shape="record"];
	"openpyxl.formula.translate" [label="<f0> SourceModule| <f1> openpyxl.formula.translate",shape="record"];
	"openpyxl.workbook.defined_name" [label="<f0> SourceModule| <f1> openpyxl.workbook.defined_name",shape="record"];
	"openpyxl.workbook.child" [label="<f0> SourceModule| <f1> openpyxl.workbook.child",shape="record"];
	"openpyxl.worksheet.header_footer" [label="<f0> SourceModule| <f1> openpyxl.worksheet.header_footer",shape="record"];
	"openpyxl.utils.escape" [label="<f0> SourceModule| <f1> openpyxl.utils.escape",shape="record"];
	"openpyxl.formatting.formatting" [label="<f0> SourceModule| <f1> openpyxl.formatting.formatting",shape="record"];
	"openpyxl.formatting" [label="<f0> Package| <f1> openpyxl.formatting",shape="record"];
	"openpyxl.formatting.rule" [label="<f0> SourceModule| <f1> openpyxl.formatting.rule",shape="record"];
	"openpyxl.styles.differential" [label="<f0> SourceModule| <f1> openpyxl.styles.differential",shape="record"];
	"openpyxl.compat" [label="<f0> Package| <f1> openpyxl.compat",shape="record"];
	"openpyxl.compat.strings" [label="<f0> SourceModule| <f1> openpyxl.compat.strings",shape="record"];
	"openpyxl.chart.series_factory" [label="<f0> SourceModule| <f1> openpyxl.chart.series_factory",shape="record"];
	"openpyxl.chart.series" [label="<f0> SourceModule| <f1> openpyxl.chart.series",shape="record"];
	"openpyxl.chart.trendline" [label="<f0> SourceModule| <f1> openpyxl.chart.trendline",shape="record"];
	"openpyxl.chart.layout" [label="<f0> SourceModule| <f1> openpyxl.chart.layout",shape="record"];
	"openpyxl.chart.text" [label="<f0> SourceModule| <f1> openpyxl.chart.text",shape="record"];
	"openpyxl.drawing.text" [label="<f0> SourceModule| <f1> openpyxl.drawing.text",shape="record"];
	"openpyxl.drawing" [label="<f0> Package| <f1> openpyxl.drawing",shape="record"];
	"openpyxl.drawing.drawing" [label="<f0> SourceModule| <f1> openpyxl.drawing.drawing",shape="record"];
	"openpyxl.drawing.geometry" [label="<f0> SourceModule| <f1> openpyxl.drawing.geometry",shape="record"];
	"openpyxl.drawing.line" [label="<f0> SourceModule| <f1> openpyxl.drawing.line",shape="record"];
	"openpyxl.drawing.fill" [label="<f0> SourceModule| <f1> openpyxl.drawing.fill",shape="record"];
	"openpyxl.drawing.effect" [label="<f0> SourceModule| <f1> openpyxl.drawing.effect",shape="record"];
	"openpyxl.drawing.colors" [label="<f0> SourceModule| <f1> openpyxl.drawing.colors",shape="record"];
	"openpyxl.chart.marker" [label="<f0> SourceModule| <f1> openpyxl.chart.marker",shape="record"];
	"openpyxl.chart.picture" [label="<f0> SourceModule| <f1> openpyxl.chart.picture",shape="record"];
	"openpyxl.chart.label" [label="<f0> SourceModule| <f1> openpyxl.chart.label",shape="record"];
	"openpyxl.chart.error_bar" [label="<f0> SourceModule| <f1> openpyxl.chart.error_bar",shape="record"];
	"openpyxl.chart.shapes" [label="<f0> SourceModule| <f1> openpyxl.chart.shapes",shape="record"];
	"openpyxl.chart.data_source" [label="<f0> SourceModule| <f1> openpyxl.chart.data_source",shape="record"];
	"openpyxl.chart.surface_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.surface_chart",shape="record"];
	"openpyxl.chart.axis" [label="<f0> SourceModule| <f1> openpyxl.chart.axis",shape="record"];
	"openpyxl.chart.title" [label="<f0> SourceModule| <f1> openpyxl.chart.title",shape="record"];
	"openpyxl.chart.descriptors" [label="<f0> SourceModule| <f1> openpyxl.chart.descriptors",shape="record"];
	"openpyxl.chart._3d" [label="<f0> SourceModule| <f1> openpyxl.chart._3d",shape="record"];
	"openpyxl.chart._chart" [label="<f0> SourceModule| <f1> openpyxl.chart._chart",shape="record"];
	"openpyxl.chart.legend" [label="<f0> SourceModule| <f1> openpyxl.chart.legend",shape="record"];
	"openpyxl.chart.stock_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.stock_chart",shape="record"];
	"openpyxl.chart.updown_bars" [label="<f0> SourceModule| <f1> openpyxl.chart.updown_bars",shape="record"];
	"openpyxl.chart.scatter_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.scatter_chart",shape="record"];
	"openpyxl.chart.radar_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.radar_chart",shape="record"];
	"openpyxl.chart.pie_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.pie_chart",shape="record"];
	"openpyxl.chart.line_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.line_chart",shape="record"];
	"openpyxl.chart.bubble_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.bubble_chart",shape="record"];
	"openpyxl.chart.bar_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.bar_chart",shape="record"];
	"openpyxl.chart.area_chart" [label="<f0> SourceModule| <f1> openpyxl.chart.area_chart",shape="record"];
	"openpyxl.chart.chartspace" [label="<f0> SourceModule| <f1> openpyxl.chart.chartspace",shape="record"];
	"openpyxl.chart.print_settings" [label="<f0> SourceModule| <f1> openpyxl.chart.print_settings",shape="record"];
	"openpyxl.chart.pivot" [label="<f0> SourceModule| <f1> openpyxl.chart.pivot",shape="record"];
	"openpyxl.chart.plotarea" [label="<f0> SourceModule| <f1> openpyxl.chart.plotarea",shape="record"];
	"openpyxl.drawing.image" [label="<f0> SourceModule| <f1> openpyxl.drawing.image",shape="record"];
	"PIL" [label="<f0> MissingModule| <f1> PIL",shape="record"];
	"openpyxl.xml.functions" [label="<f0> SourceModule| <f1> openpyxl.xml.functions",shape="record"];
	"'defusedxml.ElementTree'" [label="<f0> MissingModule| <f1> 'defusedxml.ElementTree'",shape="record"];
	"et_xmlfile.xmlfile" [label="<f0> SourceModule| <f1> et_xmlfile.xmlfile",shape="record"];
	"et_xmlfile.incremental_tree" [label="<f0> SourceModule| <f1> et_xmlfile.incremental_tree",shape="record"];
	"et_xmlfile" [label="<f0> Package| <f1> et_xmlfile",shape="record"];
	"xml.etree.ElementTree" [label="<f0> SourceModule| <f1> xml.etree.ElementTree",shape="record"];
	"xml.etree.ElementPath" [label="<f0> SourceModule| <f1> xml.etree.ElementPath",shape="record"];
	"xml.etree" [label="<f0> Package| <f1> xml.etree",shape="record"];
	"'lxml.etree'" [label="<f0> MissingModule| <f1> 'lxml.etree'",shape="record"];
	"openpyxl.drawing.spreadsheet_drawing" [label="<f0> SourceModule| <f1> openpyxl.drawing.spreadsheet_drawing",shape="record"];
	"openpyxl.drawing.relation" [label="<f0> SourceModule| <f1> openpyxl.drawing.relation",shape="record"];
	"openpyxl.drawing.picture" [label="<f0> SourceModule| <f1> openpyxl.drawing.picture",shape="record"];
	"openpyxl.drawing.properties" [label="<f0> SourceModule| <f1> openpyxl.drawing.properties",shape="record"];
	"openpyxl.drawing.graphic" [label="<f0> SourceModule| <f1> openpyxl.drawing.graphic",shape="record"];
	"openpyxl.drawing.connector" [label="<f0> SourceModule| <f1> openpyxl.drawing.connector",shape="record"];
	"openpyxl.drawing.xdr" [label="<f0> SourceModule| <f1> openpyxl.drawing.xdr",shape="record"];
	"openpyxl.worksheet.table" [label="<f0> SourceModule| <f1> openpyxl.worksheet.table",shape="record"];
	"openpyxl.worksheet.related" [label="<f0> SourceModule| <f1> openpyxl.worksheet.related",shape="record"];
	"openpyxl.chartsheet" [label="<f0> Package| <f1> openpyxl.chartsheet",shape="record"];
	"openpyxl.chartsheet.chartsheet" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.chartsheet",shape="record"];
	"openpyxl.chartsheet.publish" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.publish",shape="record"];
	"openpyxl.chartsheet.custom" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.custom",shape="record"];
	"openpyxl.chartsheet.views" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.views",shape="record"];
	"openpyxl.chartsheet.protection" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.protection",shape="record"];
	"openpyxl.chartsheet.properties" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.properties",shape="record"];
	"openpyxl.chartsheet.relation" [label="<f0> SourceModule| <f1> openpyxl.chartsheet.relation",shape="record"];
	"openpyxl.worksheet.drawing" [label="<f0> SourceModule| <f1> openpyxl.worksheet.drawing",shape="record"];
	"openpyxl.worksheet._reader" [label="<f0> SourceModule| <f1> openpyxl.worksheet._reader",shape="record"];
	"openpyxl.worksheet._read_only" [label="<f0> SourceModule| <f1> openpyxl.worksheet._read_only",shape="record"];
	"openpyxl.cell.read_only" [label="<f0> SourceModule| <f1> openpyxl.cell.read_only",shape="record"];
	"openpyxl.packaging.relationship" [label="<f0> SourceModule| <f1> openpyxl.packaging.relationship",shape="record"];
	"openpyxl.packaging" [label="<f0> Package| <f1> openpyxl.packaging",shape="record"];
	"openpyxl.descriptors.container" [label="<f0> SourceModule| <f1> openpyxl.descriptors.container",shape="record"];
	"openpyxl.packaging.manifest" [label="<f0> SourceModule| <f1> openpyxl.packaging.manifest",shape="record"];
	"openpyxl.packaging.custom" [label="<f0> SourceModule| <f1> openpyxl.packaging.custom",shape="record"];
	"openpyxl.packaging.core" [label="<f0> SourceModule| <f1> openpyxl.packaging.core",shape="record"];
	"openpyxl.styles.stylesheet" [label="<f0> SourceModule| <f1> openpyxl.styles.stylesheet",shape="record"];
	"openpyxl.styles.table" [label="<f0> SourceModule| <f1> openpyxl.styles.table",shape="record"];
	"openpyxl.reader.workbook" [label="<f0> SourceModule| <f1> openpyxl.reader.workbook",shape="record"];
	"openpyxl.pivot.record" [label="<f0> SourceModule| <f1> openpyxl.pivot.record",shape="record"];
	"openpyxl.pivot" [label="<f0> Package| <f1> openpyxl.pivot",shape="record"];
	"openpyxl.pivot.fields" [label="<f0> SourceModule| <f1> openpyxl.pivot.fields",shape="record"];
	"openpyxl.pivot.cache" [label="<f0> SourceModule| <f1> openpyxl.pivot.cache",shape="record"];
	"openpyxl.workbook.external_link.external" [label="<f0> SourceModule| <f1> openpyxl.workbook.external_link.external",shape="record"];
	"openpyxl.workbook.external_link" [label="<f0> Package| <f1> openpyxl.workbook.external_link",shape="record"];
	"openpyxl.packaging.workbook" [label="<f0> SourceModule| <f1> openpyxl.packaging.workbook",shape="record"];
	"openpyxl.workbook.web" [label="<f0> SourceModule| <f1> openpyxl.workbook.web",shape="record"];
	"openpyxl.workbook.views" [label="<f0> SourceModule| <f1> openpyxl.workbook.views",shape="record"];
	"openpyxl.workbook.smart_tags" [label="<f0> SourceModule| <f1> openpyxl.workbook.smart_tags",shape="record"];
	"openpyxl.workbook.protection" [label="<f0> SourceModule| <f1> openpyxl.workbook.protection",shape="record"];
	"openpyxl.workbook.properties" [label="<f0> SourceModule| <f1> openpyxl.workbook.properties",shape="record"];
	"openpyxl.workbook.function_group" [label="<f0> SourceModule| <f1> openpyxl.workbook.function_group",shape="record"];
	"openpyxl.workbook.external_reference" [label="<f0> SourceModule| <f1> openpyxl.workbook.external_reference",shape="record"];
	"openpyxl.reader.strings" [label="<f0> SourceModule| <f1> openpyxl.reader.strings",shape="record"];
	"openpyxl.comments.comment_sheet" [label="<f0> SourceModule| <f1> openpyxl.comments.comment_sheet",shape="record"];
	"openpyxl.comments" [label="<f0> Package| <f1> openpyxl.comments",shape="record"];
	"openpyxl.comments.shape_writer" [label="<f0> SourceModule| <f1> openpyxl.comments.shape_writer",shape="record"];
	"openpyxl.comments.comments" [label="<f0> SourceModule| <f1> openpyxl.comments.comments",shape="record"];
	"openpyxl.comments.author" [label="<f0> SourceModule| <f1> openpyxl.comments.author",shape="record"];
	"openpyxl.cell" [label="<f0> Package| <f1> openpyxl.cell",shape="record"];
	"openpyxl.xml.constants" [label="<f0> SourceModule| <f1> openpyxl.xml.constants",shape="record"];
	"openpyxl.utils.exceptions" [label="<f0> SourceModule| <f1> openpyxl.utils.exceptions",shape="record"];
	"openpyxl.tests" [label="<f0> MissingModule| <f1> openpyxl.tests",shape="record"];
	"openpyxl.pivot.table" [label="<f0> SourceModule| <f1> openpyxl.pivot.table",shape="record"];
	"openpyxl.workbook" [label="<f0> Package| <f1> openpyxl.workbook",shape="record"];
	"openpyxl.workbook.workbook" [label="<f0> SourceModule| <f1> openpyxl.workbook.workbook",shape="record"];
	"openpyxl.writer.excel" [label="<f0> SourceModule| <f1> openpyxl.writer.excel",shape="record"];
	"openpyxl.writer" [label="<f0> Package| <f1> openpyxl.writer",shape="record"];
	"openpyxl.packaging.extended" [label="<f0> SourceModule| <f1> openpyxl.packaging.extended",shape="record"];
	"openpyxl.writer.theme" [label="<f0> SourceModule| <f1> openpyxl.writer.theme",shape="record"];
	"openpyxl.workbook._writer" [label="<f0> SourceModule| <f1> openpyxl.workbook._writer",shape="record"];
	"openpyxl.worksheet._writer" [label="<f0> SourceModule| <f1> openpyxl.worksheet._writer",shape="record"];
	"openpyxl.cell._writer" [label="<f0> SourceModule| <f1> openpyxl.cell._writer",shape="record"];
	"openpyxl.worksheet.copier" [label="<f0> SourceModule| <f1> openpyxl.worksheet.copier",shape="record"];
	"openpyxl.worksheet._write_only" [label="<f0> SourceModule| <f1> openpyxl.worksheet._write_only",shape="record"];
	"openpyxl.xml" [label="<f0> Package| <f1> openpyxl.xml",shape="record"];
	"defusedxml" [label="<f0> MissingModule| <f1> defusedxml",shape="record"];
	"lxml" [label="<f0> MissingModule| <f1> lxml",shape="record"];
	"openpyxl.compat.numbers" [label="<f0> SourceModule| <f1> openpyxl.compat.numbers",shape="record"];
	"numpy" [label="<f0> Package| <f1> numpy",shape="record"];
	"numpy._core._dtype_ctypes" [label="<f0> SourceModule| <f1> numpy._core._dtype_ctypes",shape="record"];
	"numpy._pytesttester" [label="<f0> SourceModule| <f1> numpy._pytesttester",shape="record"];
	"numpy.strings" [label="<f0> Package| <f1> numpy.strings",shape="record"];
	"numpy._core.strings" [label="<f0> SourceModule| <f1> numpy._core.strings",shape="record"];
	"numpy._core.umath" [label="<f0> SourceModule| <f1> numpy._core.umath",shape="record"];
	"numpy._core._multiarray_umath" [label="<f0> Extension| <f1> numpy._core._multiarray_umath",shape="record"];
	"numpy._core.overrides" [label="<f0> SourceModule| <f1> numpy._core.overrides",shape="record"];
	"numpy._utils._inspect" [label="<f0> SourceModule| <f1> numpy._utils._inspect",shape="record"];
	"numpy._utils" [label="<f0> Package| <f1> numpy._utils",shape="record"];
	"numpy._utils._convertions" [label="<f0> SourceModule| <f1> numpy._utils._convertions",shape="record"];
	"numpy._core.multiarray" [label="<f0> SourceModule| <f1> numpy._core.multiarray",shape="record"];
	"numpy.core" [label="<f0> Package| <f1> numpy.core",shape="record"];
	"numpy.core._utils" [label="<f0> SourceModule| <f1> numpy.core._utils",shape="record"];
	"numpy.char" [label="<f0> Package| <f1> numpy.char",shape="record"];
	"numpy._core.defchararray" [label="<f0> SourceModule| <f1> numpy._core.defchararray",shape="record"];
	"numpy._core.numerictypes" [label="<f0> SourceModule| <f1> numpy._core.numerictypes",shape="record"];
	"numpy._core._type_aliases" [label="<f0> SourceModule| <f1> numpy._core._type_aliases",shape="record"];
	"numpy._core._string_helpers" [label="<f0> SourceModule| <f1> numpy._core._string_helpers",shape="record"];
	"numpy._core._dtype" [label="<f0> SourceModule| <f1> numpy._core._dtype",shape="record"];
	"numpy._core.numeric" [label="<f0> SourceModule| <f1> numpy._core.numeric",shape="record"];
	"numpy._core.fromnumeric" [label="<f0> SourceModule| <f1> numpy._core.fromnumeric",shape="record"];
	"numpy._core._methods" [label="<f0> SourceModule| <f1> numpy._core._methods",shape="record"];
	"numpy._core.arrayprint" [label="<f0> SourceModule| <f1> numpy._core.arrayprint",shape="record"];
	"_dummy_thread" [label="<f0> MissingModule| <f1> _dummy_thread",shape="record"];
	"numpy._core._asarray" [label="<f0> SourceModule| <f1> numpy._core._asarray",shape="record"];
	"numpy._core._ufunc_config" [label="<f0> SourceModule| <f1> numpy._core._ufunc_config",shape="record"];
	"numpy._core.shape_base" [label="<f0> SourceModule| <f1> numpy._core.shape_base",shape="record"];
	"numpy.rec" [label="<f0> Package| <f1> numpy.rec",shape="record"];
	"numpy._core.records" [label="<f0> SourceModule| <f1> numpy._core.records",shape="record"];
	"numpy.typing" [label="<f0> Package| <f1> numpy.typing",shape="record"];
	"numpy._typing._add_docstring" [label="<f0> SourceModule| <f1> numpy._typing._add_docstring",shape="record"];
	"numpy._typing._array_like" [label="<f0> SourceModule| <f1> numpy._typing._array_like",shape="record"];
	"numpy._typing._shape" [label="<f0> SourceModule| <f1> numpy._typing._shape",shape="record"];
	"numpy._typing._nested_sequence" [label="<f0> SourceModule| <f1> numpy._typing._nested_sequence",shape="record"];
	"numpy._typing._nbit_base" [label="<f0> SourceModule| <f1> numpy._typing._nbit_base",shape="record"];
	"numpy._typing" [label="<f0> Package| <f1> numpy._typing",shape="record"];
	"numpy._typing._ufunc" [label="<f0> SourceModule| <f1> numpy._typing._ufunc",shape="record"];
	"numpy._typing._scalars" [label="<f0> SourceModule| <f1> numpy._typing._scalars",shape="record"];
	"numpy._typing._nbit" [label="<f0> SourceModule| <f1> numpy._typing._nbit",shape="record"];
	"numpy._typing._dtype_like" [label="<f0> SourceModule| <f1> numpy._typing._dtype_like",shape="record"];
	"numpy._typing._char_codes" [label="<f0> SourceModule| <f1> numpy._typing._char_codes",shape="record"];
	"numpy.f2py" [label="<f0> Package| <f1> numpy.f2py",shape="record"];
	"numpy.f2py.diagnose" [label="<f0> SourceModule| <f1> numpy.f2py.diagnose",shape="record"];
	"'numpy_distutils.cpuinfo'" [label="<f0> MissingModule| <f1> 'numpy_distutils.cpuinfo'",shape="record"];
	"'numpy_distutils.fcompiler'" [label="<f0> MissingModule| <f1> 'numpy_distutils.fcompiler'",shape="record"];
	"'numpy_distutils.command'" [label="<f0> MissingModule| <f1> 'numpy_distutils.command'",shape="record"];
	"numpy_distutils" [label="<f0> MissingModule| <f1> numpy_distutils",shape="record"];
	"numpy.f2py.f2py2e" [label="<f0> SourceModule| <f1> numpy.f2py.f2py2e",shape="record"];
	"numpy.f2py.crackfortran" [label="<f0> SourceModule| <f1> numpy.f2py.crackfortran",shape="record"];
	"charset_normalizer" [label="<f0> Package| <f1> charset_normalizer",shape="record"];
	"charset_normalizer.md__mypyc" [label="<f0> Extension| <f1> charset_normalizer.md__mypyc",shape="record"];
	"charset_normalizer.version" [label="<f0> SourceModule| <f1> charset_normalizer.version",shape="record"];
	"charset_normalizer.utils" [label="<f0> SourceModule| <f1> charset_normalizer.utils",shape="record"];
	"charset_normalizer.constant" [label="<f0> SourceModule| <f1> charset_normalizer.constant",shape="record"];
	"_multibytecodec" [label="<f0> BuiltinModule| <f1> _multibytecodec",shape="record"];
	"charset_normalizer.models" [label="<f0> SourceModule| <f1> charset_normalizer.models",shape="record"];
	"charset_normalizer.cd" [label="<f0> SourceModule| <f1> charset_normalizer.cd",shape="record"];
	"charset_normalizer.md" [label="<f0> Extension| <f1> charset_normalizer.md",shape="record"];
	"json" [label="<f0> Package| <f1> json",shape="record"];
	"json.encoder" [label="<f0> SourceModule| <f1> json.encoder",shape="record"];
	"json.decoder" [label="<f0> SourceModule| <f1> json.decoder",shape="record"];
	"json.scanner" [label="<f0> SourceModule| <f1> json.scanner",shape="record"];
	"charset_normalizer.legacy" [label="<f0> SourceModule| <f1> charset_normalizer.legacy",shape="record"];
	"charset_normalizer.api" [label="<f0> SourceModule| <f1> charset_normalizer.api",shape="record"];
	"fileinput" [label="<f0> SourceModule| <f1> fileinput",shape="record"];
	"numpy.f2py._backends" [label="<f0> Package| <f1> numpy.f2py._backends",shape="record"];
	"numpy.f2py._backends._distutils" [label="<f0> SourceModule| <f1> numpy.f2py._backends._distutils",shape="record"];
	"numpy.f2py._backends._backend" [label="<f0> SourceModule| <f1> numpy.f2py._backends._backend",shape="record"];
	"numpy.f2py._backends._meson" [label="<f0> SourceModule| <f1> numpy.f2py._backends._meson",shape="record"];
	"numpy.f2py.rules" [label="<f0> SourceModule| <f1> numpy.f2py.rules",shape="record"];
	"numpy.f2py.use_rules" [label="<f0> SourceModule| <f1> numpy.f2py.use_rules",shape="record"];
	"numpy.f2py.f90mod_rules" [label="<f0> SourceModule| <f1> numpy.f2py.f90mod_rules",shape="record"];
	"numpy.f2py.common_rules" [label="<f0> SourceModule| <f1> numpy.f2py.common_rules",shape="record"];
	"numpy.f2py.func2subr" [label="<f0> SourceModule| <f1> numpy.f2py.func2subr",shape="record"];
	"numpy.f2py._isocbind" [label="<f0> SourceModule| <f1> numpy.f2py._isocbind",shape="record"];
	"numpy.f2py.auxfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.auxfuncs",shape="record"];
	"numpy.f2py.symbolic" [label="<f0> SourceModule| <f1> numpy.f2py.symbolic",shape="record"];
	"numpy.f2py.cb_rules" [label="<f0> SourceModule| <f1> numpy.f2py.cb_rules",shape="record"];
	"numpy.f2py.capi_maps" [label="<f0> SourceModule| <f1> numpy.f2py.capi_maps",shape="record"];
	"numpy.f2py.cfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.cfuncs",shape="record"];
	"numpy.f2py.__version__" [label="<f0> SourceModule| <f1> numpy.f2py.__version__",shape="record"];
	"numpy.matlib" [label="<f0> SourceModule| <f1> numpy.matlib",shape="record"];
	"numpy.matrixlib.defmatrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.defmatrix",shape="record"];
	"numpy.testing" [label="<f0> Package| <f1> numpy.testing",shape="record"];
	"numpy.testing._private.utils" [label="<f0> SourceModule| <f1> numpy.testing._private.utils",shape="record"];
	"psutil" [label="<f0> MissingModule| <f1> psutil",shape="record"];
	"doctest" [label="<f0> SourceModule| <f1> doctest",shape="record"];
	"pdb" [label="<f0> SourceModule| <f1> pdb",shape="record"];
	"pydoc" [label="<f0> SourceModule| <f1> pydoc",shape="record"];
	"webbrowser" [label="<f0> SourceModule| <f1> webbrowser",shape="record"];
	"http.server" [label="<f0> SourceModule| <f1> http.server",shape="record"];
	"socketserver" [label="<f0> SourceModule| <f1> socketserver",shape="record"];
	"html" [label="<f0> Package| <f1> html",shape="record"];
	"html.entities" [label="<f0> SourceModule| <f1> html.entities",shape="record"];
	"pydoc_data.topics" [label="<f0> SourceModule| <f1> pydoc_data.topics",shape="record"];
	"pydoc_data" [label="<f0> Package| <f1> pydoc_data",shape="record"];
	"tty" [label="<f0> SourceModule| <f1> tty",shape="record"];
	"shlex" [label="<f0> SourceModule| <f1> shlex",shape="record"];
	"readline" [label="<f0> MissingModule| <f1> readline",shape="record"];
	"glob" [label="<f0> SourceModule| <f1> glob",shape="record"];
	"code" [label="<f0> SourceModule| <f1> code",shape="record"];
	"codeop" [label="<f0> SourceModule| <f1> codeop",shape="record"];
	"bdb" [label="<f0> SourceModule| <f1> bdb",shape="record"];
	"cmd" [label="<f0> SourceModule| <f1> cmd",shape="record"];
	"win32pdh" [label="<f0> MissingModule| <f1> win32pdh",shape="record"];
	"numpy.linalg._umath_linalg" [label="<f0> Extension| <f1> numpy.linalg._umath_linalg",shape="record"];
	"numpy.testing._private.extbuild" [label="<f0> SourceModule| <f1> numpy.testing._private.extbuild",shape="record"];
	"numpy.testing.overrides" [label="<f0> SourceModule| <f1> numpy.testing.overrides",shape="record"];
	"numpy.lib.recfunctions" [label="<f0> SourceModule| <f1> numpy.lib.recfunctions",shape="record"];
	"numpy.lib._iotools" [label="<f0> SourceModule| <f1> numpy.lib._iotools",shape="record"];
	"numpy.ma.mrecords" [label="<f0> SourceModule| <f1> numpy.ma.mrecords",shape="record"];
	"numpy.testing._private" [label="<f0> Package| <f1> numpy.testing._private",shape="record"];
	"numpy.exceptions" [label="<f0> SourceModule| <f1> numpy.exceptions",shape="record"];
	"numpy.ctypeslib" [label="<f0> Package| <f1> numpy.ctypeslib",shape="record"];
	"numpy.ctypeslib._ctypeslib" [label="<f0> SourceModule| <f1> numpy.ctypeslib._ctypeslib",shape="record"];
	"numpy._core._internal" [label="<f0> SourceModule| <f1> numpy._core._internal",shape="record"];
	"numpy.ma" [label="<f0> Package| <f1> numpy.ma",shape="record"];
	"numpy.ma.extras" [label="<f0> SourceModule| <f1> numpy.ma.extras",shape="record"];
	"numpy.lib.array_utils" [label="<f0> SourceModule| <f1> numpy.lib.array_utils",shape="record"];
	"numpy.lib._array_utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._array_utils_impl",shape="record"];
	"numpy.ma.core" [label="<f0> SourceModule| <f1> numpy.ma.core",shape="record"];
	"numpy.polynomial" [label="<f0> Package| <f1> numpy.polynomial",shape="record"];
	"numpy.polynomial._polybase" [label="<f0> SourceModule| <f1> numpy.polynomial._polybase",shape="record"];
	"numpy.polynomial.polynomial" [label="<f0> SourceModule| <f1> numpy.polynomial.polynomial",shape="record"];
	"numpy.polynomial.legendre" [label="<f0> SourceModule| <f1> numpy.polynomial.legendre",shape="record"];
	"numpy.polynomial.laguerre" [label="<f0> SourceModule| <f1> numpy.polynomial.laguerre",shape="record"];
	"numpy.polynomial.hermite_e" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite_e",shape="record"];
	"numpy.polynomial.hermite" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite",shape="record"];
	"numpy.polynomial.chebyshev" [label="<f0> SourceModule| <f1> numpy.polynomial.chebyshev",shape="record"];
	"numpy.polynomial.polyutils" [label="<f0> SourceModule| <f1> numpy.polynomial.polyutils",shape="record"];
	"numpy.random" [label="<f0> Package| <f1> numpy.random",shape="record"];
	"numpy.random.mtrand" [label="<f0> Extension| <f1> numpy.random.mtrand",shape="record"];
	"numpy.random.bit_generator" [label="<f0> Extension| <f1> numpy.random.bit_generator",shape="record"];
	"numpy.random._sfc64" [label="<f0> Extension| <f1> numpy.random._sfc64",shape="record"];
	"numpy.random._philox" [label="<f0> Extension| <f1> numpy.random._philox",shape="record"];
	"numpy.random._pcg64" [label="<f0> Extension| <f1> numpy.random._pcg64",shape="record"];
	"numpy.random._mt19937" [label="<f0> Extension| <f1> numpy.random._mt19937",shape="record"];
	"numpy.random._generator" [label="<f0> Extension| <f1> numpy.random._generator",shape="record"];
	"numpy.random._pickle" [label="<f0> SourceModule| <f1> numpy.random._pickle",shape="record"];
	"numpy.random.RandomState" [label="<f0> MissingModule| <f1> numpy.random.RandomState",shape="record"];
	"numpy.random._common" [label="<f0> Extension| <f1> numpy.random._common",shape="record"];
	"numpy.random._bounded_integers" [label="<f0> Extension| <f1> numpy.random._bounded_integers",shape="record"];
	"numpy.dtypes" [label="<f0> SourceModule| <f1> numpy.dtypes",shape="record"];
	"numpy.fft" [label="<f0> Package| <f1> numpy.fft",shape="record"];
	"numpy.fft.helper" [label="<f0> SourceModule| <f1> numpy.fft.helper",shape="record"];
	"numpy.fft._pocketfft" [label="<f0> SourceModule| <f1> numpy.fft._pocketfft",shape="record"];
	"numpy.fft._pocketfft_umath" [label="<f0> Extension| <f1> numpy.fft._pocketfft_umath",shape="record"];
	"numpy.fft._helper" [label="<f0> SourceModule| <f1> numpy.fft._helper",shape="record"];
	"numpy.linalg" [label="<f0> Package| <f1> numpy.linalg",shape="record"];
	"numpy.linalg.linalg" [label="<f0> SourceModule| <f1> numpy.linalg.linalg",shape="record"];
	"numpy.linalg._linalg" [label="<f0> SourceModule| <f1> numpy.linalg._linalg",shape="record"];
	"numpy._array_api_info" [label="<f0> SourceModule| <f1> numpy._array_api_info",shape="record"];
	"numpy.lib._utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._utils_impl",shape="record"];
	"threadpoolctl" [label="<f0> MissingModule| <f1> threadpoolctl",shape="record"];
	"numpy.lib._ufunclike_impl" [label="<f0> SourceModule| <f1> numpy.lib._ufunclike_impl",shape="record"];
	"numpy.lib._type_check_impl" [label="<f0> SourceModule| <f1> numpy.lib._type_check_impl",shape="record"];
	"numpy._core.getlimits" [label="<f0> SourceModule| <f1> numpy._core.getlimits",shape="record"];
	"numpy._core._machar" [label="<f0> SourceModule| <f1> numpy._core._machar",shape="record"];
	"numpy.lib._twodim_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._twodim_base_impl",shape="record"];
	"numpy.lib._stride_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._stride_tricks_impl",shape="record"];
	"numpy.lib._shape_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._shape_base_impl",shape="record"];
	"numpy.lib._polynomial_impl" [label="<f0> SourceModule| <f1> numpy.lib._polynomial_impl",shape="record"];
	"numpy.lib._npyio_impl" [label="<f0> SourceModule| <f1> numpy.lib._npyio_impl",shape="record"];
	"numpy.lib._format_impl" [label="<f0> SourceModule| <f1> numpy.lib._format_impl",shape="record"];
	"numpy.lib._datasource" [label="<f0> SourceModule| <f1> numpy.lib._datasource",shape="record"];
	"numpy.lib.format" [label="<f0> SourceModule| <f1> numpy.lib.format",shape="record"];
	"numpy.lib._nanfunctions_impl" [label="<f0> SourceModule| <f1> numpy.lib._nanfunctions_impl",shape="record"];
	"numpy.lib._index_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._index_tricks_impl",shape="record"];
	"numpy.lib.stride_tricks" [label="<f0> SourceModule| <f1> numpy.lib.stride_tricks",shape="record"];
	"numpy.lib._histograms_impl" [label="<f0> SourceModule| <f1> numpy.lib._histograms_impl",shape="record"];
	"numpy.lib._function_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._function_base_impl",shape="record"];
	"numpy.lib._arraysetops_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraysetops_impl",shape="record"];
	"numpy.lib._arraypad_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraypad_impl",shape="record"];
	"numpy.lib.scimath" [label="<f0> SourceModule| <f1> numpy.lib.scimath",shape="record"];
	"numpy.lib._scimath_impl" [label="<f0> SourceModule| <f1> numpy.lib._scimath_impl",shape="record"];
	"numpy.matrixlib" [label="<f0> Package| <f1> numpy.matrixlib",shape="record"];
	"numpy.lib" [label="<f0> Package| <f1> numpy.lib",shape="record"];
	"numpy.lib.npyio" [label="<f0> SourceModule| <f1> numpy.lib.npyio",shape="record"];
	"numpy.lib.mixins" [label="<f0> SourceModule| <f1> numpy.lib.mixins",shape="record"];
	"numpy.lib.introspect" [label="<f0> SourceModule| <f1> numpy.lib.introspect",shape="record"];
	"numpy.lib._version" [label="<f0> SourceModule| <f1> numpy.lib._version",shape="record"];
	"numpy.lib._arrayterator_impl" [label="<f0> SourceModule| <f1> numpy.lib._arrayterator_impl",shape="record"];
	"numpy._core.function_base" [label="<f0> SourceModule| <f1> numpy._core.function_base",shape="record"];
	"numpy._core.zeros" [label="<f0> MissingModule| <f1> numpy._core.zeros",shape="record"];
	"numpy._core.vstack" [label="<f0> MissingModule| <f1> numpy._core.vstack",shape="record"];
	"numpy._core.void" [label="<f0> MissingModule| <f1> numpy._core.void",shape="record"];
	"numpy._core.vecmat" [label="<f0> MissingModule| <f1> numpy._core.vecmat",shape="record"];
	"numpy._core.vecdot" [label="<f0> MissingModule| <f1> numpy._core.vecdot",shape="record"];
	"numpy._core.ushort" [label="<f0> MissingModule| <f1> numpy._core.ushort",shape="record"];
	"numpy._core.unsignedinteger" [label="<f0> MissingModule| <f1> numpy._core.unsignedinteger",shape="record"];
	"numpy._core.ulonglong" [label="<f0> MissingModule| <f1> numpy._core.ulonglong",shape="record"];
	"numpy._core.ulong" [label="<f0> MissingModule| <f1> numpy._core.ulong",shape="record"];
	"numpy._core.uintp" [label="<f0> MissingModule| <f1> numpy._core.uintp",shape="record"];
	"numpy._core.uintc" [label="<f0> MissingModule| <f1> numpy._core.uintc",shape="record"];
	"numpy._core.uint64" [label="<f0> MissingModule| <f1> numpy._core.uint64",shape="record"];
	"numpy._core.uint32" [label="<f0> MissingModule| <f1> numpy._core.uint32",shape="record"];
	"numpy._core.uint16" [label="<f0> MissingModule| <f1> numpy._core.uint16",shape="record"];
	"numpy._core.uint" [label="<f0> MissingModule| <f1> numpy._core.uint",shape="record"];
	"numpy._core.ubyte" [label="<f0> MissingModule| <f1> numpy._core.ubyte",shape="record"];
	"numpy._core.trunc" [label="<f0> MissingModule| <f1> numpy._core.trunc",shape="record"];
	"numpy._core.true_divide" [label="<f0> MissingModule| <f1> numpy._core.true_divide",shape="record"];
	"numpy._core.transpose" [label="<f0> MissingModule| <f1> numpy._core.transpose",shape="record"];
	"numpy._core.trace" [label="<f0> MissingModule| <f1> numpy._core.trace",shape="record"];
	"numpy._core.timedelta64" [label="<f0> MissingModule| <f1> numpy._core.timedelta64",shape="record"];
	"numpy._core.tensordot" [label="<f0> MissingModule| <f1> numpy._core.tensordot",shape="record"];
	"numpy._core.tanh" [label="<f0> MissingModule| <f1> numpy._core.tanh",shape="record"];
	"numpy._core.tan" [label="<f0> MissingModule| <f1> numpy._core.tan",shape="record"];
	"numpy._core.swapaxes" [label="<f0> MissingModule| <f1> numpy._core.swapaxes",shape="record"];
	"numpy._core.sum" [label="<f0> MissingModule| <f1> numpy._core.sum",shape="record"];
	"numpy._core.subtract" [label="<f0> MissingModule| <f1> numpy._core.subtract",shape="record"];
	"numpy._core.str_" [label="<f0> MissingModule| <f1> numpy._core.str_",shape="record"];
	"numpy._core.square" [label="<f0> MissingModule| <f1> numpy._core.square",shape="record"];
	"numpy._core.sqrt" [label="<f0> MissingModule| <f1> numpy._core.sqrt",shape="record"];
	"numpy._core.spacing" [label="<f0> MissingModule| <f1> numpy._core.spacing",shape="record"];
	"numpy._core.sort" [label="<f0> MissingModule| <f1> numpy._core.sort",shape="record"];
	"numpy._core.sinh" [label="<f0> MissingModule| <f1> numpy._core.sinh",shape="record"];
	"numpy._core.single" [label="<f0> MissingModule| <f1> numpy._core.single",shape="record"];
	"numpy._core.signedinteger" [label="<f0> MissingModule| <f1> numpy._core.signedinteger",shape="record"];
	"numpy._core.signbit" [label="<f0> MissingModule| <f1> numpy._core.signbit",shape="record"];
	"numpy._core.sign" [label="<f0> MissingModule| <f1> numpy._core.sign",shape="record"];
	"numpy._core.short" [label="<f0> MissingModule| <f1> numpy._core.short",shape="record"];
	"numpy._core.rint" [label="<f0> MissingModule| <f1> numpy._core.rint",shape="record"];
	"numpy._core.right_shift" [label="<f0> MissingModule| <f1> numpy._core.right_shift",shape="record"];
	"numpy._core.result_type" [label="<f0> MissingModule| <f1> numpy._core.result_type",shape="record"];
	"numpy._core.remainder" [label="<f0> MissingModule| <f1> numpy._core.remainder",shape="record"];
	"numpy._core.reciprocal" [label="<f0> MissingModule| <f1> numpy._core.reciprocal",shape="record"];
	"numpy._core.radians" [label="<f0> MissingModule| <f1> numpy._core.radians",shape="record"];
	"numpy._core.rad2deg" [label="<f0> MissingModule| <f1> numpy._core.rad2deg",shape="record"];
	"numpy._core.prod" [label="<f0> MissingModule| <f1> numpy._core.prod",shape="record"];
	"numpy._core.printoptions" [label="<f0> SourceModule| <f1> numpy._core.printoptions",shape="record"];
	"numpy._core.power" [label="<f0> MissingModule| <f1> numpy._core.power",shape="record"];
	"numpy._core.positive" [label="<f0> MissingModule| <f1> numpy._core.positive",shape="record"];
	"numpy._core.pi" [label="<f0> MissingModule| <f1> numpy._core.pi",shape="record"];
	"numpy._core.outer" [label="<f0> MissingModule| <f1> numpy._core.outer",shape="record"];
	"numpy._core.ones" [label="<f0> MissingModule| <f1> numpy._core.ones",shape="record"];
	"numpy._core.object_" [label="<f0> MissingModule| <f1> numpy._core.object_",shape="record"];
	"numpy._core.number" [label="<f0> MissingModule| <f1> numpy._core.number",shape="record"];
	"numpy._core.not_equal" [label="<f0> MissingModule| <f1> numpy._core.not_equal",shape="record"];
	"numpy._core.newaxis" [label="<f0> MissingModule| <f1> numpy._core.newaxis",shape="record"];
	"numpy._core.negative" [label="<f0> MissingModule| <f1> numpy._core.negative",shape="record"];
	"numpy._core.ndarray" [label="<f0> MissingModule| <f1> numpy._core.ndarray",shape="record"];
	"numpy._core.multiply" [label="<f0> MissingModule| <f1> numpy._core.multiply",shape="record"];
	"numpy._core.moveaxis" [label="<f0> MissingModule| <f1> numpy._core.moveaxis",shape="record"];
	"numpy._core.modf" [label="<f0> MissingModule| <f1> numpy._core.modf",shape="record"];
	"numpy._core.mod" [label="<f0> MissingModule| <f1> numpy._core.mod",shape="record"];
	"numpy._core.minimum" [label="<f0> MissingModule| <f1> numpy._core.minimum",shape="record"];
	"numpy._core.memmap" [label="<f0> SourceModule| <f1> numpy._core.memmap",shape="record"];
	"numpy._core.maximum" [label="<f0> MissingModule| <f1> numpy._core.maximum",shape="record"];
	"numpy._core.max" [label="<f0> MissingModule| <f1> numpy._core.max",shape="record"];
	"numpy._core.matvec" [label="<f0> MissingModule| <f1> numpy._core.matvec",shape="record"];
	"numpy._core.matrix_transpose" [label="<f0> MissingModule| <f1> numpy._core.matrix_transpose",shape="record"];
	"numpy._core.matmul" [label="<f0> MissingModule| <f1> numpy._core.matmul",shape="record"];
	"numpy._core.longlong" [label="<f0> MissingModule| <f1> numpy._core.longlong",shape="record"];
	"numpy._core.longdouble" [label="<f0> MissingModule| <f1> numpy._core.longdouble",shape="record"];
	"numpy._core.long" [label="<f0> MissingModule| <f1> numpy._core.long",shape="record"];
	"numpy._core.logical_xor" [label="<f0> MissingModule| <f1> numpy._core.logical_xor",shape="record"];
	"numpy._core.logical_or" [label="<f0> MissingModule| <f1> numpy._core.logical_or",shape="record"];
	"numpy._core.logical_not" [label="<f0> MissingModule| <f1> numpy._core.logical_not",shape="record"];
	"numpy._core.logical_and" [label="<f0> MissingModule| <f1> numpy._core.logical_and",shape="record"];
	"numpy._core.logaddexp2" [label="<f0> MissingModule| <f1> numpy._core.logaddexp2",shape="record"];
	"numpy._core.logaddexp" [label="<f0> MissingModule| <f1> numpy._core.logaddexp",shape="record"];
	"numpy._core.log2" [label="<f0> MissingModule| <f1> numpy._core.log2",shape="record"];
	"numpy._core.log1p" [label="<f0> MissingModule| <f1> numpy._core.log1p",shape="record"];
	"numpy._core.log" [label="<f0> MissingModule| <f1> numpy._core.log",shape="record"];
	"numpy._core.linspace" [label="<f0> MissingModule| <f1> numpy._core.linspace",shape="record"];
	"numpy._core.less_equal" [label="<f0> MissingModule| <f1> numpy._core.less_equal",shape="record"];
	"numpy._core.less" [label="<f0> MissingModule| <f1> numpy._core.less",shape="record"];
	"numpy._core.left_shift" [label="<f0> MissingModule| <f1> numpy._core.left_shift",shape="record"];
	"numpy._core.ldexp" [label="<f0> MissingModule| <f1> numpy._core.ldexp",shape="record"];
	"numpy._core.lcm" [label="<f0> MissingModule| <f1> numpy._core.lcm",shape="record"];
	"numpy._core.isscalar" [label="<f0> MissingModule| <f1> numpy._core.isscalar",shape="record"];
	"numpy._core.isnat" [label="<f0> MissingModule| <f1> numpy._core.isnat",shape="record"];
	"numpy._core.isnan" [label="<f0> MissingModule| <f1> numpy._core.isnan",shape="record"];
	"numpy._core.isfinite" [label="<f0> MissingModule| <f1> numpy._core.isfinite",shape="record"];
	"numpy._core.intp" [label="<f0> MissingModule| <f1> numpy._core.intp",shape="record"];
	"numpy._core.integer" [label="<f0> MissingModule| <f1> numpy._core.integer",shape="record"];
	"numpy._core.intc" [label="<f0> MissingModule| <f1> numpy._core.intc",shape="record"];
	"numpy._core.int64" [label="<f0> MissingModule| <f1> numpy._core.int64",shape="record"];
	"numpy._core.int32" [label="<f0> MissingModule| <f1> numpy._core.int32",shape="record"];
	"numpy._core.int16" [label="<f0> MissingModule| <f1> numpy._core.int16",shape="record"];
	"numpy._core.int8" [label="<f0> MissingModule| <f1> numpy._core.int8",shape="record"];
	"numpy._core.inf" [label="<f0> MissingModule| <f1> numpy._core.inf",shape="record"];
	"numpy._core.inexact" [label="<f0> MissingModule| <f1> numpy._core.inexact",shape="record"];
	"numpy._core.iinfo" [label="<f0> MissingModule| <f1> numpy._core.iinfo",shape="record"];
	"numpy._core.hypot" [label="<f0> MissingModule| <f1> numpy._core.hypot",shape="record"];
	"numpy._core.hstack" [label="<f0> MissingModule| <f1> numpy._core.hstack",shape="record"];
	"numpy._core.heaviside" [label="<f0> MissingModule| <f1> numpy._core.heaviside",shape="record"];
	"numpy._core.half" [label="<f0> MissingModule| <f1> numpy._core.half",shape="record"];
	"numpy._core.greater_equal" [label="<f0> MissingModule| <f1> numpy._core.greater_equal",shape="record"];
	"numpy._core.greater" [label="<f0> MissingModule| <f1> numpy._core.greater",shape="record"];
	"numpy._core.gcd" [label="<f0> MissingModule| <f1> numpy._core.gcd",shape="record"];
	"numpy._core.frompyfunc" [label="<f0> MissingModule| <f1> numpy._core.frompyfunc",shape="record"];
	"numpy._core.frexp" [label="<f0> MissingModule| <f1> numpy._core.frexp",shape="record"];
	"numpy._core.fmod" [label="<f0> MissingModule| <f1> numpy._core.fmod",shape="record"];
	"numpy._core.fmin" [label="<f0> MissingModule| <f1> numpy._core.fmin",shape="record"];
	"numpy._core.fmax" [label="<f0> MissingModule| <f1> numpy._core.fmax",shape="record"];
	"numpy._core.floor_divide" [label="<f0> MissingModule| <f1> numpy._core.floor_divide",shape="record"];
	"numpy._core.floor" [label="<f0> MissingModule| <f1> numpy._core.floor",shape="record"];
	"numpy._core.floating" [label="<f0> MissingModule| <f1> numpy._core.floating",shape="record"];
	"numpy._core.float_power" [label="<f0> MissingModule| <f1> numpy._core.float_power",shape="record"];
	"numpy._core.float32" [label="<f0> MissingModule| <f1> numpy._core.float32",shape="record"];
	"numpy._core.float16" [label="<f0> MissingModule| <f1> numpy._core.float16",shape="record"];
	"numpy._core.finfo" [label="<f0> MissingModule| <f1> numpy._core.finfo",shape="record"];
	"numpy._core.fabs" [label="<f0> MissingModule| <f1> numpy._core.fabs",shape="record"];
	"numpy._core.expm1" [label="<f0> MissingModule| <f1> numpy._core.expm1",shape="record"];
	"numpy._core.exp" [label="<f0> MissingModule| <f1> numpy._core.exp",shape="record"];
	"numpy._core.euler_gamma" [label="<f0> MissingModule| <f1> numpy._core.euler_gamma",shape="record"];
	"numpy._core.errstate" [label="<f0> MissingModule| <f1> numpy._core.errstate",shape="record"];
	"numpy._core.equal" [label="<f0> MissingModule| <f1> numpy._core.equal",shape="record"];
	"numpy._core.empty_like" [label="<f0> MissingModule| <f1> numpy._core.empty_like",shape="record"];
	"numpy._core.empty" [label="<f0> MissingModule| <f1> numpy._core.empty",shape="record"];
	"numpy._core.e" [label="<f0> MissingModule| <f1> numpy._core.e",shape="record"];
	"numpy._core.double" [label="<f0> MissingModule| <f1> numpy._core.double",shape="record"];
	"numpy._core.dot" [label="<f0> MissingModule| <f1> numpy._core.dot",shape="record"];
	"numpy._core.divmod" [label="<f0> MissingModule| <f1> numpy._core.divmod",shape="record"];
	"numpy._core.divide" [label="<f0> MissingModule| <f1> numpy._core.divide",shape="record"];
	"numpy._core.diagonal" [label="<f0> MissingModule| <f1> numpy._core.diagonal",shape="record"];
	"numpy._core.degrees" [label="<f0> MissingModule| <f1> numpy._core.degrees",shape="record"];
	"numpy._core.deg2rad" [label="<f0> MissingModule| <f1> numpy._core.deg2rad",shape="record"];
	"numpy._core.datetime64" [label="<f0> MissingModule| <f1> numpy._core.datetime64",shape="record"];
	"numpy._core.csingle" [label="<f0> MissingModule| <f1> numpy._core.csingle",shape="record"];
	"numpy._core.cross" [label="<f0> MissingModule| <f1> numpy._core.cross",shape="record"];
	"numpy._core.count_nonzero" [label="<f0> MissingModule| <f1> numpy._core.count_nonzero",shape="record"];
	"numpy._core.cosh" [label="<f0> MissingModule| <f1> numpy._core.cosh",shape="record"];
	"numpy._core.cos" [label="<f0> MissingModule| <f1> numpy._core.cos",shape="record"];
	"numpy._core.copysign" [label="<f0> MissingModule| <f1> numpy._core.copysign",shape="record"];
	"numpy._core.conjugate" [label="<f0> MissingModule| <f1> numpy._core.conjugate",shape="record"];
	"numpy._core.conj" [label="<f0> MissingModule| <f1> numpy._core.conj",shape="record"];
	"numpy._core.complexfloating" [label="<f0> MissingModule| <f1> numpy._core.complexfloating",shape="record"];
	"numpy._core.complex64" [label="<f0> MissingModule| <f1> numpy._core.complex64",shape="record"];
	"numpy._core.clongdouble" [label="<f0> MissingModule| <f1> numpy._core.clongdouble",shape="record"];
	"numpy._core.character" [label="<f0> MissingModule| <f1> numpy._core.character",shape="record"];
	"numpy._core.ceil" [label="<f0> MissingModule| <f1> numpy._core.ceil",shape="record"];
	"numpy._core.cdouble" [label="<f0> MissingModule| <f1> numpy._core.cdouble",shape="record"];
	"numpy._core.cbrt" [label="<f0> MissingModule| <f1> numpy._core.cbrt",shape="record"];
	"numpy._core.bytes_" [label="<f0> MissingModule| <f1> numpy._core.bytes_",shape="record"];
	"numpy._core.byte" [label="<f0> MissingModule| <f1> numpy._core.byte",shape="record"];
	"numpy._core.bool_" [label="<f0> MissingModule| <f1> numpy._core.bool_",shape="record"];
	"numpy._core.bitwise_xor" [label="<f0> MissingModule| <f1> numpy._core.bitwise_xor",shape="record"];
	"numpy._core.bitwise_or" [label="<f0> MissingModule| <f1> numpy._core.bitwise_or",shape="record"];
	"numpy._core.bitwise_count" [label="<f0> MissingModule| <f1> numpy._core.bitwise_count",shape="record"];
	"numpy._core.bitwise_and" [label="<f0> MissingModule| <f1> numpy._core.bitwise_and",shape="record"];
	"numpy._core.atleast_3d" [label="<f0> MissingModule| <f1> numpy._core.atleast_3d",shape="record"];
	"numpy._core.atleast_2d" [label="<f0> MissingModule| <f1> numpy._core.atleast_2d",shape="record"];
	"numpy._core.atleast_1d" [label="<f0> MissingModule| <f1> numpy._core.atleast_1d",shape="record"];
	"numpy._core.asarray" [label="<f0> MissingModule| <f1> numpy._core.asarray",shape="record"];
	"numpy._core.asanyarray" [label="<f0> MissingModule| <f1> numpy._core.asanyarray",shape="record"];
	"numpy._core.array_repr" [label="<f0> MissingModule| <f1> numpy._core.array_repr",shape="record"];
	"numpy._core.array2string" [label="<f0> MissingModule| <f1> numpy._core.array2string",shape="record"];
	"numpy._core.array" [label="<f0> MissingModule| <f1> numpy._core.array",shape="record"];
	"numpy._core.argsort" [label="<f0> MissingModule| <f1> numpy._core.argsort",shape="record"];
	"numpy._core.arctanh" [label="<f0> MissingModule| <f1> numpy._core.arctanh",shape="record"];
	"numpy._core.arctan2" [label="<f0> MissingModule| <f1> numpy._core.arctan2",shape="record"];
	"numpy._core.arctan" [label="<f0> MissingModule| <f1> numpy._core.arctan",shape="record"];
	"numpy._core.arcsinh" [label="<f0> MissingModule| <f1> numpy._core.arcsinh",shape="record"];
	"numpy._core.arcsin" [label="<f0> MissingModule| <f1> numpy._core.arcsin",shape="record"];
	"numpy._core.arccosh" [label="<f0> MissingModule| <f1> numpy._core.arccosh",shape="record"];
	"numpy._core.arccos" [label="<f0> MissingModule| <f1> numpy._core.arccos",shape="record"];
	"numpy._core.arange" [label="<f0> MissingModule| <f1> numpy._core.arange",shape="record"];
	"numpy._core.amin" [label="<f0> MissingModule| <f1> numpy._core.amin",shape="record"];
	"numpy._core.amax" [label="<f0> MissingModule| <f1> numpy._core.amax",shape="record"];
	"numpy._core.all" [label="<f0> MissingModule| <f1> numpy._core.all",shape="record"];
	"numpy._core.add" [label="<f0> MissingModule| <f1> numpy._core.add",shape="record"];
	"numpy._core" [label="<f0> Package| <f1> numpy._core",shape="record"];
	"numpy._core._add_newdocs_scalars" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs_scalars",shape="record"];
	"numpy._core._add_newdocs" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs",shape="record"];
	"numpy._core.einsumfunc" [label="<f0> SourceModule| <f1> numpy._core.einsumfunc",shape="record"];
	"numpy.__config__" [label="<f0> SourceModule| <f1> numpy.__config__",shape="record"];
	"yaml" [label="<f0> MissingModule| <f1> yaml",shape="record"];
	"numpy._distributor_init" [label="<f0> SourceModule| <f1> numpy._distributor_init",shape="record"];
	"numpy._distributor_init_local" [label="<f0> MissingModule| <f1> numpy._distributor_init_local",shape="record"];
	"numpy._globals" [label="<f0> SourceModule| <f1> numpy._globals",shape="record"];
	"numpy._expired_attrs_2_0" [label="<f0> SourceModule| <f1> numpy._expired_attrs_2_0",shape="record"];
	"numpy.version" [label="<f0> SourceModule| <f1> numpy.version",shape="record"];
	"openpyxl.descriptors" [label="<f0> Package| <f1> openpyxl.descriptors",shape="record"];
	"openpyxl.descriptors.serialisable" [label="<f0> SourceModule| <f1> openpyxl.descriptors.serialisable",shape="record"];
	"openpyxl.worksheet.picture" [label="<f0> SourceModule| <f1> openpyxl.worksheet.picture",shape="record"];
	"openpyxl.worksheet.errors" [label="<f0> SourceModule| <f1> openpyxl.worksheet.errors",shape="record"];
	"openpyxl.worksheet.custom" [label="<f0> SourceModule| <f1> openpyxl.worksheet.custom",shape="record"];
	"openpyxl.worksheet.controls" [label="<f0> SourceModule| <f1> openpyxl.worksheet.controls",shape="record"];
	"openpyxl.worksheet.ole" [label="<f0> SourceModule| <f1> openpyxl.worksheet.ole",shape="record"];
	"openpyxl.worksheet.cell_watch" [label="<f0> SourceModule| <f1> openpyxl.worksheet.cell_watch",shape="record"];
	"openpyxl.utils.inference" [label="<f0> SourceModule| <f1> openpyxl.utils.inference",shape="record"];
	"openpyxl.utils.dataframe" [label="<f0> SourceModule| <f1> openpyxl.utils.dataframe",shape="record"];
	"pandas" [label="<f0> Package| <f1> pandas",shape="record"];
	"cmath" [label="<f0> BuiltinModule| <f1> cmath",shape="record"];
	"pandas._libs.writers" [label="<f0> Extension| <f1> pandas._libs.writers",shape="record"];
	"pandas._typing" [label="<f0> SourceModule| <f1> pandas._typing",shape="record"];
	"pandas.tseries.holiday" [label="<f0> SourceModule| <f1> pandas.tseries.holiday",shape="record"];
	"dateutil.relativedelta" [label="<f0> SourceModule| <f1> dateutil.relativedelta",shape="record"];
	"dateutil" [label="<f0> Package| <f1> dateutil",shape="record"];
	"dateutil.rrule" [label="<f0> SourceModule| <f1> dateutil.rrule",shape="record"];
	"dateutil.parser" [label="<f0> Package| <f1> dateutil.parser",shape="record"];
	"dateutil.parser.isoparser" [label="<f0> SourceModule| <f1> dateutil.parser.isoparser",shape="record"];
	"dateutil.parser._parser" [label="<f0> SourceModule| <f1> dateutil.parser._parser",shape="record"];
	"six.moves.range" [label="<f0> MissingModule| <f1> six.moves.range",shape="record"];
	"six.moves._thread" [label="<f0> AliasNode| <f1> six.moves._thread",shape="record"];
	"six.moves" [label="<f0> RuntimePackage| <f1> six.moves",shape="record"];
	"six.moves.winreg" [label="<f0> AliasNode| <f1> six.moves.winreg",shape="record"];
	"dateutil.tz" [label="<f0> Package| <f1> dateutil.tz",shape="record"];
	"dateutil.tz.tz" [label="<f0> SourceModule| <f1> dateutil.tz.tz",shape="record"];
	"dateutil.zoneinfo" [label="<f0> Package| <f1> dateutil.zoneinfo",shape="record"];
	"dateutil.tz.win" [label="<f0> SourceModule| <f1> dateutil.tz.win",shape="record"];
	"ctypes.wintypes" [label="<f0> SourceModule| <f1> ctypes.wintypes",shape="record"];
	"dateutil.tz._factories" [label="<f0> SourceModule| <f1> dateutil.tz._factories",shape="record"];
	"dateutil.tz._common" [label="<f0> SourceModule| <f1> dateutil.tz._common",shape="record"];
	"dateutil.tz.tzfile" [label="<f0> MissingModule| <f1> dateutil.tz.tzfile",shape="record"];
	"dateutil.easter" [label="<f0> SourceModule| <f1> dateutil.easter",shape="record"];
	"dateutil._version" [label="<f0> SourceModule| <f1> dateutil._version",shape="record"];
	"dateutil._common" [label="<f0> SourceModule| <f1> dateutil._common",shape="record"];
	"six" [label="<f0> SourceModule| <f1> six",shape="record"];
	"StringIO" [label="<f0> MissingModule| <f1> StringIO",shape="record"];
	"pandas.io.formats.format" [label="<f0> SourceModule| <f1> pandas.io.formats.format",shape="record"];
	"pandas.io.formats.csvs" [label="<f0> SourceModule| <f1> pandas.io.formats.csvs",shape="record"];
	"pandas.core.dtypes.generic" [label="<f0> SourceModule| <f1> pandas.core.dtypes.generic",shape="record"];
	"pandas.core.dtypes" [label="<f0> Package| <f1> pandas.core.dtypes",shape="record"];
	"pandas.core" [label="<f0> Package| <f1> pandas.core",shape="record"];
	"pandas.core.arraylike" [label="<f0> SourceModule| <f1> pandas.core.arraylike",shape="record"];
	"pandas.core.ops.common" [label="<f0> SourceModule| <f1> pandas.core.ops.common",shape="record"];
	"pandas.core.ops" [label="<f0> Package| <f1> pandas.core.ops",shape="record"];
	"pandas.core.ops.mask_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.mask_ops",shape="record"];
	"pandas.core.ops.invalid" [label="<f0> SourceModule| <f1> pandas.core.ops.invalid",shape="record"];
	"pandas.core.ops.docstrings" [label="<f0> SourceModule| <f1> pandas.core.ops.docstrings",shape="record"];
	"pandas.core.ops.array_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.array_ops",shape="record"];
	"pandas.core.ops.dispatch" [label="<f0> SourceModule| <f1> pandas.core.ops.dispatch",shape="record"];
	"pandas.core.computation.expressions" [label="<f0> SourceModule| <f1> pandas.core.computation.expressions",shape="record"];
	"numexpr" [label="<f0> MissingModule| <f1> numexpr",shape="record"];
	"pandas.core.computation.check" [label="<f0> SourceModule| <f1> pandas.core.computation.check",shape="record"];
	"pandas.compat._optional" [label="<f0> SourceModule| <f1> pandas.compat._optional",shape="record"];
	"pandas.util.version" [label="<f0> Package| <f1> pandas.util.version",shape="record"];
	"pandas.util" [label="<f0> Package| <f1> pandas.util",shape="record"];
	"pandas.util.hash_pandas_object" [label="<f0> MissingModule| <f1> pandas.util.hash_pandas_object",shape="record"];
	"pandas.util.hash_array" [label="<f0> MissingModule| <f1> pandas.util.hash_array",shape="record"];
	"pandas.core.util.hashing" [label="<f0> SourceModule| <f1> pandas.core.util.hashing",shape="record"];
	"pandas.core.util" [label="<f0> Package| <f1> pandas.core.util",shape="record"];
	"pandas.core.computation" [label="<f0> Package| <f1> pandas.core.computation",shape="record"];
	"pandas.core.computation.expr" [label="<f0> SourceModule| <f1> pandas.core.computation.expr",shape="record"];
	"pandas.core.computation.scope" [label="<f0> SourceModule| <f1> pandas.core.computation.scope",shape="record"];
	"pandas.core.computation.parsing" [label="<f0> SourceModule| <f1> pandas.core.computation.parsing",shape="record"];
	"pandas.core.computation.ops" [label="<f0> SourceModule| <f1> pandas.core.computation.ops",shape="record"];
	"pandas.core.computation.eval" [label="<f0> SourceModule| <f1> pandas.core.computation.eval",shape="record"];
	"pandas.core.computation.engines" [label="<f0> SourceModule| <f1> pandas.core.computation.engines",shape="record"];
	"pandas.core.computation.align" [label="<f0> SourceModule| <f1> pandas.core.computation.align",shape="record"];
	"pandas.util._validators" [label="<f0> SourceModule| <f1> pandas.util._validators",shape="record"];
	"pandas.core.computation.common" [label="<f0> SourceModule| <f1> pandas.core.computation.common",shape="record"];
	"pandas.core.dtypes.cast" [label="<f0> SourceModule| <f1> pandas.core.dtypes.cast",shape="record"];
	"pandas.core.arrays.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.arrays.timedeltas",shape="record"];
	"pandas.core.arrays._ranges" [label="<f0> SourceModule| <f1> pandas.core.arrays._ranges",shape="record"];
	"pandas.core.arrays.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimelike",shape="record"];
	"pandas.core.groupby.ops" [label="<f0> SourceModule| <f1> pandas.core.groupby.ops",shape="record"];
	"pandas.core.sorting" [label="<f0> SourceModule| <f1> pandas.core.sorting",shape="record"];
	"pandas.core.groupby.grouper" [label="<f0> SourceModule| <f1> pandas.core.groupby.grouper",shape="record"];
	"pandas.core.groupby.categorical" [label="<f0> SourceModule| <f1> pandas.core.groupby.categorical",shape="record"];
	"pandas.core.arrays.categorical" [label="<f0> SourceModule| <f1> pandas.core.arrays.categorical",shape="record"];
	"pandas.core.dtypes.concat" [label="<f0> SourceModule| <f1> pandas.core.dtypes.concat",shape="record"];
	"pandas.core.dtypes.astype" [label="<f0> SourceModule| <f1> pandas.core.dtypes.astype",shape="record"];
	"pandas.core.strings.object_array" [label="<f0> SourceModule| <f1> pandas.core.strings.object_array",shape="record"];
	"pandas.core.strings" [label="<f0> Package| <f1> pandas.core.strings",shape="record"];
	"pandas.core.strings.base" [label="<f0> SourceModule| <f1> pandas.core.strings.base",shape="record"];
	"pandas.core.accessor" [label="<f0> SourceModule| <f1> pandas.core.accessor",shape="record"];
	"pandas.core.groupby" [label="<f0> Package| <f1> pandas.core.groupby",shape="record"];
	"pandas.core.groupby.groupby" [label="<f0> SourceModule| <f1> pandas.core.groupby.groupby",shape="record"];
	"pandas.core._numba.kernels" [label="<f0> Package| <f1> pandas.core._numba.kernels",shape="record"];
	"pandas.core._numba.kernels.var_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.var_",shape="record"];
	"pandas.core._numba.kernels.shared" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.shared",shape="record"];
	"numba" [label="<f0> MissingModule| <f1> numba",shape="record"];
	"pandas.core._numba.kernels.sum_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.sum_",shape="record"];
	"'numba.extending'" [label="<f0> MissingModule| <f1> 'numba.extending'",shape="record"];
	"pandas.core._numba.kernels.min_max_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.min_max_",shape="record"];
	"pandas.core._numba.kernels.mean_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.mean_",shape="record"];
	"pandas.core.window" [label="<f0> Package| <f1> pandas.core.window",shape="record"];
	"pandas.core.window.expanding" [label="<f0> SourceModule| <f1> pandas.core.window.expanding",shape="record"];
	"pandas.core.window.doc" [label="<f0> SourceModule| <f1> pandas.core.window.doc",shape="record"];
	"pandas.core.shared_docs" [label="<f0> SourceModule| <f1> pandas.core.shared_docs",shape="record"];
	"pandas.core.indexers.objects" [label="<f0> SourceModule| <f1> pandas.core.indexers.objects",shape="record"];
	"pandas.core.window.ewm" [label="<f0> SourceModule| <f1> pandas.core.window.ewm",shape="record"];
	"pandas.core.window.online" [label="<f0> SourceModule| <f1> pandas.core.window.online",shape="record"];
	"pandas.core.window.numba_" [label="<f0> SourceModule| <f1> pandas.core.window.numba_",shape="record"];
	"pandas.core.window.common" [label="<f0> SourceModule| <f1> pandas.core.window.common",shape="record"];
	"pandas.core.util.numba_" [label="<f0> SourceModule| <f1> pandas.core.util.numba_",shape="record"];
	"pandas.core.internals.blocks" [label="<f0> SourceModule| <f1> pandas.core.internals.blocks",shape="record"];
	"pandas.core.array_algos.transforms" [label="<f0> SourceModule| <f1> pandas.core.array_algos.transforms",shape="record"];
	"pandas.core.array_algos.replace" [label="<f0> SourceModule| <f1> pandas.core.array_algos.replace",shape="record"];
	"pandas.core.array_algos.quantile" [label="<f0> SourceModule| <f1> pandas.core.array_algos.quantile",shape="record"];
	"pandas.core.array_algos.putmask" [label="<f0> SourceModule| <f1> pandas.core.array_algos.putmask",shape="record"];
	"pandas.core.groupby.indexing" [label="<f0> SourceModule| <f1> pandas.core.groupby.indexing",shape="record"];
	"pandas.core.arrays.string_arrow" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_arrow",shape="record"];
	"pandas.core.arrays.masked" [label="<f0> SourceModule| <f1> pandas.core.arrays.masked",shape="record"];
	"pandas.core.arrays._utils" [label="<f0> SourceModule| <f1> pandas.core.arrays._utils",shape="record"];
	"pandas.core.array_algos.masked_reductions" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_reductions",shape="record"];
	"pandas.core.array_algos.masked_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_accumulations",shape="record"];
	"pandas.core.dtypes.base" [label="<f0> SourceModule| <f1> pandas.core.dtypes.base",shape="record"];
	"'pyarrow.compute'" [label="<f0> MissingModule| <f1> 'pyarrow.compute'",shape="record"];
	"pandas.core.arrays.numeric" [label="<f0> SourceModule| <f1> pandas.core.arrays.numeric",shape="record"];
	"pandas.core.tools.numeric" [label="<f0> SourceModule| <f1> pandas.core.tools.numeric",shape="record"];
	"pandas.core.tools" [label="<f0> Package| <f1> pandas.core.tools",shape="record"];
	"pandas.core.arrays.arrow._arrow_utils" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow._arrow_utils",shape="record"];
	"pandas.core.arrays.boolean" [label="<f0> SourceModule| <f1> pandas.core.arrays.boolean",shape="record"];
	"pandas.core.arrays.arrow" [label="<f0> Package| <f1> pandas.core.arrays.arrow",shape="record"];
	"pandas.core.arrays.arrow.accessors" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.accessors",shape="record"];
	"pandas.core.arrays._arrow_string_mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._arrow_string_mixins",shape="record"];
	"pandas.core.apply" [label="<f0> SourceModule| <f1> pandas.core.apply",shape="record"];
	"pandas.core._numba.extensions" [label="<f0> SourceModule| <f1> pandas.core._numba.extensions",shape="record"];
	"'numba.typed'" [label="<f0> MissingModule| <f1> 'numba.typed'",shape="record"];
	"'numba.core'" [label="<f0> MissingModule| <f1> 'numba.core'",shape="record"];
	"pandas.core._numba.executor" [label="<f0> SourceModule| <f1> pandas.core._numba.executor",shape="record"];
	"pandas.core._numba" [label="<f0> Package| <f1> pandas.core._numba",shape="record"];
	"pandas.core.groupby.numba_" [label="<f0> SourceModule| <f1> pandas.core.groupby.numba_",shape="record"];
	"pandas.core.groupby.base" [label="<f0> SourceModule| <f1> pandas.core.groupby.base",shape="record"];
	"pandas.core.arrays.period" [label="<f0> SourceModule| <f1> pandas.core.arrays.period",shape="record"];
	"pandas.core.arrays.arrow.extension_types" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.extension_types",shape="record"];
	"pickletools" [label="<f0> SourceModule| <f1> pickletools",shape="record"];
	"pandas.core.arrays.interval" [label="<f0> SourceModule| <f1> pandas.core.arrays.interval",shape="record"];
	"pandas.tseries.frequencies" [label="<f0> SourceModule| <f1> pandas.tseries.frequencies",shape="record"];
	"pandas.core.indexers" [label="<f0> Package| <f1> pandas.core.indexers",shape="record"];
	"pandas.core.indexers.utils" [label="<f0> SourceModule| <f1> pandas.core.indexers.utils",shape="record"];
	"pandas.core.arrays._mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._mixins",shape="record"];
	"pandas.core.array_algos.datetimelike_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.datetimelike_accumulations",shape="record"];
	"pandas.core.array_algos" [label="<f0> Package| <f1> pandas.core.array_algos",shape="record"];
	"pandas.compat.numpy.function" [label="<f0> SourceModule| <f1> pandas.compat.numpy.function",shape="record"];
	"pandas.compat.numpy" [label="<f0> Package| <f1> pandas.compat.numpy",shape="record"];
	"pandas.core.arrays.datetimes" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimes",shape="record"];
	"pyarrow" [label="<f0> MissingModule| <f1> pyarrow",shape="record"];
	"pandas.core.arrays.arrow.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.array",shape="record"];
	"pandas.core.tools.times" [label="<f0> SourceModule| <f1> pandas.core.tools.times",shape="record"];
	"pandas.core.tools.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.tools.timedeltas",shape="record"];
	"pandas.core.tools.datetimes" [label="<f0> SourceModule| <f1> pandas.core.tools.datetimes",shape="record"];
	"pandas.core.arrays.floating" [label="<f0> SourceModule| <f1> pandas.core.arrays.floating",shape="record"];
	"pandas.core.arrays.integer" [label="<f0> SourceModule| <f1> pandas.core.arrays.integer",shape="record"];
	"pandas.io._util" [label="<f0> SourceModule| <f1> pandas.io._util",shape="record"];
	"pandas.core.dtypes.inference" [label="<f0> SourceModule| <f1> pandas.core.dtypes.inference",shape="record"];
	"pandas.util._exceptions" [label="<f0> SourceModule| <f1> pandas.util._exceptions",shape="record"];
	"pandas.core.ops.missing" [label="<f0> SourceModule| <f1> pandas.core.ops.missing",shape="record"];
	"pandas.core.construction" [label="<f0> SourceModule| <f1> pandas.core.construction",shape="record"];
	"pandas.core.algorithms" [label="<f0> SourceModule| <f1> pandas.core.algorithms",shape="record"];
	"pandas.core.internals.construction" [label="<f0> SourceModule| <f1> pandas.core.internals.construction",shape="record"];
	"pandas.core.internals.managers" [label="<f0> SourceModule| <f1> pandas.core.internals.managers",shape="record"];
	"pandas.api.extensions" [label="<f0> Package| <f1> pandas.api.extensions",shape="record"];
	"pandas.core.internals.ops" [label="<f0> SourceModule| <f1> pandas.core.internals.ops",shape="record"];
	"pandas.core.internals.base" [label="<f0> SourceModule| <f1> pandas.core.internals.base",shape="record"];
	"pandas.core.internals.array_manager" [label="<f0> SourceModule| <f1> pandas.core.internals.array_manager",shape="record"];
	"pandas.core.reshape.tile" [label="<f0> SourceModule| <f1> pandas.core.reshape.tile",shape="record"];
	"pandas.core.reshape" [label="<f0> Package| <f1> pandas.core.reshape",shape="record"];
	"pandas.core.array_algos.take" [label="<f0> SourceModule| <f1> pandas.core.array_algos.take",shape="record"];
	"pandas.core.sample" [label="<f0> SourceModule| <f1> pandas.core.sample",shape="record"];
	"pandas.core.indexing" [label="<f0> SourceModule| <f1> pandas.core.indexing",shape="record"];
	"pandas.compat._constants" [label="<f0> SourceModule| <f1> pandas.compat._constants",shape="record"];
	"pandas.core.nanops" [label="<f0> SourceModule| <f1> pandas.core.nanops",shape="record"];
	"'scipy.stats'" [label="<f0> MissingModule| <f1> 'scipy.stats'",shape="record"];
	"pandas.core.missing" [label="<f0> SourceModule| <f1> pandas.core.missing",shape="record"];
	"scipy" [label="<f0> MissingModule| <f1> scipy",shape="record"];
	"pandas.core.roperator" [label="<f0> SourceModule| <f1> pandas.core.roperator",shape="record"];
	"pandas.util._decorators" [label="<f0> SourceModule| <f1> pandas.util._decorators",shape="record"];
	"pandas.io.formats.string" [label="<f0> SourceModule| <f1> pandas.io.formats.string",shape="record"];
	"pandas.io.formats.html" [label="<f0> SourceModule| <f1> pandas.io.formats.html",shape="record"];
	"pandas.core.indexes.multi" [label="<f0> SourceModule| <f1> pandas.core.indexes.multi",shape="record"];
	"pandas.core.indexes" [label="<f0> Package| <f1> pandas.core.indexes",shape="record"];
	"pandas.core.reshape.util" [label="<f0> SourceModule| <f1> pandas.core.reshape.util",shape="record"];
	"pandas.core.indexes.frozen" [label="<f0> SourceModule| <f1> pandas.core.indexes.frozen",shape="record"];
	"pandas.io.formats.console" [label="<f0> SourceModule| <f1> pandas.io.formats.console",shape="record"];
	"pandas.io.formats.printing" [label="<f0> SourceModule| <f1> pandas.io.formats.printing",shape="record"];
	"traitlets" [label="<f0> MissingModule| <f1> traitlets",shape="record"];
	"'IPython.core'" [label="<f0> MissingModule| <f1> 'IPython.core'",shape="record"];
	"IPython" [label="<f0> MissingModule| <f1> IPython",shape="record"];
	"pandas.io.formats" [label="<f0> Package| <f1> pandas.io.formats",shape="record"];
	"pandas.io.formats.style" [label="<f0> SourceModule| <f1> pandas.io.formats.style",shape="record"];
	"pandas.io.formats.excel" [label="<f0> SourceModule| <f1> pandas.io.formats.excel",shape="record"];
	"pandas.io.excel" [label="<f0> Package| <f1> pandas.io.excel",shape="record"];
	"pandas.io.excel._xlsxwriter" [label="<f0> SourceModule| <f1> pandas.io.excel._xlsxwriter",shape="record"];
	"xlsxwriter" [label="<f0> MissingModule| <f1> xlsxwriter",shape="record"];
	"pandas.io.excel._util" [label="<f0> SourceModule| <f1> pandas.io.excel._util",shape="record"];
	"pandas.io.excel._openpyxl" [label="<f0> SourceModule| <f1> pandas.io.excel._openpyxl",shape="record"];
	"pandas.io.excel._odswriter" [label="<f0> SourceModule| <f1> pandas.io.excel._odswriter",shape="record"];
	"'odf.config'" [label="<f0> MissingModule| <f1> 'odf.config'",shape="record"];
	"'odf.style'" [label="<f0> MissingModule| <f1> 'odf.style'",shape="record"];
	"'odf.text'" [label="<f0> MissingModule| <f1> 'odf.text'",shape="record"];
	"'odf.table'" [label="<f0> MissingModule| <f1> 'odf.table'",shape="record"];
	"'odf.opendocument'" [label="<f0> MissingModule| <f1> 'odf.opendocument'",shape="record"];
	"pandas.io.excel._base" [label="<f0> SourceModule| <f1> pandas.io.excel._base",shape="record"];
	"xlrd" [label="<f0> MissingModule| <f1> xlrd",shape="record"];
	"pandas.io.excel._xlrd" [label="<f0> SourceModule| <f1> pandas.io.excel._xlrd",shape="record"];
	"pandas.io.excel._pyxlsb" [label="<f0> SourceModule| <f1> pandas.io.excel._pyxlsb",shape="record"];
	"pyxlsb" [label="<f0> MissingModule| <f1> pyxlsb",shape="record"];
	"pandas.io.excel._odfreader" [label="<f0> SourceModule| <f1> pandas.io.excel._odfreader",shape="record"];
	"'odf.office'" [label="<f0> MissingModule| <f1> 'odf.office'",shape="record"];
	"'odf.element'" [label="<f0> MissingModule| <f1> 'odf.element'",shape="record"];
	"'odf.namespaces'" [label="<f0> MissingModule| <f1> 'odf.namespaces'",shape="record"];
	"odf" [label="<f0> MissingModule| <f1> odf",shape="record"];
	"pandas.io.excel._calamine" [label="<f0> SourceModule| <f1> pandas.io.excel._calamine",shape="record"];
	"python_calamine" [label="<f0> MissingModule| <f1> python_calamine",shape="record"];
	"pandas.io.parsers.readers" [label="<f0> SourceModule| <f1> pandas.io.parsers.readers",shape="record"];
	"pandas.io.parsers.python_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.python_parser",shape="record"];
	"pandas.io.parsers.c_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.c_parser_wrapper",shape="record"];
	"pandas.io.parsers.base_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.base_parser",shape="record"];
	"pandas.io.parsers.arrow_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.arrow_parser_wrapper",shape="record"];
	"pandas.io.parsers" [label="<f0> Package| <f1> pandas.io.parsers",shape="record"];
	"pandas.io.formats.css" [label="<f0> SourceModule| <f1> pandas.io.formats.css",shape="record"];
	"pandas.io.formats._color_data" [label="<f0> SourceModule| <f1> pandas.io.formats._color_data",shape="record"];
	"'matplotlib.pyplot'" [label="<f0> MissingModule| <f1> 'matplotlib.pyplot'",shape="record"];
	"matplotlib" [label="<f0> MissingModule| <f1> matplotlib",shape="record"];
	"'matplotlib.colors'" [label="<f0> MissingModule| <f1> 'matplotlib.colors'",shape="record"];
	"pandas.io.formats.style_render" [label="<f0> SourceModule| <f1> pandas.io.formats.style_render",shape="record"];
	"markupsafe" [label="<f0> MissingModule| <f1> markupsafe",shape="record"];
	"pandas.api.types" [label="<f0> Package| <f1> pandas.api.types",shape="record"];
	"pandas.core.dtypes.api" [label="<f0> SourceModule| <f1> pandas.core.dtypes.api",shape="record"];
	"uuid" [label="<f0> SourceModule| <f1> uuid",shape="record"];
	"_uuid" [label="<f0> Extension| <f1> _uuid",shape="record"];
	"pandas.io.common" [label="<f0> SourceModule| <f1> pandas.io.common",shape="record"];
	"botocore" [label="<f0> MissingModule| <f1> botocore",shape="record"];
	"pandas.core.reshape.concat" [label="<f0> SourceModule| <f1> pandas.core.reshape.concat",shape="record"];
	"pandas.core.indexes.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.indexes.timedeltas",shape="record"];
	"pandas.core.indexes.extension" [label="<f0> SourceModule| <f1> pandas.core.indexes.extension",shape="record"];
	"pandas.core.indexes.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimelike",shape="record"];
	"pandas.core.indexes.range" [label="<f0> SourceModule| <f1> pandas.core.indexes.range",shape="record"];
	"pandas.core.indexes.datetimes" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimes",shape="record"];
	"pytz" [label="<f0> Package| <f1> pytz",shape="record"];
	"pytz.tzfile" [label="<f0> SourceModule| <f1> pytz.tzfile",shape="record"];
	"pytz.tzinfo" [label="<f0> SourceModule| <f1> pytz.tzinfo",shape="record"];
	"sets" [label="<f0> MissingModule| <f1> sets",shape="record"];
	"pytz.lazy" [label="<f0> SourceModule| <f1> pytz.lazy",shape="record"];
	"collections.Mapping" [label="<f0> MissingModule| <f1> collections.Mapping",shape="record"];
	"UserDict" [label="<f0> MissingModule| <f1> UserDict",shape="record"];
	"pytz.exceptions" [label="<f0> SourceModule| <f1> pytz.exceptions",shape="record"];
	"pandas.core.indexes.api" [label="<f0> SourceModule| <f1> pandas.core.indexes.api",shape="record"];
	"pandas.core.indexes.period" [label="<f0> SourceModule| <f1> pandas.core.indexes.period",shape="record"];
	"pandas.core.indexes.interval" [label="<f0> SourceModule| <f1> pandas.core.indexes.interval",shape="record"];
	"pandas.core.indexes.category" [label="<f0> SourceModule| <f1> pandas.core.indexes.category",shape="record"];
	"pandas.core.common" [label="<f0> SourceModule| <f1> pandas.core.common",shape="record"];
	"pandas.core.base" [label="<f0> SourceModule| <f1> pandas.core.base",shape="record"];
	"pandas.core.arrays.string_" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_",shape="record"];
	"pandas.core.arrays.numpy_" [label="<f0> SourceModule| <f1> pandas.core.arrays.numpy_",shape="record"];
	"pandas.core.arrays" [label="<f0> Package| <f1> pandas.core.arrays",shape="record"];
	"pandas.core.arrays.sparse" [label="<f0> Package| <f1> pandas.core.arrays.sparse",shape="record"];
	"pandas.core.arrays.sparse.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.array",shape="record"];
	"'scipy.sparse'" [label="<f0> MissingModule| <f1> 'scipy.sparse'",shape="record"];
	"pandas.core.arrays.sparse.accessor" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.accessor",shape="record"];
	"pandas.core.arrays.sparse.scipy_sparse" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.scipy_sparse",shape="record"];
	"pandas.core.dtypes.missing" [label="<f0> SourceModule| <f1> pandas.core.dtypes.missing",shape="record"];
	"pandas.core.dtypes.common" [label="<f0> SourceModule| <f1> pandas.core.dtypes.common",shape="record"];
	"pandas._config.config" [label="<f0> SourceModule| <f1> pandas._config.config",shape="record"];
	"pandas.core.window.rolling" [label="<f0> SourceModule| <f1> pandas.core.window.rolling",shape="record"];
	"pandas.core.series" [label="<f0> SourceModule| <f1> pandas.core.series",shape="record"];
	"pandas.core.reshape.reshape" [label="<f0> SourceModule| <f1> pandas.core.reshape.reshape",shape="record"];
	"pandas.io.formats.info" [label="<f0> SourceModule| <f1> pandas.io.formats.info",shape="record"];
	"pandas.core.strings.accessor" [label="<f0> SourceModule| <f1> pandas.core.strings.accessor",shape="record"];
	"pandas.core.methods.selectn" [label="<f0> SourceModule| <f1> pandas.core.methods.selectn",shape="record"];
	"pandas.core.methods" [label="<f0> Package| <f1> pandas.core.methods",shape="record"];
	"pandas.core.indexes.accessors" [label="<f0> SourceModule| <f1> pandas.core.indexes.accessors",shape="record"];
	"pandas.core.resample" [label="<f0> SourceModule| <f1> pandas.core.resample",shape="record"];
	"pandas.core.internals" [label="<f0> Package| <f1> pandas.core.internals",shape="record"];
	"pandas.core.internals.concat" [label="<f0> SourceModule| <f1> pandas.core.internals.concat",shape="record"];
	"pandas.core.internals.api" [label="<f0> SourceModule| <f1> pandas.core.internals.api",shape="record"];
	"pandas.core.internals.Block" [label="<f0> MissingModule| <f1> pandas.core.internals.Block",shape="record"];
	"pandas.core.indexes.base" [label="<f0> SourceModule| <f1> pandas.core.indexes.base",shape="record"];
	"pandas.core.reshape.merge" [label="<f0> SourceModule| <f1> pandas.core.reshape.merge",shape="record"];
	"pandas.core.groupby.generic" [label="<f0> SourceModule| <f1> pandas.core.groupby.generic",shape="record"];
	"pandas.core.generic" [label="<f0> SourceModule| <f1> pandas.core.generic",shape="record"];
	"pandas.io.clipboards" [label="<f0> SourceModule| <f1> pandas.io.clipboards",shape="record"];
	"pandas.io.clipboard" [label="<f0> Package| <f1> pandas.io.clipboard",shape="record"];
	"Foundation" [label="<f0> MissingModule| <f1> Foundation",shape="record"];
	"AppKit" [label="<f0> MissingModule| <f1> AppKit",shape="record"];
	"PyQt4" [label="<f0> MissingModule| <f1> PyQt4",shape="record"];
	"qtpy" [label="<f0> MissingModule| <f1> qtpy",shape="record"];
	"pandas.io.pickle" [label="<f0> SourceModule| <f1> pandas.io.pickle",shape="record"];
	"pandas.compat.pickle_compat" [label="<f0> SourceModule| <f1> pandas.compat.pickle_compat",shape="record"];
	"pandas.io.sql" [label="<f0> SourceModule| <f1> pandas.io.sql",shape="record"];
	"'sqlalchemy.engine'" [label="<f0> MissingModule| <f1> 'sqlalchemy.engine'",shape="record"];
	"'sqlalchemy.types'" [label="<f0> MissingModule| <f1> 'sqlalchemy.types'",shape="record"];
	"'sqlalchemy.schema'" [label="<f0> MissingModule| <f1> 'sqlalchemy.schema'",shape="record"];
	"sqlite3" [label="<f0> Package| <f1> sqlite3",shape="record"];
	"sqlite3.dump" [label="<f0> SourceModule| <f1> sqlite3.dump",shape="record"];
	"sqlite3.__main__" [label="<f0> SourceModule| <f1> sqlite3.__main__",shape="record"];
	"sqlite3.dbapi2" [label="<f0> SourceModule| <f1> sqlite3.dbapi2",shape="record"];
	"_sqlite3" [label="<f0> Extension| <f1> _sqlite3",shape="record"];
	"'sqlalchemy.sql'" [label="<f0> MissingModule| <f1> 'sqlalchemy.sql'",shape="record"];
	"sqlalchemy" [label="<f0> MissingModule| <f1> sqlalchemy",shape="record"];
	"pandas.io.pytables" [label="<f0> SourceModule| <f1> pandas.io.pytables",shape="record"];
	"tables" [label="<f0> MissingModule| <f1> tables",shape="record"];
	"pandas.core.computation.pytables" [label="<f0> SourceModule| <f1> pandas.core.computation.pytables",shape="record"];
	"pandas.io.json" [label="<f0> Package| <f1> pandas.io.json",shape="record"];
	"pandas.io.json._table_schema" [label="<f0> SourceModule| <f1> pandas.io.json._table_schema",shape="record"];
	"pandas.io.json._json" [label="<f0> SourceModule| <f1> pandas.io.json._json",shape="record"];
	"pandas.core.methods.describe" [label="<f0> SourceModule| <f1> pandas.core.methods.describe",shape="record"];
	"pandas.core.flags" [label="<f0> SourceModule| <f1> pandas.core.flags",shape="record"];
	"pandas.core.frame" [label="<f0> SourceModule| <f1> pandas.core.frame",shape="record"];
	"pandas.core.reshape.pivot" [label="<f0> SourceModule| <f1> pandas.core.reshape.pivot",shape="record"];
	"pandas.io.formats.xml" [label="<f0> SourceModule| <f1> pandas.io.formats.xml",shape="record"];
	"xml.dom.minidom" [label="<f0> SourceModule| <f1> xml.dom.minidom",shape="record"];
	"xml.dom.pulldom" [label="<f0> SourceModule| <f1> xml.dom.pulldom",shape="record"];
	"xml.dom.expatbuilder" [label="<f0> SourceModule| <f1> xml.dom.expatbuilder",shape="record"];
	"xml.dom.NodeFilter" [label="<f0> SourceModule| <f1> xml.dom.NodeFilter",shape="record"];
	"xml.dom.xmlbuilder" [label="<f0> SourceModule| <f1> xml.dom.xmlbuilder",shape="record"];
	"xml.dom.minicompat" [label="<f0> SourceModule| <f1> xml.dom.minicompat",shape="record"];
	"xml.dom.domreg" [label="<f0> SourceModule| <f1> xml.dom.domreg",shape="record"];
	"xml.dom" [label="<f0> Package| <f1> xml.dom",shape="record"];
	"pandas.io.xml" [label="<f0> SourceModule| <f1> pandas.io.xml",shape="record"];
	"pandas.io.orc" [label="<f0> SourceModule| <f1> pandas.io.orc",shape="record"];
	"'pyarrow.fs'" [label="<f0> MissingModule| <f1> 'pyarrow.fs'",shape="record"];
	"fsspec" [label="<f0> MissingModule| <f1> fsspec",shape="record"];
	"pandas.io.parquet" [label="<f0> SourceModule| <f1> pandas.io.parquet",shape="record"];
	"'pyarrow.parquet'" [label="<f0> MissingModule| <f1> 'pyarrow.parquet'",shape="record"];
	"pandas.io.feather_format" [label="<f0> SourceModule| <f1> pandas.io.feather_format",shape="record"];
	"pandas.io.stata" [label="<f0> SourceModule| <f1> pandas.io.stata",shape="record"];
	"pandas.io.gbq" [label="<f0> SourceModule| <f1> pandas.io.gbq",shape="record"];
	"google" [label="<f0> MissingModule| <f1> google",shape="record"];
	"pandas.core.methods.to_dict" [label="<f0> SourceModule| <f1> pandas.core.methods.to_dict",shape="record"];
	"pandas.core.interchange.dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe",shape="record"];
	"pandas.core.interchange" [label="<f0> Package| <f1> pandas.core.interchange",shape="record"];
	"pandas.core.interchange.utils" [label="<f0> SourceModule| <f1> pandas.core.interchange.utils",shape="record"];
	"pandas.core.interchange.column" [label="<f0> SourceModule| <f1> pandas.core.interchange.column",shape="record"];
	"pandas.core.interchange.buffer" [label="<f0> SourceModule| <f1> pandas.core.interchange.buffer",shape="record"];
	"pandas.core.interchange.dataframe_protocol" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe_protocol",shape="record"];
	"pandas.core.reshape.melt" [label="<f0> SourceModule| <f1> pandas.core.reshape.melt",shape="record"];
	"pandas.core.arrays.base" [label="<f0> SourceModule| <f1> pandas.core.arrays.base",shape="record"];
	"pandas._libs.window.indexers" [label="<f0> Extension| <f1> pandas._libs.window.indexers",shape="record"];
	"pandas._libs.window.aggregations" [label="<f0> Extension| <f1> pandas._libs.window.aggregations",shape="record"];
	"pandas._libs.window" [label="<f0> Package| <f1> pandas._libs.window",shape="record"];
	"pandas._libs.tslibs.vectorized" [label="<f0> Extension| <f1> pandas._libs.tslibs.vectorized",shape="record"];
	"pandas._libs.tslibs.tzconversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.tzconversion",shape="record"];
	"pandas._libs.tslibs.timezones" [label="<f0> Extension| <f1> pandas._libs.tslibs.timezones",shape="record"];
	"pandas._libs.tslibs.timestamps" [label="<f0> Extension| <f1> pandas._libs.tslibs.timestamps",shape="record"];
	"pandas._libs.tslibs.timedeltas" [label="<f0> Extension| <f1> pandas._libs.tslibs.timedeltas",shape="record"];
	"pandas._libs.tslibs.strptime" [label="<f0> Extension| <f1> pandas._libs.tslibs.strptime",shape="record"];
	"pandas._libs.tslibs.period" [label="<f0> Extension| <f1> pandas._libs.tslibs.period",shape="record"];
	"pandas._libs.tslibs.parsing" [label="<f0> Extension| <f1> pandas._libs.tslibs.parsing",shape="record"];
	"pandas._libs.tslibs.offsets" [label="<f0> Extension| <f1> pandas._libs.tslibs.offsets",shape="record"];
	"pandas._libs.tslibs.np_datetime" [label="<f0> Extension| <f1> pandas._libs.tslibs.np_datetime",shape="record"];
	"pandas._libs.tslibs.nattype" [label="<f0> Extension| <f1> pandas._libs.tslibs.nattype",shape="record"];
	"pandas._libs.tslibs.fields" [label="<f0> Extension| <f1> pandas._libs.tslibs.fields",shape="record"];
	"pandas._libs.tslibs.dtypes" [label="<f0> Extension| <f1> pandas._libs.tslibs.dtypes",shape="record"];
	"pandas._libs.tslibs.conversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.conversion",shape="record"];
	"pandas._libs.tslibs.ccalendar" [label="<f0> Extension| <f1> pandas._libs.tslibs.ccalendar",shape="record"];
	"pandas._libs.tslibs" [label="<f0> Package| <f1> pandas._libs.tslibs",shape="record"];
	"pandas._libs.tslib" [label="<f0> Extension| <f1> pandas._libs.tslib",shape="record"];
	"pandas._libs.testing" [label="<f0> Extension| <f1> pandas._libs.testing",shape="record"];
	"pandas._libs.sparse" [label="<f0> Extension| <f1> pandas._libs.sparse",shape="record"];
	"pandas._libs.sas" [label="<f0> Extension| <f1> pandas._libs.sas",shape="record"];
	"pandas.io.sas.sas7bdat" [label="<f0> SourceModule| <f1> pandas.io.sas.sas7bdat",shape="record"];
	"pandas.io.sas.sasreader" [label="<f0> SourceModule| <f1> pandas.io.sas.sasreader",shape="record"];
	"pandas.io.sas.sas_xport" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_xport",shape="record"];
	"pandas.io.sas.sas_constants" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_constants",shape="record"];
	"pandas.io.sas" [label="<f0> Package| <f1> pandas.io.sas",shape="record"];
	"pandas._libs.reshape" [label="<f0> Extension| <f1> pandas._libs.reshape",shape="record"];
	"pandas._libs.properties" [label="<f0> Extension| <f1> pandas._libs.properties",shape="record"];
	"pandas._libs.parsers" [label="<f0> Extension| <f1> pandas._libs.parsers",shape="record"];
	"pandas._libs.pandas_parser" [label="<f0> Extension| <f1> pandas._libs.pandas_parser",shape="record"];
	"pandas._libs.pandas_datetime" [label="<f0> Extension| <f1> pandas._libs.pandas_datetime",shape="record"];
	"pandas._libs.ops_dispatch" [label="<f0> Extension| <f1> pandas._libs.ops_dispatch",shape="record"];
	"pandas._libs.ops" [label="<f0> Extension| <f1> pandas._libs.ops",shape="record"];
	"pandas._libs.missing" [label="<f0> Extension| <f1> pandas._libs.missing",shape="record"];
	"pandas._libs.lib" [label="<f0> Extension| <f1> pandas._libs.lib",shape="record"];
	"pandas._libs.json" [label="<f0> Extension| <f1> pandas._libs.json",shape="record"];
	"pandas._libs.join" [label="<f0> Extension| <f1> pandas._libs.join",shape="record"];
	"pandas._libs.interval" [label="<f0> Extension| <f1> pandas._libs.interval",shape="record"];
	"pandas._libs.internals" [label="<f0> Extension| <f1> pandas._libs.internals",shape="record"];
	"pandas._libs.indexing" [label="<f0> Extension| <f1> pandas._libs.indexing",shape="record"];
	"pandas._libs.index" [label="<f0> Extension| <f1> pandas._libs.index",shape="record"];
	"pandas._libs.hashtable" [label="<f0> Extension| <f1> pandas._libs.hashtable",shape="record"];
	"pandas._libs.hashing" [label="<f0> Extension| <f1> pandas._libs.hashing",shape="record"];
	"pandas._libs.groupby" [label="<f0> Extension| <f1> pandas._libs.groupby",shape="record"];
	"pandas._libs.byteswap" [label="<f0> Extension| <f1> pandas._libs.byteswap",shape="record"];
	"pandas._libs.arrays" [label="<f0> Extension| <f1> pandas._libs.arrays",shape="record"];
	"pandas._libs.algos" [label="<f0> Extension| <f1> pandas._libs.algos",shape="record"];
	"pandas._libs" [label="<f0> Package| <f1> pandas._libs",shape="record"];
	"pandas._version" [label="<f0> SourceModule| <f1> pandas._version",shape="record"];
	"pandas._version_meson" [label="<f0> SourceModule| <f1> pandas._version_meson",shape="record"];
	"pandas.util._tester" [label="<f0> SourceModule| <f1> pandas.util._tester",shape="record"];
	"pandas.io.json._normalize" [label="<f0> SourceModule| <f1> pandas.io.json._normalize",shape="record"];
	"pandas.io.api" [label="<f0> SourceModule| <f1> pandas.io.api",shape="record"];
	"pandas.io.spss" [label="<f0> SourceModule| <f1> pandas.io.spss",shape="record"];
	"pandas.io.html" [label="<f0> SourceModule| <f1> pandas.io.html",shape="record"];
	"'lxml.html'" [label="<f0> MissingModule| <f1> 'lxml.html'",shape="record"];
	"bs4" [label="<f0> MissingModule| <f1> bs4",shape="record"];
	"pandas.util._print_versions" [label="<f0> SourceModule| <f1> pandas.util._print_versions",shape="record"];
	"pandas.testing" [label="<f0> SourceModule| <f1> pandas.testing",shape="record"];
	"pandas._testing" [label="<f0> Package| <f1> pandas._testing",shape="record"];
	"pytest" [label="<f0> MissingModule| <f1> pytest",shape="record"];
	"pandas._testing.contexts" [label="<f0> SourceModule| <f1> pandas._testing.contexts",shape="record"];
	"pandas._testing.compat" [label="<f0> SourceModule| <f1> pandas._testing.compat",shape="record"];
	"pandas._testing.asserters" [label="<f0> SourceModule| <f1> pandas._testing.asserters",shape="record"];
	"'matplotlib.axes'" [label="<f0> MissingModule| <f1> 'matplotlib.axes'",shape="record"];
	"'matplotlib.artist'" [label="<f0> MissingModule| <f1> 'matplotlib.artist'",shape="record"];
	"pandas._testing._warnings" [label="<f0> SourceModule| <f1> pandas._testing._warnings",shape="record"];
	"pandas._testing._io" [label="<f0> SourceModule| <f1> pandas._testing._io",shape="record"];
	"pandas._config.localization" [label="<f0> SourceModule| <f1> pandas._config.localization",shape="record"];
	"pandas.plotting" [label="<f0> Package| <f1> pandas.plotting",shape="record"];
	"pandas.plotting._misc" [label="<f0> SourceModule| <f1> pandas.plotting._misc",shape="record"];
	"'matplotlib.table'" [label="<f0> MissingModule| <f1> 'matplotlib.table'",shape="record"];
	"'matplotlib.figure'" [label="<f0> MissingModule| <f1> 'matplotlib.figure'",shape="record"];
	"pandas.plotting._core" [label="<f0> SourceModule| <f1> pandas.plotting._core",shape="record"];
	"pandas.io" [label="<f0> Package| <f1> pandas.io",shape="record"];
	"pandas.errors" [label="<f0> Package| <f1> pandas.errors",shape="record"];
	"pandas.arrays" [label="<f0> Package| <f1> pandas.arrays",shape="record"];
	"pandas.api" [label="<f0> Package| <f1> pandas.api",shape="record"];
	"pandas.api.typing" [label="<f0> Package| <f1> pandas.api.typing",shape="record"];
	"pandas.api.interchange" [label="<f0> Package| <f1> pandas.api.interchange",shape="record"];
	"pandas.core.interchange.from_dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.from_dataframe",shape="record"];
	"pandas.api.indexers" [label="<f0> Package| <f1> pandas.api.indexers",shape="record"];
	"pandas.core.reshape.api" [label="<f0> SourceModule| <f1> pandas.core.reshape.api",shape="record"];
	"pandas.core.reshape.encoding" [label="<f0> SourceModule| <f1> pandas.core.reshape.encoding",shape="record"];
	"pandas.core.computation.api" [label="<f0> SourceModule| <f1> pandas.core.computation.api",shape="record"];
	"pandas.tseries.offsets" [label="<f0> SourceModule| <f1> pandas.tseries.offsets",shape="record"];
	"pandas.tseries" [label="<f0> Package| <f1> pandas.tseries",shape="record"];
	"pandas.tseries.api" [label="<f0> SourceModule| <f1> pandas.tseries.api",shape="record"];
	"pandas.core.dtypes.dtypes" [label="<f0> SourceModule| <f1> pandas.core.dtypes.dtypes",shape="record"];
	"pandas.core.api" [label="<f0> SourceModule| <f1> pandas.core.api",shape="record"];
	"pandas.core.config_init" [label="<f0> SourceModule| <f1> pandas.core.config_init",shape="record"];
	"pandas._config" [label="<f0> Package| <f1> pandas._config",shape="record"];
	"pandas._config.display" [label="<f0> SourceModule| <f1> pandas._config.display",shape="record"];
	"pandas._config.dates" [label="<f0> SourceModule| <f1> pandas._config.dates",shape="record"];
	"pandas.compat" [label="<f0> Package| <f1> pandas.compat",shape="record"];
	"pandas.compat.pyarrow" [label="<f0> SourceModule| <f1> pandas.compat.pyarrow",shape="record"];
	"pandas.compat.compressors" [label="<f0> SourceModule| <f1> pandas.compat.compressors",shape="record"];
	"openpyxl.packaging.interface" [label="<f0> SourceModule| <f1> openpyxl.packaging.interface",shape="record"];
	"openpyxl.descriptors.slots" [label="<f0> SourceModule| <f1> openpyxl.descriptors.slots",shape="record"];
	"openpyxl.compat.singleton" [label="<f0> SourceModule| <f1> openpyxl.compat.singleton",shape="record"];
	"openpyxl.compat.product" [label="<f0> SourceModule| <f1> openpyxl.compat.product",shape="record"];
	"openpyxl.compat.abc" [label="<f0> SourceModule| <f1> openpyxl.compat.abc",shape="record"];
	"numpy.typing.tests.test_typing" [label="<f0> SourceModule| <f1> numpy.typing.tests.test_typing",shape="record"];
	"_pytest" [label="<f0> MissingModule| <f1> _pytest",shape="record"];
	"mypy" [label="<f0> MissingModule| <f1> mypy",shape="record"];
	"numpy.typing.tests.test_runtime" [label="<f0> SourceModule| <f1> numpy.typing.tests.test_runtime",shape="record"];
	"numpy.typing.tests.test_isfile" [label="<f0> SourceModule| <f1> numpy.typing.tests.test_isfile",shape="record"];
	"numpy.typing.tests" [label="<f0> Package| <f1> numpy.typing.tests",shape="record"];
	"numpy.typing.mypy_plugin" [label="<f0> SourceModule| <f1> numpy.typing.mypy_plugin",shape="record"];
	"'mypy.plugin'" [label="<f0> MissingModule| <f1> 'mypy.plugin'",shape="record"];
	"'mypy.nodes'" [label="<f0> MissingModule| <f1> 'mypy.nodes'",shape="record"];
	"'mypy.build'" [label="<f0> MissingModule| <f1> 'mypy.build'",shape="record"];
	"'mypy.types'" [label="<f0> MissingModule| <f1> 'mypy.types'",shape="record"];
	"numpy.tests.test_warnings" [label="<f0> SourceModule| <f1> numpy.tests.test_warnings",shape="record"];
	"numpy.tests.test_scripts" [label="<f0> SourceModule| <f1> numpy.tests.test_scripts",shape="record"];
	"numpy.tests.test_reloading" [label="<f0> SourceModule| <f1> numpy.tests.test_reloading",shape="record"];
	"numpy.tests.test_public_api" [label="<f0> SourceModule| <f1> numpy.tests.test_public_api",shape="record"];
	"numpy.tests.test_numpy_version" [label="<f0> SourceModule| <f1> numpy.tests.test_numpy_version",shape="record"];
	"numpy.tests.test_numpy_config" [label="<f0> SourceModule| <f1> numpy.tests.test_numpy_config",shape="record"];
	"numpy.tests.test_matlib" [label="<f0> SourceModule| <f1> numpy.tests.test_matlib",shape="record"];
	"numpy.tests.test_lazyloading" [label="<f0> SourceModule| <f1> numpy.tests.test_lazyloading",shape="record"];
	"numpy.tests.test_ctypeslib" [label="<f0> SourceModule| <f1> numpy.tests.test_ctypeslib",shape="record"];
	"numpy.tests.test_configtool" [label="<f0> SourceModule| <f1> numpy.tests.test_configtool",shape="record"];
	"numpy._core.lib.pkgconfig" [label="<f0> NamespacePackage| <f1> numpy._core.lib.pkgconfig",shape="record"];
	"numpy._core.lib" [label="<f0> NamespacePackage| <f1> numpy._core.lib",shape="record"];
	"numpy._core.include" [label="<f0> NamespacePackage| <f1> numpy._core.include",shape="record"];
	"numpy.tests.test__all__" [label="<f0> SourceModule| <f1> numpy.tests.test__all__",shape="record"];
	"numpy.tests" [label="<f0> Package| <f1> numpy.tests",shape="record"];
	"numpy.testing.tests.test_utils" [label="<f0> SourceModule| <f1> numpy.testing.tests.test_utils",shape="record"];
	"numpy.testing.tests" [label="<f0> Package| <f1> numpy.testing.tests",shape="record"];
	"numpy.testing.print_coercion_tables" [label="<f0> SourceModule| <f1> numpy.testing.print_coercion_tables",shape="record"];
	"numpy.random.tests.test_smoke" [label="<f0> SourceModule| <f1> numpy.random.tests.test_smoke",shape="record"];
	"numpy.random.tests.test_seed_sequence" [label="<f0> SourceModule| <f1> numpy.random.tests.test_seed_sequence",shape="record"];
	"numpy.random.tests.test_regression" [label="<f0> SourceModule| <f1> numpy.random.tests.test_regression",shape="record"];
	"numpy.random.tests.test_randomstate_regression" [label="<f0> SourceModule| <f1> numpy.random.tests.test_randomstate_regression",shape="record"];
	"numpy.random.tests.test_randomstate" [label="<f0> SourceModule| <f1> numpy.random.tests.test_randomstate",shape="record"];
	"numpy.random.tests.test_random" [label="<f0> SourceModule| <f1> numpy.random.tests.test_random",shape="record"];
	"numpy.random.tests.test_generator_mt19937_regressions" [label="<f0> SourceModule| <f1> numpy.random.tests.test_generator_mt19937_regressions",shape="record"];
	"numpy.random.tests.test_generator_mt19937" [label="<f0> SourceModule| <f1> numpy.random.tests.test_generator_mt19937",shape="record"];
	"numpy.random.tests.test_extending" [label="<f0> SourceModule| <f1> numpy.random.tests.test_extending",shape="record"];
	"numpy.random._examples.cffi.extending" [label="<f0> SourceModule| <f1> numpy.random._examples.cffi.extending",shape="record"];
	"numpy.random._examples.cffi.parse" [label="<f0> SourceModule| <f1> numpy.random._examples.cffi.parse",shape="record"];
	"numpy.random._examples.cffi" [label="<f0> NamespacePackage| <f1> numpy.random._examples.cffi",shape="record"];
	"numpy.random._examples" [label="<f0> NamespacePackage| <f1> numpy.random._examples",shape="record"];
	"numpy.random._examples.numba.extending" [label="<f0> SourceModule| <f1> numpy.random._examples.numba.extending",shape="record"];
	"timeit" [label="<f0> SourceModule| <f1> timeit",shape="record"];
	"numpy.random._examples.numba" [label="<f0> NamespacePackage| <f1> numpy.random._examples.numba",shape="record"];
	"Cython" [label="<f0> MissingModule| <f1> Cython",shape="record"];
	"cython" [label="<f0> MissingModule| <f1> cython",shape="record"];
	"cffi" [label="<f0> MissingModule| <f1> cffi",shape="record"];
	"numpy.random.tests.test_direct" [label="<f0> SourceModule| <f1> numpy.random.tests.test_direct",shape="record"];
	"numpy.random.tests.data" [label="<f0> Package| <f1> numpy.random.tests.data",shape="record"];
	"numpy.random.tests" [label="<f0> Package| <f1> numpy.random.tests",shape="record"];
	"numpy.polynomial.tests.test_symbol" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_symbol",shape="record"];
	"numpy.polynomial.tests.test_printing" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_printing",shape="record"];
	"numpy.polynomial.tests.test_polyutils" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_polyutils",shape="record"];
	"numpy.polynomial.tests.test_polynomial" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_polynomial",shape="record"];
	"numpy.polynomial.tests.test_legendre" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_legendre",shape="record"];
	"numpy.polynomial.tests.test_laguerre" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_laguerre",shape="record"];
	"numpy.polynomial.tests.test_hermite_e" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_hermite_e",shape="record"];
	"numpy.polynomial.tests.test_hermite" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_hermite",shape="record"];
	"numpy.polynomial.tests.test_classes" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_classes",shape="record"];
	"numpy.polynomial.tests.test_chebyshev" [label="<f0> SourceModule| <f1> numpy.polynomial.tests.test_chebyshev",shape="record"];
	"numpy.polynomial.tests" [label="<f0> Package| <f1> numpy.polynomial.tests",shape="record"];
	"numpy.matrixlib.tests.test_regression" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_regression",shape="record"];
	"numpy.matrixlib.tests.test_numeric" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_numeric",shape="record"];
	"numpy.matrixlib.tests.test_multiarray" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_multiarray",shape="record"];
	"numpy.matrixlib.tests.test_matrix_linalg" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_matrix_linalg",shape="record"];
	"numpy.matrixlib.tests.test_masked_matrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_masked_matrix",shape="record"];
	"numpy.ma.testutils" [label="<f0> SourceModule| <f1> numpy.ma.testutils",shape="record"];
	"numpy.matrixlib.tests.test_interaction" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_interaction",shape="record"];
	"numpy.matrixlib.tests.test_defmatrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.tests.test_defmatrix",shape="record"];
	"numpy.matrixlib.tests" [label="<f0> Package| <f1> numpy.matrixlib.tests",shape="record"];
	"numpy.ma.tests.test_subclassing" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_subclassing",shape="record"];
	"numpy.ma.tests.test_regression" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_regression",shape="record"];
	"numpy.ma.tests.test_old_ma" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_old_ma",shape="record"];
	"numpy.ma.tests.test_mrecords" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_mrecords",shape="record"];
	"numpy.ma.tests.test_extras" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_extras",shape="record"];
	"numpy.ma.tests.test_deprecations" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_deprecations",shape="record"];
	"numpy.ma.tests.test_core" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_core",shape="record"];
	"numpy.ma.tests.test_arrayobject" [label="<f0> SourceModule| <f1> numpy.ma.tests.test_arrayobject",shape="record"];
	"numpy.ma.tests" [label="<f0> Package| <f1> numpy.ma.tests",shape="record"];
	"numpy.linalg.tests.test_regression" [label="<f0> SourceModule| <f1> numpy.linalg.tests.test_regression",shape="record"];
	"numpy.linalg.tests.test_linalg" [label="<f0> SourceModule| <f1> numpy.linalg.tests.test_linalg",shape="record"];
	"resource" [label="<f0> MissingModule| <f1> resource",shape="record"];
	"numpy.linalg.tests.test_deprecations" [label="<f0> SourceModule| <f1> numpy.linalg.tests.test_deprecations",shape="record"];
	"numpy.linalg.tests" [label="<f0> Package| <f1> numpy.linalg.tests",shape="record"];
	"numpy.linalg.lapack_lite" [label="<f0> Extension| <f1> numpy.linalg.lapack_lite",shape="record"];
	"numpy.lib.user_array" [label="<f0> SourceModule| <f1> numpy.lib.user_array",shape="record"];
	"numpy.lib.tests.test_utils" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_utils",shape="record"];
	"numpy.lib.tests.test_ufunclike" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_ufunclike",shape="record"];
	"numpy.lib.tests.test_type_check" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_type_check",shape="record"];
	"numpy.lib.tests.test_twodim_base" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_twodim_base",shape="record"];
	"numpy.lib.tests.test_stride_tricks" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_stride_tricks",shape="record"];
	"numpy.lib.tests.test_shape_base" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_shape_base",shape="record"];
	"numpy.lib.tests.test_regression" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_regression",shape="record"];
	"numpy.lib.tests.test_recfunctions" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_recfunctions",shape="record"];
	"numpy.lib.tests.test_polynomial" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_polynomial",shape="record"];
	"numpy.lib.tests.test_packbits" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_packbits",shape="record"];
	"numpy.lib.tests.test_nanfunctions" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_nanfunctions",shape="record"];
	"numpy.lib.tests.test_mixins" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_mixins",shape="record"];
	"numpy.lib.tests.test_loadtxt" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_loadtxt",shape="record"];
	"numpy.lib.tests.test_io" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_io",shape="record"];
	"numpy.lib.tests.test_index_tricks" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_index_tricks",shape="record"];
	"numpy.lib.tests.test_histograms" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_histograms",shape="record"];
	"numpy.lib.tests.test_function_base" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_function_base",shape="record"];
	"'hypothesis.extra'" [label="<f0> MissingModule| <f1> 'hypothesis.extra'",shape="record"];
	"'hypothesis.strategies'" [label="<f0> MissingModule| <f1> 'hypothesis.strategies'",shape="record"];
	"hypothesis" [label="<f0> MissingModule| <f1> hypothesis",shape="record"];
	"numpy.lib.tests.test_format" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_format",shape="record"];
	"numpy.lib.tests.test_arrayterator" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_arrayterator",shape="record"];
	"numpy.lib.tests.test_arraysetops" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_arraysetops",shape="record"];
	"numpy.lib.tests.test_arraypad" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_arraypad",shape="record"];
	"numpy.lib.tests.test_array_utils" [label="<f0> SourceModule| <f1> numpy.lib.tests.test_array_utils",shape="record"];
	"numpy.lib.tests.test__version" [label="<f0> SourceModule| <f1> numpy.lib.tests.test__version",shape="record"];
	"numpy.lib.tests.test__iotools" [label="<f0> SourceModule| <f1> numpy.lib.tests.test__iotools",shape="record"];
	"numpy.lib.tests.test__datasource" [label="<f0> SourceModule| <f1> numpy.lib.tests.test__datasource",shape="record"];
	"numpy.lib.tests" [label="<f0> Package| <f1> numpy.lib.tests",shape="record"];
	"numpy.lib._user_array_impl" [label="<f0> SourceModule| <f1> numpy.lib._user_array_impl",shape="record"];
	"numpy.fft.tests.test_pocketfft" [label="<f0> SourceModule| <f1> numpy.fft.tests.test_pocketfft",shape="record"];
	"numpy.fft.tests.test_helper" [label="<f0> SourceModule| <f1> numpy.fft.tests.test_helper",shape="record"];
	"numpy.fft.tests" [label="<f0> Package| <f1> numpy.fft.tests",shape="record"];
	"numpy.f2py._src_pyf" [label="<f0> SourceModule| <f1> numpy.f2py._src_pyf",shape="record"];
	"numpy.f2py.__main__" [label="<f0> SourceModule| <f1> numpy.f2py.__main__",shape="record"];
	"numpy.core.umath" [label="<f0> SourceModule| <f1> numpy.core.umath",shape="record"];
	"numpy.core.shape_base" [label="<f0> SourceModule| <f1> numpy.core.shape_base",shape="record"];
	"numpy.core.records" [label="<f0> SourceModule| <f1> numpy.core.records",shape="record"];
	"numpy.core.overrides" [label="<f0> SourceModule| <f1> numpy.core.overrides",shape="record"];
	"numpy.core.numerictypes" [label="<f0> SourceModule| <f1> numpy.core.numerictypes",shape="record"];
	"numpy.core.numeric" [label="<f0> SourceModule| <f1> numpy.core.numeric",shape="record"];
	"numpy.core.multiarray" [label="<f0> SourceModule| <f1> numpy.core.multiarray",shape="record"];
	"numpy.core.getlimits" [label="<f0> SourceModule| <f1> numpy.core.getlimits",shape="record"];
	"numpy.core.function_base" [label="<f0> SourceModule| <f1> numpy.core.function_base",shape="record"];
	"numpy.core.fromnumeric" [label="<f0> SourceModule| <f1> numpy.core.fromnumeric",shape="record"];
	"numpy.core.einsumfunc" [label="<f0> SourceModule| <f1> numpy.core.einsumfunc",shape="record"];
	"numpy.core.defchararray" [label="<f0> SourceModule| <f1> numpy.core.defchararray",shape="record"];
	"numpy.core.arrayprint" [label="<f0> SourceModule| <f1> numpy.core.arrayprint",shape="record"];
	"numpy.core._multiarray_umath" [label="<f0> SourceModule| <f1> numpy.core._multiarray_umath",shape="record"];
	"numpy.core._internal" [label="<f0> SourceModule| <f1> numpy.core._internal",shape="record"];
	"numpy.core._dtype_ctypes" [label="<f0> SourceModule| <f1> numpy.core._dtype_ctypes",shape="record"];
	"numpy.core._dtype" [label="<f0> SourceModule| <f1> numpy.core._dtype",shape="record"];
	"numpy.conftest" [label="<f0> SourceModule| <f1> numpy.conftest",shape="record"];
	"scipy_doctest" [label="<f0> MissingModule| <f1> scipy_doctest",shape="record"];
	"numpy._core.tests._natype" [label="<f0> SourceModule| <f1> numpy._core.tests._natype",shape="record"];
	"numpy._core.tests" [label="<f0> NamespacePackage| <f1> numpy._core.tests",shape="record"];
	"numpy._utils._pep440" [label="<f0> SourceModule| <f1> numpy._utils._pep440",shape="record"];
	"numpy._typing._extended_precision" [label="<f0> SourceModule| <f1> numpy._typing._extended_precision",shape="record"];
	"numpy._pyinstaller.hook-numpy" [label="<f0> SourceModule| <f1> numpy._pyinstaller.hook-numpy",shape="record"];
	"PyInstaller.utils.hooks" [label="<f0> Package| <f1> PyInstaller.utils.hooks",shape="record"];
	"PyInstaller.utils.hooks.conda" [label="<f0> SourceModule| <f1> PyInstaller.utils.hooks.conda",shape="record"];
	"PyInstaller.utils" [label="<f0> Package| <f1> PyInstaller.utils",shape="record"];
	"PyInstaller.utils.misc" [label="<f0> SourceModule| <f1> PyInstaller.utils.misc",shape="record"];
	"PyInstaller.utils.win32.versioninfo" [label="<f0> SourceModule| <f1> PyInstaller.utils.win32.versioninfo",shape="record"];
	"pefile" [label="<f0> SourceModule| <f1> pefile",shape="record"];
	"ordlookup" [label="<f0> Package| <f1> ordlookup",shape="record"];
	"ordlookup.oleaut32" [label="<f0> SourceModule| <f1> ordlookup.oleaut32",shape="record"];
	"ordlookup.ws2_32" [label="<f0> SourceModule| <f1> ordlookup.ws2_32",shape="record"];
	"PyInstaller.utils.win32" [label="<f0> Package| <f1> PyInstaller.utils.win32",shape="record"];
	"PyInstaller.config" [label="<f0> SourceModule| <f1> PyInstaller.config",shape="record"];
	"PyInstaller.isolated" [label="<f0> Package| <f1> PyInstaller.isolated",shape="record"];
	"PyInstaller.isolated._parent" [label="<f0> SourceModule| <f1> PyInstaller.isolated._parent",shape="record"];
	"PyInstaller.depend.imphookapi" [label="<f0> SourceModule| <f1> PyInstaller.depend.imphookapi",shape="record"];
	"PyInstaller.depend" [label="<f0> Package| <f1> PyInstaller.depend",shape="record"];
	"PyInstaller.lib.modulegraph.modulegraph" [label="<f0> SourceModule| <f1> PyInstaller.lib.modulegraph.modulegraph",shape="record"];
	"PyInstaller.lib.modulegraph.util" [label="<f0> SourceModule| <f1> PyInstaller.lib.modulegraph.util",shape="record"];
	"PyInstaller.lib.modulegraph" [label="<f0> Package| <f1> PyInstaller.lib.modulegraph",shape="record"];
	"PyInstaller.lib" [label="<f0> Package| <f1> PyInstaller.lib",shape="record"];
	"altgraph" [label="<f0> Package| <f1> altgraph",shape="record"];
	"pkg_resources" [label="<f0> Package| <f1> pkg_resources",shape="record"];
	"packaging.metadata" [label="<f0> SourceModule| <f1> packaging.metadata",shape="record"];
	"packaging.licenses._spdx" [label="<f0> SourceModule| <f1> packaging.licenses._spdx",shape="record"];
	"packaging.licenses" [label="<f0> Package| <f1> packaging.licenses",shape="record"];
	"packaging._tokenizer" [label="<f0> SourceModule| <f1> packaging._tokenizer",shape="record"];
	"packaging._parser" [label="<f0> SourceModule| <f1> packaging._parser",shape="record"];
	"'_typeshed.importlib'" [label="<f0> MissingModule| <f1> '_typeshed.importlib'",shape="record"];
	"platformdirs" [label="<f0> AliasNode| <f1> platformdirs",shape="record"];
	"jaraco.text" [label="<f0> AliasNode| <f1> jaraco.text",shape="record"];
	"packaging.specifiers" [label="<f0> SourceModule| <f1> packaging.specifiers",shape="record"];
	"packaging.markers" [label="<f0> SourceModule| <f1> packaging.markers",shape="record"];
	"plistlib" [label="<f0> SourceModule| <f1> plistlib",shape="record"];
	"altgraph.ObjectGraph" [label="<f0> SourceModule| <f1> altgraph.ObjectGraph",shape="record"];
	"altgraph.GraphUtil" [label="<f0> SourceModule| <f1> altgraph.GraphUtil",shape="record"];
	"altgraph.Graph" [label="<f0> SourceModule| <f1> altgraph.Graph",shape="record"];
	"importlib_metadata" [label="<f0> AliasNode| <f1> importlib_metadata",shape="record"];
	"PyInstaller.building.utils" [label="<f0> SourceModule| <f1> PyInstaller.building.utils",shape="record"];
	"PyInstaller.building" [label="<f0> Package| <f1> PyInstaller.building",shape="record"];
	"PyInstaller.utils.osx" [label="<f0> SourceModule| <f1> PyInstaller.utils.osx",shape="record"];
	"'macholib.mach_o'" [label="<f0> MissingModule| <f1> 'macholib.mach_o'",shape="record"];
	"'macholib.util'" [label="<f0> MissingModule| <f1> 'macholib.util'",shape="record"];
	"'macholib.MachO'" [label="<f0> MissingModule| <f1> 'macholib.MachO'",shape="record"];
	"macholib" [label="<f0> MissingModule| <f1> macholib",shape="record"];
	"PyInstaller.exceptions" [label="<f0> SourceModule| <f1> PyInstaller.exceptions",shape="record"];
	"PyInstaller.log" [label="<f0> SourceModule| <f1> PyInstaller.log",shape="record"];
	"PyInstaller" [label="<f0> Package| <f1> PyInstaller",shape="record"];
	"packaging.requirements" [label="<f0> SourceModule| <f1> packaging.requirements",shape="record"];
	"PyInstaller.compat" [label="<f0> SourceModule| <f1> PyInstaller.compat",shape="record"];
	"ctypes.util" [label="<f0> SourceModule| <f1> ctypes.util",shape="record"];
	"ctypes._aix" [label="<f0> SourceModule| <f1> ctypes._aix",shape="record"];
	"ctypes.macholib.dyld" [label="<f0> SourceModule| <f1> ctypes.macholib.dyld",shape="record"];
	"ctypes.macholib" [label="<f0> Package| <f1> ctypes.macholib",shape="record"];
	"ctypes.macholib.dylib" [label="<f0> SourceModule| <f1> ctypes.macholib.dylib",shape="record"];
	"ctypes.macholib.framework" [label="<f0> SourceModule| <f1> ctypes.macholib.framework",shape="record"];
	"win32ctypes.pywin32.win32api" [label="<f0> SourceModule| <f1> win32ctypes.pywin32.win32api",shape="record"];
	"win32ctypes.core._time" [label="<f0> MissingModule| <f1> win32ctypes.core._time",shape="record"];
	"win32ctypes.core._system_information" [label="<f0> MissingModule| <f1> win32ctypes.core._system_information",shape="record"];
	"win32ctypes.core._resource" [label="<f0> MissingModule| <f1> win32ctypes.core._resource",shape="record"];
	"win32ctypes.core._dll" [label="<f0> MissingModule| <f1> win32ctypes.core._dll",shape="record"];
	"win32ctypes.core._common" [label="<f0> MissingModule| <f1> win32ctypes.core._common",shape="record"];
	"win32ctypes.core" [label="<f0> Package| <f1> win32ctypes.core",shape="record"];
	"win32ctypes.core.ctypes._util" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._util",shape="record"];
	"win32ctypes.core.ctypes._time" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._time",shape="record"];
	"win32ctypes.core.ctypes._system_information" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._system_information",shape="record"];
	"win32ctypes.core.ctypes._resource" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._resource",shape="record"];
	"win32ctypes.core.ctypes._nl_support" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._nl_support",shape="record"];
	"win32ctypes.core.ctypes._dll" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._dll",shape="record"];
	"win32ctypes.core.ctypes._common" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._common",shape="record"];
	"win32ctypes.core.ctypes._authentication" [label="<f0> SourceModule| <f1> win32ctypes.core.ctypes._authentication",shape="record"];
	"win32ctypes.core.compat" [label="<f0> SourceModule| <f1> win32ctypes.core.compat",shape="record"];
	"win32ctypes.core.ctypes" [label="<f0> Package| <f1> win32ctypes.core.ctypes",shape="record"];
	"win32ctypes.core._authentication" [label="<f0> MissingModule| <f1> win32ctypes.core._authentication",shape="record"];
	"win32ctypes" [label="<f0> Package| <f1> win32ctypes",shape="record"];
	"win32ctypes.version" [label="<f0> SourceModule| <f1> win32ctypes.version",shape="record"];
	"win32ctypes.core._winerrors" [label="<f0> SourceModule| <f1> win32ctypes.core._winerrors",shape="record"];
	"win32ctypes.pywin32.pywintypes" [label="<f0> SourceModule| <f1> win32ctypes.pywin32.pywintypes",shape="record"];
	"win32ctypes.pywin32" [label="<f0> Package| <f1> win32ctypes.pywin32",shape="record"];
	"win32ctypes.pywin32.win32cred" [label="<f0> SourceModule| <f1> win32ctypes.pywin32.win32cred",shape="record"];
	"PyInstaller._shared_with_waf" [label="<f0> SourceModule| <f1> PyInstaller._shared_with_waf",shape="record"];
	"site" [label="<f0> SourceModule| <f1> site",shape="record"];
	"usercustomize" [label="<f0> MissingModule| <f1> usercustomize",shape="record"];
	"sitecustomize" [label="<f0> MissingModule| <f1> sitecustomize",shape="record"];
	"rlcompleter" [label="<f0> SourceModule| <f1> rlcompleter",shape="record"];
	"_sitebuiltins" [label="<f0> SourceModule| <f1> _sitebuiltins",shape="record"];
	"setuptools._vendor.platformdirs" [label="<f0> Package| <f1> setuptools._vendor.platformdirs",shape="record"];
	"platformdirs.android" [label="<f0> AliasNode| <f1> platformdirs.android",shape="record"];
	"platformdirs.unix" [label="<f0> AliasNode| <f1> platformdirs.unix",shape="record"];
	"platformdirs.macos" [label="<f0> AliasNode| <f1> platformdirs.macos",shape="record"];
	"platformdirs.windows" [label="<f0> AliasNode| <f1> platformdirs.windows",shape="record"];
	"setuptools._vendor" [label="<f0> NamespacePackage| <f1> setuptools._vendor",shape="record"];
	"setuptools" [label="<f0> Package| <f1> setuptools",shape="record"];
	"setuptools.msvc" [label="<f0> SourceModule| <f1> setuptools.msvc",shape="record"];
	"setuptools._distutils.command.build_ext" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build_ext",shape="record"];
	"setuptools._distutils._msvccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils._msvccompiler",shape="record"];
	"setuptools.warnings" [label="<f0> SourceModule| <f1> setuptools.warnings",shape="record"];
	"setuptools.version" [label="<f0> SourceModule| <f1> setuptools.version",shape="record"];
	"setuptools._importlib" [label="<f0> SourceModule| <f1> setuptools._importlib",shape="record"];
	"setuptools.extension" [label="<f0> SourceModule| <f1> setuptools.extension",shape="record"];
	"setuptools._path" [label="<f0> SourceModule| <f1> setuptools._path",shape="record"];
	"setuptools.dist" [label="<f0> SourceModule| <f1> setuptools.dist",shape="record"];
	"setuptools.command.bdist_wheel" [label="<f0> SourceModule| <f1> setuptools.command.bdist_wheel",shape="record"];
	"setuptools._vendor.wheel.macosx_libfile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.macosx_libfile",shape="record"];
	"wheel" [label="<f0> AliasNode| <f1> wheel",shape="record"];
	"setuptools.command.egg_info" [label="<f0> SourceModule| <f1> setuptools.command.egg_info",shape="record"];
	"setuptools._distutils.filelist" [label="<f0> SourceModule| <f1> setuptools._distutils.filelist",shape="record"];
	"setuptools.command._requirestxt" [label="<f0> SourceModule| <f1> setuptools.command._requirestxt",shape="record"];
	"setuptools.glob" [label="<f0> SourceModule| <f1> setuptools.glob",shape="record"];
	"setuptools.command.setopt" [label="<f0> SourceModule| <f1> setuptools.command.setopt",shape="record"];
	"setuptools.command.sdist" [label="<f0> SourceModule| <f1> setuptools.command.sdist",shape="record"];
	"setuptools._distutils.command.sdist" [label="<f0> SourceModule| <f1> setuptools._distutils.command.sdist",shape="record"];
	"setuptools.command.build" [label="<f0> SourceModule| <f1> setuptools.command.build",shape="record"];
	"setuptools._distutils.command.build" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build",shape="record"];
	"setuptools.command.bdist_egg" [label="<f0> SourceModule| <f1> setuptools.command.bdist_egg",shape="record"];
	"setuptools.unicode_utils" [label="<f0> SourceModule| <f1> setuptools.unicode_utils",shape="record"];
	"setuptools.compat.py39" [label="<f0> SourceModule| <f1> setuptools.compat.py39",shape="record"];
	"setuptools.compat" [label="<f0> Package| <f1> setuptools.compat",shape="record"];
	"setuptools.compat.py311" [label="<f0> SourceModule| <f1> setuptools.compat.py311",shape="record"];
	"setuptools._vendor.wheel.wheelfile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.wheelfile",shape="record"];
	"setuptools._vendor.wheel.util" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.util",shape="record"];
	"setuptools._vendor.wheel.cli" [label="<f0> Package| <f1> setuptools._vendor.wheel.cli",shape="record"];
	"setuptools._vendor.wheel.cli.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.tags",shape="record"];
	"setuptools._vendor.wheel.cli.convert" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.convert",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.tags",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._musllinux",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._elffile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._elffile",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._manylinux",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging" [label="<f0> Package| <f1> setuptools._vendor.wheel.vendored.packaging",shape="record"];
	"setuptools._vendor.wheel.vendored" [label="<f0> Package| <f1> setuptools._vendor.wheel.vendored",shape="record"];
	"setuptools._vendor.wheel.metadata" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.metadata",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.requirements",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.utils",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.version",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._structures",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.specifiers",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.markers",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._tokenizer",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._parser",shape="record"];
	"setuptools._vendor.wheel.cli.pack" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.pack",shape="record"];
	"setuptools._vendor.wheel.cli.unpack" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.unpack",shape="record"];
	"setuptools.installer" [label="<f0> SourceModule| <f1> setuptools.installer",shape="record"];
	"setuptools.wheel" [label="<f0> SourceModule| <f1> setuptools.wheel",shape="record"];
	"setuptools._discovery" [label="<f0> SourceModule| <f1> setuptools._discovery",shape="record"];
	"setuptools.archive_util" [label="<f0> SourceModule| <f1> setuptools.archive_util",shape="record"];
	"setuptools._distutils.log" [label="<f0> SourceModule| <f1> setuptools._distutils.log",shape="record"];
	"setuptools.errors" [label="<f0> SourceModule| <f1> setuptools.errors",shape="record"];
	"setuptools.config.setupcfg" [label="<f0> SourceModule| <f1> setuptools.config.setupcfg",shape="record"];
	"setuptools.config.expand" [label="<f0> SourceModule| <f1> setuptools.config.expand",shape="record"];
	"setuptools.config.pyprojecttoml" [label="<f0> SourceModule| <f1> setuptools.config.pyprojecttoml",shape="record"];
	"setuptools.config._validate_pyproject" [label="<f0> Package| <f1> setuptools.config._validate_pyproject",shape="record"];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.fastjsonschema_validations",shape="record"];
	"setuptools.config._validate_pyproject.fastjsonschema_exceptions" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.fastjsonschema_exceptions",shape="record"];
	"setuptools.config._validate_pyproject.extra_validations" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.extra_validations",shape="record"];
	"setuptools.config._validate_pyproject.error_reporting" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.error_reporting",shape="record"];
	"setuptools.config._validate_pyproject.formats" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.formats",shape="record"];
	"trove_classifiers" [label="<f0> MissingModule| <f1> trove_classifiers",shape="record"];
	"setuptools._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.requirements",shape="record"];
	"setuptools._vendor.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.utils",shape="record"];
	"setuptools._vendor.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.version",shape="record"];
	"setuptools._vendor.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._structures",shape="record"];
	"setuptools._vendor.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.tags",shape="record"];
	"setuptools._vendor.packaging._musllinux" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._musllinux",shape="record"];
	"setuptools._vendor.packaging._elffile" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._elffile",shape="record"];
	"setuptools._vendor.packaging._manylinux" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._manylinux",shape="record"];
	"setuptools._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.specifiers",shape="record"];
	"setuptools._vendor.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.markers",shape="record"];
	"setuptools._vendor.packaging._tokenizer" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._tokenizer",shape="record"];
	"setuptools._vendor.packaging._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._parser",shape="record"];
	"setuptools._vendor.packaging" [label="<f0> Package| <f1> setuptools._vendor.packaging",shape="record"];
	"setuptools.compat.py310" [label="<f0> SourceModule| <f1> setuptools.compat.py310",shape="record"];
	"tomli" [label="<f0> AliasNode| <f1> tomli",shape="record"];
	"tomllib" [label="<f0> Package| <f1> tomllib",shape="record"];
	"tomllib._parser" [label="<f0> SourceModule| <f1> tomllib._parser",shape="record"];
	"tomllib._types" [label="<f0> SourceModule| <f1> tomllib._types",shape="record"];
	"tomllib._re" [label="<f0> SourceModule| <f1> tomllib._re",shape="record"];
	"setuptools.config._apply_pyprojecttoml" [label="<f0> SourceModule| <f1> setuptools.config._apply_pyprojecttoml",shape="record"];
	"setuptools.config" [label="<f0> Package| <f1> setuptools.config",shape="record"];
	"setuptools._static" [label="<f0> SourceModule| <f1> setuptools._static",shape="record"];
	"setuptools._shutil" [label="<f0> SourceModule| <f1> setuptools._shutil",shape="record"];
	"setuptools.windows_support" [label="<f0> SourceModule| <f1> setuptools.windows_support",shape="record"];
	"setuptools.command" [label="<f0> Package| <f1> setuptools.command",shape="record"];
	"setuptools._distutils.command.bdist" [label="<f0> SourceModule| <f1> setuptools._distutils.command.bdist",shape="record"];
	"setuptools._entry_points" [label="<f0> SourceModule| <f1> setuptools._entry_points",shape="record"];
	"setuptools._itertools" [label="<f0> SourceModule| <f1> setuptools._itertools",shape="record"];
	"setuptools.discovery" [label="<f0> SourceModule| <f1> setuptools.discovery",shape="record"];
	"setuptools.depends" [label="<f0> SourceModule| <f1> setuptools.depends",shape="record"];
	"setuptools._imp" [label="<f0> SourceModule| <f1> setuptools._imp",shape="record"];
	"setuptools.logging" [label="<f0> SourceModule| <f1> setuptools.logging",shape="record"];
	"setuptools.monkey" [label="<f0> SourceModule| <f1> setuptools.monkey",shape="record"];
	"setuptools._core_metadata" [label="<f0> SourceModule| <f1> setuptools._core_metadata",shape="record"];
	"setuptools._reqs" [label="<f0> SourceModule| <f1> setuptools._reqs",shape="record"];
	"setuptools._normalization" [label="<f0> SourceModule| <f1> setuptools._normalization",shape="record"];
	"_distutils_hack.override" [label="<f0> SourceModule| <f1> _distutils_hack.override",shape="record"];
	"_distutils_hack" [label="<f0> Package| <f1> _distutils_hack",shape="record"];
	"setuptools._vendor.platformdirs.version" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.version",shape="record"];
	"setuptools._vendor.platformdirs.api" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.api",shape="record"];
	"setuptools._vendor.platformdirs.android" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.android",shape="record"];
	"jnius" [label="<f0> MissingModule| <f1> jnius",shape="record"];
	"android" [label="<f0> MissingModule| <f1> android",shape="record"];
	"setuptools._vendor.platformdirs.unix" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.unix",shape="record"];
	"setuptools._vendor.platformdirs.macos" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.macos",shape="record"];
	"setuptools._vendor.platformdirs.windows" [label="<f0> SourceModule| <f1> setuptools._vendor.platformdirs.windows",shape="record"];
	"numpy._pyinstaller" [label="<f0> Package| <f1> numpy._pyinstaller",shape="record"];
	"numpy._core.cversions" [label="<f0> SourceModule| <f1> numpy._core.cversions",shape="record"];
	"'code_generators.numpy_api'" [label="<f0> MissingModule| <f1> 'code_generators.numpy_api'",shape="record"];
	"code_generators" [label="<f0> MissingModule| <f1> code_generators",shape="record"];
	"numpy._core._umath_tests" [label="<f0> Extension| <f1> numpy._core._umath_tests",shape="record"];
	"numpy._core._struct_ufunc_tests" [label="<f0> Extension| <f1> numpy._core._struct_ufunc_tests",shape="record"];
	"numpy._core._simd" [label="<f0> Extension| <f1> numpy._core._simd",shape="record"];
	"numpy._core._rational_tests" [label="<f0> Extension| <f1> numpy._core._rational_tests",shape="record"];
	"numpy._core._operand_flag_tests" [label="<f0> Extension| <f1> numpy._core._operand_flag_tests",shape="record"];
	"numpy._core._multiarray_tests" [label="<f0> Extension| <f1> numpy._core._multiarray_tests",shape="record"];
	"numpy._core._exceptions" [label="<f0> SourceModule| <f1> numpy._core._exceptions",shape="record"];
	"numpy._configtool" [label="<f0> SourceModule| <f1> numpy._configtool",shape="record"];
	"pandas.util._doctools" [label="<f0> SourceModule| <f1> pandas.util._doctools",shape="record"];
	"pandas.tests.window.test_win_type" [label="<f0> SourceModule| <f1> pandas.tests.window.test_win_type",shape="record"];
	"pandas.tests.window.test_timeseries_window" [label="<f0> SourceModule| <f1> pandas.tests.window.test_timeseries_window",shape="record"];
	"pandas.util._test_decorators" [label="<f0> SourceModule| <f1> pandas.util._test_decorators",shape="record"];
	"pandas.tests.window.test_rolling_skew_kurt" [label="<f0> SourceModule| <f1> pandas.tests.window.test_rolling_skew_kurt",shape="record"];
	"pandas.tests.window.test_rolling_quantile" [label="<f0> SourceModule| <f1> pandas.tests.window.test_rolling_quantile",shape="record"];
	"pandas.tests.window.test_rolling_functions" [label="<f0> SourceModule| <f1> pandas.tests.window.test_rolling_functions",shape="record"];
	"pandas.tests.window.test_rolling" [label="<f0> SourceModule| <f1> pandas.tests.window.test_rolling",shape="record"];
	"pandas.tests.window.test_pairwise" [label="<f0> SourceModule| <f1> pandas.tests.window.test_pairwise",shape="record"];
	"pandas.tests.window.test_online" [label="<f0> SourceModule| <f1> pandas.tests.window.test_online",shape="record"];
	"pandas.tests.window.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.window.test_numba",shape="record"];
	"pandas.tests.window.test_groupby" [label="<f0> SourceModule| <f1> pandas.tests.window.test_groupby",shape="record"];
	"pandas.tests.window.test_expanding" [label="<f0> SourceModule| <f1> pandas.tests.window.test_expanding",shape="record"];
	"pandas.tests.window.test_ewm" [label="<f0> SourceModule| <f1> pandas.tests.window.test_ewm",shape="record"];
	"pandas.tests.window.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.window.test_dtypes",shape="record"];
	"pandas.tests.window.test_cython_aggregations" [label="<f0> SourceModule| <f1> pandas.tests.window.test_cython_aggregations",shape="record"];
	"pandas.tests.window.test_base_indexer" [label="<f0> SourceModule| <f1> pandas.tests.window.test_base_indexer",shape="record"];
	"pandas.tests.window.test_apply" [label="<f0> SourceModule| <f1> pandas.tests.window.test_apply",shape="record"];
	"pandas.tests.window.test_api" [label="<f0> SourceModule| <f1> pandas.tests.window.test_api",shape="record"];
	"pandas.tests.window.moments.test_moments_consistency_rolling" [label="<f0> SourceModule| <f1> pandas.tests.window.moments.test_moments_consistency_rolling",shape="record"];
	"pandas.tests.window.moments.test_moments_consistency_expanding" [label="<f0> SourceModule| <f1> pandas.tests.window.moments.test_moments_consistency_expanding",shape="record"];
	"pandas.tests.window.moments.test_moments_consistency_ewm" [label="<f0> SourceModule| <f1> pandas.tests.window.moments.test_moments_consistency_ewm",shape="record"];
	"pandas.tests.window.moments.conftest" [label="<f0> SourceModule| <f1> pandas.tests.window.moments.conftest",shape="record"];
	"pandas.tests.window.moments" [label="<f0> Package| <f1> pandas.tests.window.moments",shape="record"];
	"pandas.tests.window.conftest" [label="<f0> SourceModule| <f1> pandas.tests.window.conftest",shape="record"];
	"pandas.tests.window" [label="<f0> Package| <f1> pandas.tests.window",shape="record"];
	"pandas.tests.util.test_validate_kwargs" [label="<f0> SourceModule| <f1> pandas.tests.util.test_validate_kwargs",shape="record"];
	"pandas.tests.util.test_validate_inclusive" [label="<f0> SourceModule| <f1> pandas.tests.util.test_validate_inclusive",shape="record"];
	"pandas.tests.util.test_validate_args_and_kwargs" [label="<f0> SourceModule| <f1> pandas.tests.util.test_validate_args_and_kwargs",shape="record"];
	"pandas.tests.util.test_validate_args" [label="<f0> SourceModule| <f1> pandas.tests.util.test_validate_args",shape="record"];
	"pandas.tests.util.test_util" [label="<f0> SourceModule| <f1> pandas.tests.util.test_util",shape="record"];
	"pandas.tests.util.test_show_versions" [label="<f0> SourceModule| <f1> pandas.tests.util.test_show_versions",shape="record"];
	"pandas.tests.util.test_shares_memory" [label="<f0> SourceModule| <f1> pandas.tests.util.test_shares_memory",shape="record"];
	"pandas.tests.util.test_rewrite_warning" [label="<f0> SourceModule| <f1> pandas.tests.util.test_rewrite_warning",shape="record"];
	"pandas.tests.util.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.util.test_numba",shape="record"];
	"pandas.tests.util.test_hashing" [label="<f0> SourceModule| <f1> pandas.tests.util.test_hashing",shape="record"];
	"pandas.tests.util.test_doc" [label="<f0> SourceModule| <f1> pandas.tests.util.test_doc",shape="record"];
	"pandas.tests.util.test_deprecate_nonkeyword_arguments" [label="<f0> SourceModule| <f1> pandas.tests.util.test_deprecate_nonkeyword_arguments",shape="record"];
	"pandas.tests.util.test_deprecate_kwarg" [label="<f0> SourceModule| <f1> pandas.tests.util.test_deprecate_kwarg",shape="record"];
	"pandas.tests.util.test_deprecate" [label="<f0> SourceModule| <f1> pandas.tests.util.test_deprecate",shape="record"];
	"pandas.tests.util.test_assert_series_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_series_equal",shape="record"];
	"pandas.tests.util.test_assert_produces_warning" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_produces_warning",shape="record"];
	"pandas.tests.util.test_assert_numpy_array_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_numpy_array_equal",shape="record"];
	"pandas.tests.util.test_assert_interval_array_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_interval_array_equal",shape="record"];
	"pandas.tests.util.test_assert_index_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_index_equal",shape="record"];
	"pandas.tests.util.test_assert_frame_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_frame_equal",shape="record"];
	"pandas.tests.util.test_assert_extension_array_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_extension_array_equal",shape="record"];
	"pandas.tests.util.test_assert_categorical_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_categorical_equal",shape="record"];
	"pandas.tests.util.test_assert_attr_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_attr_equal",shape="record"];
	"pandas.tests.util.test_assert_almost_equal" [label="<f0> SourceModule| <f1> pandas.tests.util.test_assert_almost_equal",shape="record"];
	"pandas.tests.util.conftest" [label="<f0> SourceModule| <f1> pandas.tests.util.conftest",shape="record"];
	"pandas.tests.util" [label="<f0> Package| <f1> pandas.tests.util",shape="record"];
	"pandas.tests.tslibs.test_tzconversion" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_tzconversion",shape="record"];
	"pandas.tests.tslibs.test_to_offset" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_to_offset",shape="record"];
	"pandas.tests.tslibs.test_timezones" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_timezones",shape="record"];
	"pandas.tests.tslibs.test_timedeltas" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_timedeltas",shape="record"];
	"pandas.tests.tslibs.test_strptime" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_strptime",shape="record"];
	"pandas.tests.tslibs.test_resolution" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_resolution",shape="record"];
	"pandas.tests.tslibs.test_period" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_period",shape="record"];
	"pandas.tests.tslibs.test_parsing" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_parsing",shape="record"];
	"pandas.tests.tslibs.test_parse_iso8601" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_parse_iso8601",shape="record"];
	"pandas.tests.tslibs.test_npy_units" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_npy_units",shape="record"];
	"pandas.tests.tslibs.test_np_datetime" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_np_datetime",shape="record"];
	"pandas.tests.tslibs.test_liboffsets" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_liboffsets",shape="record"];
	"pandas.tests.tslibs.test_libfrequencies" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_libfrequencies",shape="record"];
	"pandas.tests.tslibs.test_fields" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_fields",shape="record"];
	"pandas.tests.tslibs.test_conversion" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_conversion",shape="record"];
	"pandas.tests.tslibs.test_ccalendar" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_ccalendar",shape="record"];
	"pandas.tests.tslibs.test_array_to_datetime" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_array_to_datetime",shape="record"];
	"pandas.tests.tslibs.test_api" [label="<f0> SourceModule| <f1> pandas.tests.tslibs.test_api",shape="record"];
	"pandas.tests.tslibs" [label="<f0> Package| <f1> pandas.tests.tslibs",shape="record"];
	"pandas.tests.tseries.offsets.test_year" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_year",shape="record"];
	"pandas.tests.tseries.offsets.test_week" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_week",shape="record"];
	"pandas.tests.tseries.offsets.test_ticks" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_ticks",shape="record"];
	"pandas.tests.tseries.offsets.test_quarter" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_quarter",shape="record"];
	"pandas.tests.tseries.offsets.test_offsets_properties" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_offsets_properties",shape="record"];
	"pandas.tests.tseries.offsets.test_offsets" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_offsets",shape="record"];
	"pandas.tests.tseries.offsets.test_month" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_month",shape="record"];
	"pandas.tests.tseries.offsets.test_index" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_index",shape="record"];
	"pandas.tests.tseries.offsets.test_fiscal" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_fiscal",shape="record"];
	"pandas.tests.tseries.offsets.test_easter" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_easter",shape="record"];
	"pandas.tests.tseries.offsets.test_dst" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_dst",shape="record"];
	"pandas.tests.tseries.offsets.test_custom_business_month" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_custom_business_month",shape="record"];
	"pandas.tests.tseries.offsets.test_custom_business_hour" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_custom_business_hour",shape="record"];
	"pandas.tests.tseries.offsets.test_custom_business_day" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_custom_business_day",shape="record"];
	"pandas.tests.tseries.offsets.test_common" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_common",shape="record"];
	"pandas.tests.tseries.offsets.test_business_year" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_business_year",shape="record"];
	"pandas.tests.tseries.offsets.test_business_quarter" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_business_quarter",shape="record"];
	"pandas.tests.tseries.offsets.test_business_month" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_business_month",shape="record"];
	"pandas.tests.tseries.offsets.test_business_hour" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_business_hour",shape="record"];
	"pandas.tests.tseries.offsets.test_business_day" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.test_business_day",shape="record"];
	"pandas.tests.tseries.offsets.common" [label="<f0> SourceModule| <f1> pandas.tests.tseries.offsets.common",shape="record"];
	"pandas.tests.tseries.offsets" [label="<f0> Package| <f1> pandas.tests.tseries.offsets",shape="record"];
	"pandas.tests.tseries.holiday.test_observance" [label="<f0> SourceModule| <f1> pandas.tests.tseries.holiday.test_observance",shape="record"];
	"pandas.tests.tseries.holiday.test_holiday" [label="<f0> SourceModule| <f1> pandas.tests.tseries.holiday.test_holiday",shape="record"];
	"pandas.tests.tseries.holiday.test_federal" [label="<f0> SourceModule| <f1> pandas.tests.tseries.holiday.test_federal",shape="record"];
	"pandas.tests.tseries.holiday.test_calendar" [label="<f0> SourceModule| <f1> pandas.tests.tseries.holiday.test_calendar",shape="record"];
	"pandas.tests.tseries.holiday" [label="<f0> Package| <f1> pandas.tests.tseries.holiday",shape="record"];
	"pandas.tests.tseries.frequencies.test_inference" [label="<f0> SourceModule| <f1> pandas.tests.tseries.frequencies.test_inference",shape="record"];
	"pandas.tests.tseries.frequencies.test_frequencies" [label="<f0> SourceModule| <f1> pandas.tests.tseries.frequencies.test_frequencies",shape="record"];
	"pandas.tests.tseries.frequencies.test_freq_code" [label="<f0> SourceModule| <f1> pandas.tests.tseries.frequencies.test_freq_code",shape="record"];
	"pandas.tests.tseries.frequencies" [label="<f0> Package| <f1> pandas.tests.tseries.frequencies",shape="record"];
	"pandas.tests.tseries" [label="<f0> Package| <f1> pandas.tests.tseries",shape="record"];
	"pandas.tests.tools.test_to_timedelta" [label="<f0> SourceModule| <f1> pandas.tests.tools.test_to_timedelta",shape="record"];
	"pandas.tests.tools.test_to_time" [label="<f0> SourceModule| <f1> pandas.tests.tools.test_to_time",shape="record"];
	"pandas.tests.tools.test_to_numeric" [label="<f0> SourceModule| <f1> pandas.tests.tools.test_to_numeric",shape="record"];
	"pandas.tests.tools.test_to_datetime" [label="<f0> SourceModule| <f1> pandas.tests.tools.test_to_datetime",shape="record"];
	"pandas.tests.indexes.datetimes.test_timezones" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_timezones",shape="record"];
	"pandas.tests.tools" [label="<f0> Package| <f1> pandas.tests.tools",shape="record"];
	"pandas.tests.test_take" [label="<f0> SourceModule| <f1> pandas.tests.test_take",shape="record"];
	"pandas.tests.test_sorting" [label="<f0> SourceModule| <f1> pandas.tests.test_sorting",shape="record"];
	"pandas.tests.test_register_accessor" [label="<f0> SourceModule| <f1> pandas.tests.test_register_accessor",shape="record"];
	"pandas.tests.test_optional_dependency" [label="<f0> SourceModule| <f1> pandas.tests.test_optional_dependency",shape="record"];
	"pandas.tests.test_nanops" [label="<f0> SourceModule| <f1> pandas.tests.test_nanops",shape="record"];
	"pandas.tests.test_multilevel" [label="<f0> SourceModule| <f1> pandas.tests.test_multilevel",shape="record"];
	"pandas.tests.test_flags" [label="<f0> SourceModule| <f1> pandas.tests.test_flags",shape="record"];
	"pandas.tests.test_expressions" [label="<f0> SourceModule| <f1> pandas.tests.test_expressions",shape="record"];
	"pandas.tests.test_errors" [label="<f0> SourceModule| <f1> pandas.tests.test_errors",shape="record"];
	"pandas.tests.test_downstream" [label="<f0> SourceModule| <f1> pandas.tests.test_downstream",shape="record"];
	"xarray" [label="<f0> MissingModule| <f1> xarray",shape="record"];
	"dask" [label="<f0> MissingModule| <f1> dask",shape="record"];
	"sklearn" [label="<f0> MissingModule| <f1> sklearn",shape="record"];
	"pandas.tests.test_common" [label="<f0> SourceModule| <f1> pandas.tests.test_common",shape="record"];
	"pandas.tests.test_algos" [label="<f0> SourceModule| <f1> pandas.tests.test_algos",shape="record"];
	"pandas.tests.test_aggregation" [label="<f0> SourceModule| <f1> pandas.tests.test_aggregation",shape="record"];
	"pandas.tests.strings.test_strings" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_strings",shape="record"];
	"pandas.tests.strings.test_string_array" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_string_array",shape="record"];
	"pandas.tests.strings.test_split_partition" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_split_partition",shape="record"];
	"pandas.tests.strings.test_get_dummies" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_get_dummies",shape="record"];
	"pandas.tests.strings.test_find_replace" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_find_replace",shape="record"];
	"pandas.tests.strings.test_extract" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_extract",shape="record"];
	"pandas.tests.strings.test_cat" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_cat",shape="record"];
	"pandas.tests.strings.test_case_justify" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_case_justify",shape="record"];
	"pandas.tests.strings.test_api" [label="<f0> SourceModule| <f1> pandas.tests.strings.test_api",shape="record"];
	"pandas.tests.strings.conftest" [label="<f0> SourceModule| <f1> pandas.tests.strings.conftest",shape="record"];
	"pandas.tests.strings" [label="<f0> Package| <f1> pandas.tests.strings",shape="record"];
	"pandas.tests.series.test_validate" [label="<f0> SourceModule| <f1> pandas.tests.series.test_validate",shape="record"];
	"pandas.tests.series.test_unary" [label="<f0> SourceModule| <f1> pandas.tests.series.test_unary",shape="record"];
	"pandas.tests.series.test_ufunc" [label="<f0> SourceModule| <f1> pandas.tests.series.test_ufunc",shape="record"];
	"pandas.tests.series.test_subclass" [label="<f0> SourceModule| <f1> pandas.tests.series.test_subclass",shape="record"];
	"pandas.tests.series.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.series.test_reductions",shape="record"];
	"pandas.tests.series.test_npfuncs" [label="<f0> SourceModule| <f1> pandas.tests.series.test_npfuncs",shape="record"];
	"pandas.tests.series.test_missing" [label="<f0> SourceModule| <f1> pandas.tests.series.test_missing",shape="record"];
	"pandas.tests.series.test_logical_ops" [label="<f0> SourceModule| <f1> pandas.tests.series.test_logical_ops",shape="record"];
	"pandas.tests.series.test_iteration" [label="<f0> SourceModule| <f1> pandas.tests.series.test_iteration",shape="record"];
	"pandas.tests.series.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.series.test_formats",shape="record"];
	"pandas.tests.series.test_cumulative" [label="<f0> SourceModule| <f1> pandas.tests.series.test_cumulative",shape="record"];
	"pandas.tests.series.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.series.test_constructors",shape="record"];
	"pandas.tests.series.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.series.test_arithmetic",shape="record"];
	"pandas.tests.series.test_api" [label="<f0> SourceModule| <f1> pandas.tests.series.test_api",shape="record"];
	"pandas.tests.series.methods.test_view" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_view",shape="record"];
	"pandas.tests.series.methods.test_values" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_values",shape="record"];
	"pandas.tests.series.methods.test_value_counts" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_value_counts",shape="record"];
	"pandas.tests.series.methods.test_update" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_update",shape="record"];
	"pandas.tests.series.methods.test_unstack" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_unstack",shape="record"];
	"pandas.tests.series.methods.test_unique" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_unique",shape="record"];
	"pandas.tests.series.methods.test_tz_localize" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_tz_localize",shape="record"];
	"pandas.tests.series.methods.test_truncate" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_truncate",shape="record"];
	"pandas.tests.series.methods.test_tolist" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_tolist",shape="record"];
	"pandas.tests.series.methods.test_to_numpy" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_to_numpy",shape="record"];
	"pandas.tests.series.methods.test_to_frame" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_to_frame",shape="record"];
	"pandas.tests.series.methods.test_to_dict" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_to_dict",shape="record"];
	"pandas.tests.series.methods.test_to_csv" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_to_csv",shape="record"];
	"pandas.tests.series.methods.test_sort_values" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_sort_values",shape="record"];
	"pandas.tests.series.methods.test_sort_index" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_sort_index",shape="record"];
	"pandas.tests.series.methods.test_size" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_size",shape="record"];
	"pandas.tests.series.methods.test_set_name" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_set_name",shape="record"];
	"pandas.tests.series.methods.test_searchsorted" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_searchsorted",shape="record"];
	"pandas.tests.series.methods.test_round" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_round",shape="record"];
	"pandas.tests.series.methods.test_reset_index" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_reset_index",shape="record"];
	"pandas.tests.series.methods.test_replace" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_replace",shape="record"];
	"pandas.tests.series.methods.test_repeat" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_repeat",shape="record"];
	"pandas.tests.series.methods.test_rename_axis" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_rename_axis",shape="record"];
	"pandas.tests.series.methods.test_rename" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_rename",shape="record"];
	"pandas.tests.series.methods.test_reindex_like" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_reindex_like",shape="record"];
	"pandas.tests.series.methods.test_reindex" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_reindex",shape="record"];
	"pandas.tests.series.methods.test_rank" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_rank",shape="record"];
	"pandas.tests.series.methods.test_quantile" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_quantile",shape="record"];
	"pandas.tests.series.methods.test_pop" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_pop",shape="record"];
	"pandas.tests.series.methods.test_pct_change" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_pct_change",shape="record"];
	"pandas.tests.series.methods.test_nunique" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_nunique",shape="record"];
	"pandas.tests.series.methods.test_nlargest" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_nlargest",shape="record"];
	"pandas.tests.series.methods.test_matmul" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_matmul",shape="record"];
	"pandas.tests.series.methods.test_map" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_map",shape="record"];
	"pandas.tests.series.methods.test_item" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_item",shape="record"];
	"pandas.tests.series.methods.test_isna" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_isna",shape="record"];
	"pandas.tests.series.methods.test_isin" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_isin",shape="record"];
	"pandas.tests.series.methods.test_is_unique" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_is_unique",shape="record"];
	"pandas.tests.series.methods.test_is_monotonic" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_is_monotonic",shape="record"];
	"pandas.tests.series.methods.test_interpolate" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_interpolate",shape="record"];
	"pandas.tests.series.methods.test_info" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_info",shape="record"];
	"pandas.tests.series.methods.test_infer_objects" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_infer_objects",shape="record"];
	"pandas.tests.series.methods.test_head_tail" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_head_tail",shape="record"];
	"pandas.tests.series.methods.test_get_numeric_data" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_get_numeric_data",shape="record"];
	"pandas.tests.series.methods.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_fillna",shape="record"];
	"pandas.tests.series.methods.test_explode" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_explode",shape="record"];
	"pandas.tests.series.methods.test_equals" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_equals",shape="record"];
	"pandas.tests.series.methods.test_duplicated" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_duplicated",shape="record"];
	"pandas.tests.series.methods.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_dtypes",shape="record"];
	"pandas.tests.series.methods.test_dropna" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_dropna",shape="record"];
	"pandas.tests.series.methods.test_drop_duplicates" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_drop_duplicates",shape="record"];
	"pandas.tests.series.methods.test_drop" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_drop",shape="record"];
	"pandas.tests.series.methods.test_diff" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_diff",shape="record"];
	"pandas.tests.series.methods.test_describe" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_describe",shape="record"];
	"pandas.tests.series.methods.test_cov_corr" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_cov_corr",shape="record"];
	"pandas.tests.series.methods.test_count" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_count",shape="record"];
	"pandas.tests.series.methods.test_copy" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_copy",shape="record"];
	"pandas.tests.series.methods.test_convert_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_convert_dtypes",shape="record"];
	"pandas.tests.series.methods.test_compare" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_compare",shape="record"];
	"pandas.tests.series.methods.test_combine_first" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_combine_first",shape="record"];
	"pandas.tests.series.methods.test_combine" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_combine",shape="record"];
	"pandas.tests.series.methods.test_clip" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_clip",shape="record"];
	"pandas.tests.series.methods.test_case_when" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_case_when",shape="record"];
	"pandas.tests.series.methods.test_between" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_between",shape="record"];
	"pandas.tests.series.methods.test_autocorr" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_autocorr",shape="record"];
	"pandas.tests.series.methods.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_astype",shape="record"];
	"pandas.tests.series.methods.test_asof" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_asof",shape="record"];
	"pandas.tests.series.methods.test_argsort" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_argsort",shape="record"];
	"pandas.tests.series.methods.test_align" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_align",shape="record"];
	"pandas.tests.series.methods.test_add_prefix_suffix" [label="<f0> SourceModule| <f1> pandas.tests.series.methods.test_add_prefix_suffix",shape="record"];
	"pandas.tests.series.methods" [label="<f0> Package| <f1> pandas.tests.series.methods",shape="record"];
	"pandas.tests.series.indexing.test_xs" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_xs",shape="record"];
	"pandas.tests.series.indexing.test_where" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_where",shape="record"];
	"pandas.tests.series.indexing.test_take" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_take",shape="record"];
	"pandas.tests.series.indexing.test_setitem" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_setitem",shape="record"];
	"pandas.tests.series.indexing.test_set_value" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_set_value",shape="record"];
	"pandas.tests.series.indexing.test_mask" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_mask",shape="record"];
	"pandas.tests.series.indexing.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_indexing",shape="record"];
	"pandas.tests.series.indexing.test_getitem" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_getitem",shape="record"];
	"pandas.tests.series.indexing.test_get" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_get",shape="record"];
	"pandas.tests.series.indexing.test_delitem" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_delitem",shape="record"];
	"pandas.tests.series.indexing.test_datetime" [label="<f0> SourceModule| <f1> pandas.tests.series.indexing.test_datetime",shape="record"];
	"pandas.tests.series.indexing" [label="<f0> Package| <f1> pandas.tests.series.indexing",shape="record"];
	"pandas.tests.series.accessors.test_struct_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_struct_accessor",shape="record"];
	"pandas.tests.series.accessors.test_str_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_str_accessor",shape="record"];
	"pandas.tests.series.accessors.test_sparse_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_sparse_accessor",shape="record"];
	"pandas.tests.series.accessors.test_list_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_list_accessor",shape="record"];
	"pandas.tests.series.accessors.test_dt_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_dt_accessor",shape="record"];
	"pandas.tests.series.accessors.test_cat_accessor" [label="<f0> SourceModule| <f1> pandas.tests.series.accessors.test_cat_accessor",shape="record"];
	"pandas.tests.series.accessors" [label="<f0> Package| <f1> pandas.tests.series.accessors",shape="record"];
	"pandas.tests.series" [label="<f0> Package| <f1> pandas.tests.series",shape="record"];
	"pandas.tests.scalar.timestamp.test_timezones" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_timezones",shape="record"];
	"pandas.tests.scalar.timestamp.test_timestamp" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_timestamp",shape="record"];
	"pandas.tests.scalar.timestamp.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_formats",shape="record"];
	"pandas.tests.scalar.timestamp.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_constructors",shape="record"];
	"zoneinfo" [label="<f0> Package| <f1> zoneinfo",shape="record"];
	"tzdata" [label="<f0> Package| <f1> tzdata",shape="record"];
	"tzdata.zoneinfo.US" [label="<f0> Package| <f1> tzdata.zoneinfo.US",shape="record"];
	"tzdata.zoneinfo.Pacific" [label="<f0> Package| <f1> tzdata.zoneinfo.Pacific",shape="record"];
	"tzdata.zoneinfo.Mexico" [label="<f0> Package| <f1> tzdata.zoneinfo.Mexico",shape="record"];
	"tzdata.zoneinfo.Indian" [label="<f0> Package| <f1> tzdata.zoneinfo.Indian",shape="record"];
	"tzdata.zoneinfo.Europe" [label="<f0> Package| <f1> tzdata.zoneinfo.Europe",shape="record"];
	"tzdata.zoneinfo.Etc" [label="<f0> Package| <f1> tzdata.zoneinfo.Etc",shape="record"];
	"tzdata.zoneinfo.Chile" [label="<f0> Package| <f1> tzdata.zoneinfo.Chile",shape="record"];
	"tzdata.zoneinfo.Canada" [label="<f0> Package| <f1> tzdata.zoneinfo.Canada",shape="record"];
	"tzdata.zoneinfo.Brazil" [label="<f0> Package| <f1> tzdata.zoneinfo.Brazil",shape="record"];
	"tzdata.zoneinfo.Australia" [label="<f0> Package| <f1> tzdata.zoneinfo.Australia",shape="record"];
	"tzdata.zoneinfo.Atlantic" [label="<f0> Package| <f1> tzdata.zoneinfo.Atlantic",shape="record"];
	"tzdata.zoneinfo.Asia" [label="<f0> Package| <f1> tzdata.zoneinfo.Asia",shape="record"];
	"tzdata.zoneinfo.Arctic" [label="<f0> Package| <f1> tzdata.zoneinfo.Arctic",shape="record"];
	"tzdata.zoneinfo.Antarctica" [label="<f0> Package| <f1> tzdata.zoneinfo.Antarctica",shape="record"];
	"tzdata.zoneinfo.America.North_Dakota" [label="<f0> Package| <f1> tzdata.zoneinfo.America.North_Dakota",shape="record"];
	"tzdata.zoneinfo.America.Kentucky" [label="<f0> Package| <f1> tzdata.zoneinfo.America.Kentucky",shape="record"];
	"tzdata.zoneinfo.America.Indiana" [label="<f0> Package| <f1> tzdata.zoneinfo.America.Indiana",shape="record"];
	"tzdata.zoneinfo.America.Argentina" [label="<f0> Package| <f1> tzdata.zoneinfo.America.Argentina",shape="record"];
	"tzdata.zoneinfo.America" [label="<f0> Package| <f1> tzdata.zoneinfo.America",shape="record"];
	"tzdata.zoneinfo.Africa" [label="<f0> Package| <f1> tzdata.zoneinfo.Africa",shape="record"];
	"tzdata.zoneinfo" [label="<f0> Package| <f1> tzdata.zoneinfo",shape="record"];
	"zoneinfo._zoneinfo" [label="<f0> SourceModule| <f1> zoneinfo._zoneinfo",shape="record"];
	"_zoneinfo" [label="<f0> Extension| <f1> _zoneinfo",shape="record"];
	"zoneinfo._common" [label="<f0> SourceModule| <f1> zoneinfo._common",shape="record"];
	"zoneinfo._tzpath" [label="<f0> SourceModule| <f1> zoneinfo._tzpath",shape="record"];
	"pandas.tests.scalar.timestamp.test_comparisons" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_comparisons",shape="record"];
	"pandas.tests.scalar.timestamp.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.test_arithmetic",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_tz_localize",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_tz_convert" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_tz_convert",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_to_pydatetime" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_to_pydatetime",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_to_julian_date" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_to_julian_date",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_timestamp_method" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_timestamp_method",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_round" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_round",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_replace" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_replace",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_normalize" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_normalize",shape="record"];
	"pandas.tests.scalar.timestamp.methods.test_as_unit" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timestamp.methods.test_as_unit",shape="record"];
	"pandas.tests.scalar.timestamp.methods" [label="<f0> Package| <f1> pandas.tests.scalar.timestamp.methods",shape="record"];
	"pandas.tests.scalar.timestamp" [label="<f0> Package| <f1> pandas.tests.scalar.timestamp",shape="record"];
	"pandas.tests.scalar.timedelta.test_timedelta" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.test_timedelta",shape="record"];
	"pandas.tests.scalar.timedelta.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.test_formats",shape="record"];
	"pandas.tests.scalar.timedelta.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.test_constructors",shape="record"];
	"pandas.tests.scalar.timedelta.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.test_arithmetic",shape="record"];
	"pandas.tests.scalar.timedelta.methods.test_round" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.methods.test_round",shape="record"];
	"pandas.tests.scalar.timedelta.methods.test_as_unit" [label="<f0> SourceModule| <f1> pandas.tests.scalar.timedelta.methods.test_as_unit",shape="record"];
	"pandas.tests.scalar.timedelta.methods" [label="<f0> Package| <f1> pandas.tests.scalar.timedelta.methods",shape="record"];
	"pandas.tests.scalar.timedelta" [label="<f0> Package| <f1> pandas.tests.scalar.timedelta",shape="record"];
	"pandas.tests.scalar.test_nat" [label="<f0> SourceModule| <f1> pandas.tests.scalar.test_nat",shape="record"];
	"pandas.tests.scalar.test_na_scalar" [label="<f0> SourceModule| <f1> pandas.tests.scalar.test_na_scalar",shape="record"];
	"pandas.tests.scalar.period.test_period" [label="<f0> SourceModule| <f1> pandas.tests.scalar.period.test_period",shape="record"];
	"pandas.tests.scalar.period.test_asfreq" [label="<f0> SourceModule| <f1> pandas.tests.scalar.period.test_asfreq",shape="record"];
	"pandas.tests.scalar.period.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.scalar.period.test_arithmetic",shape="record"];
	"pandas.tests.scalar.period" [label="<f0> Package| <f1> pandas.tests.scalar.period",shape="record"];
	"pandas.tests.scalar.interval.test_overlaps" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_overlaps",shape="record"];
	"pandas.tests.scalar.interval.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_interval",shape="record"];
	"pandas.tests.scalar.interval.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_formats",shape="record"];
	"pandas.tests.scalar.interval.test_contains" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_contains",shape="record"];
	"pandas.tests.scalar.interval.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_constructors",shape="record"];
	"pandas.tests.scalar.interval.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.scalar.interval.test_arithmetic",shape="record"];
	"pandas.tests.scalar.interval" [label="<f0> Package| <f1> pandas.tests.scalar.interval",shape="record"];
	"pandas.tests.scalar" [label="<f0> Package| <f1> pandas.tests.scalar",shape="record"];
	"pandas.tests.reshape.test_util" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_util",shape="record"];
	"pandas.tests.reshape.test_union_categoricals" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_union_categoricals",shape="record"];
	"pandas.tests.reshape.test_qcut" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_qcut",shape="record"];
	"pandas.tests.reshape.test_pivot_multilevel" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_pivot_multilevel",shape="record"];
	"pandas.tests.reshape.test_pivot" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_pivot",shape="record"];
	"pandas.tests.reshape.test_melt" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_melt",shape="record"];
	"pandas.tests.reshape.test_get_dummies" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_get_dummies",shape="record"];
	"pandas.tests.reshape.test_from_dummies" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_from_dummies",shape="record"];
	"pandas.tests.reshape.test_cut" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_cut",shape="record"];
	"pandas.tests.reshape.test_crosstab" [label="<f0> SourceModule| <f1> pandas.tests.reshape.test_crosstab",shape="record"];
	"pandas.tests.reshape.merge.test_multi" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_multi",shape="record"];
	"pandas.tests.reshape.merge.test_merge_ordered" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_merge_ordered",shape="record"];
	"pandas.tests.reshape.merge.test_merge_index_as_string" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_merge_index_as_string",shape="record"];
	"pandas.tests.reshape.merge.test_merge_cross" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_merge_cross",shape="record"];
	"pandas.tests.reshape.merge.test_merge_asof" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_merge_asof",shape="record"];
	"pandas.tests.reshape.merge.test_merge" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_merge",shape="record"];
	"pandas.tests.reshape.merge.test_join" [label="<f0> SourceModule| <f1> pandas.tests.reshape.merge.test_join",shape="record"];
	"pandas.tests.reshape.merge" [label="<f0> Package| <f1> pandas.tests.reshape.merge",shape="record"];
	"pandas.tests.reshape.concat.test_sort" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_sort",shape="record"];
	"pandas.tests.reshape.concat.test_series" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_series",shape="record"];
	"pandas.tests.reshape.concat.test_invalid" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_invalid",shape="record"];
	"pandas.tests.reshape.concat.test_index" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_index",shape="record"];
	"pandas.tests.reshape.concat.test_empty" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_empty",shape="record"];
	"pandas.tests.reshape.concat.test_datetimes" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_datetimes",shape="record"];
	"pandas.tests.reshape.concat.test_dataframe" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_dataframe",shape="record"];
	"pandas.tests.reshape.concat.test_concat" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_concat",shape="record"];
	"pandas.tests.extension.decimal" [label="<f0> Package| <f1> pandas.tests.extension.decimal",shape="record"];
	"pandas.tests.extension.decimal.array" [label="<f0> SourceModule| <f1> pandas.tests.extension.decimal.array",shape="record"];
	"pandas.tests.extension" [label="<f0> Package| <f1> pandas.tests.extension",shape="record"];
	"pandas.tests.reshape.concat.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_categorical",shape="record"];
	"pandas.tests.reshape.concat.test_append_common" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_append_common",shape="record"];
	"pandas.tests.reshape.concat.test_append" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.test_append",shape="record"];
	"pandas.tests.reshape.concat.conftest" [label="<f0> SourceModule| <f1> pandas.tests.reshape.concat.conftest",shape="record"];
	"pandas.tests.reshape.concat" [label="<f0> Package| <f1> pandas.tests.reshape.concat",shape="record"];
	"pandas.tests.reshape" [label="<f0> Package| <f1> pandas.tests.reshape",shape="record"];
	"pandas.tests.resample.test_timedelta" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_timedelta",shape="record"];
	"pandas.tests.resample.test_time_grouper" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_time_grouper",shape="record"];
	"pandas.tests.resample.test_resampler_grouper" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_resampler_grouper",shape="record"];
	"pandas.tests.resample.test_resample_api" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_resample_api",shape="record"];
	"pandas.tests.resample.test_period_index" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_period_index",shape="record"];
	"pandas.tests.resample.test_datetime_index" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_datetime_index",shape="record"];
	"pandas.tests.resample.test_base" [label="<f0> SourceModule| <f1> pandas.tests.resample.test_base",shape="record"];
	"pandas.tests.resample.conftest" [label="<f0> SourceModule| <f1> pandas.tests.resample.conftest",shape="record"];
	"pandas.tests.resample" [label="<f0> Package| <f1> pandas.tests.resample",shape="record"];
	"pandas.tests.reductions.test_stat_reductions" [label="<f0> SourceModule| <f1> pandas.tests.reductions.test_stat_reductions",shape="record"];
	"pandas.tests.reductions.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.reductions.test_reductions",shape="record"];
	"pandas.tests.reductions" [label="<f0> Package| <f1> pandas.tests.reductions",shape="record"];
	"pandas.tests.plotting.test_style" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_style",shape="record"];
	"pandas.plotting._matplotlib.style" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.style",shape="record"];
	"pandas.plotting._matplotlib" [label="<f0> Package| <f1> pandas.plotting._matplotlib",shape="record"];
	"pandas.plotting._matplotlib.misc" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.misc",shape="record"];
	"'matplotlib.lines'" [label="<f0> MissingModule| <f1> 'matplotlib.lines'",shape="record"];
	"pandas.plotting._matplotlib.hist" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.hist",shape="record"];
	"pandas.plotting._matplotlib.groupby" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.groupby",shape="record"];
	"pandas.plotting._matplotlib.core" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.core",shape="record"];
	"'matplotlib.ticker'" [label="<f0> MissingModule| <f1> 'matplotlib.ticker'",shape="record"];
	"'matplotlib.axis'" [label="<f0> MissingModule| <f1> 'matplotlib.axis'",shape="record"];
	"pandas.plotting._matplotlib.timeseries" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.timeseries",shape="record"];
	"pandas.plotting._matplotlib.converter" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.converter",shape="record"];
	"'matplotlib.units'" [label="<f0> MissingModule| <f1> 'matplotlib.units'",shape="record"];
	"'matplotlib.transforms'" [label="<f0> MissingModule| <f1> 'matplotlib.transforms'",shape="record"];
	"'matplotlib.dates'" [label="<f0> MissingModule| <f1> 'matplotlib.dates'",shape="record"];
	"pandas.plotting._matplotlib.boxplot" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.boxplot",shape="record"];
	"pandas.plotting._matplotlib.tools" [label="<f0> SourceModule| <f1> pandas.plotting._matplotlib.tools",shape="record"];
	"pandas.tests.plotting.test_series" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_series",shape="record"];
	"pandas.tests.plotting.test_misc" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_misc",shape="record"];
	"'matplotlib.text'" [label="<f0> MissingModule| <f1> 'matplotlib.text'",shape="record"];
	"pandas.tests.plotting.test_hist_method" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_hist_method",shape="record"];
	"'matplotlib.patches'" [label="<f0> MissingModule| <f1> 'matplotlib.patches'",shape="record"];
	"pylab" [label="<f0> MissingModule| <f1> pylab",shape="record"];
	"pandas.tests.plotting.test_groupby" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_groupby",shape="record"];
	"pandas.tests.plotting.test_datetimelike" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_datetimelike",shape="record"];
	"pandas.tests.plotting.test_converter" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_converter",shape="record"];
	"pandas.tests.plotting.test_common" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_common",shape="record"];
	"pandas.tests.plotting.test_boxplot_method" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_boxplot_method",shape="record"];
	"pandas.tests.plotting.test_backend" [label="<f0> SourceModule| <f1> pandas.tests.plotting.test_backend",shape="record"];
	"pandas.tests.plotting.frame.test_hist_box_by" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_hist_box_by",shape="record"];
	"pandas.tests.plotting.frame.test_frame_subplots" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_frame_subplots",shape="record"];
	"pandas.tests.plotting.frame.test_frame_legend" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_frame_legend",shape="record"];
	"'matplotlib.collections'" [label="<f0> MissingModule| <f1> 'matplotlib.collections'",shape="record"];
	"pandas.tests.plotting.frame.test_frame_groupby" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_frame_groupby",shape="record"];
	"pandas.tests.plotting.frame.test_frame_color" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_frame_color",shape="record"];
	"cycler" [label="<f0> MissingModule| <f1> cycler",shape="record"];
	"pandas.tests.plotting.frame.test_frame" [label="<f0> SourceModule| <f1> pandas.tests.plotting.frame.test_frame",shape="record"];
	"'mpl_toolkits.axes_grid1'" [label="<f0> MissingModule| <f1> 'mpl_toolkits.axes_grid1'",shape="record"];
	"mpl_toolkits" [label="<f0> MissingModule| <f1> mpl_toolkits",shape="record"];
	"pandas.tests.plotting.frame" [label="<f0> Package| <f1> pandas.tests.plotting.frame",shape="record"];
	"pandas.tests.plotting.conftest" [label="<f0> SourceModule| <f1> pandas.tests.plotting.conftest",shape="record"];
	"pandas.tests.plotting.common" [label="<f0> SourceModule| <f1> pandas.tests.plotting.common",shape="record"];
	"pandas.tests.plotting" [label="<f0> Package| <f1> pandas.tests.plotting",shape="record"];
	"pandas.tests.libs.test_libalgos" [label="<f0> SourceModule| <f1> pandas.tests.libs.test_libalgos",shape="record"];
	"pandas.tests.libs.test_lib" [label="<f0> SourceModule| <f1> pandas.tests.libs.test_lib",shape="record"];
	"pandas.tests.libs.test_join" [label="<f0> SourceModule| <f1> pandas.tests.libs.test_join",shape="record"];
	"pandas.tests.libs.test_hashtable" [label="<f0> SourceModule| <f1> pandas.tests.libs.test_hashtable",shape="record"];
	"tracemalloc" [label="<f0> SourceModule| <f1> tracemalloc",shape="record"];
	"_tracemalloc" [label="<f0> BuiltinModule| <f1> _tracemalloc",shape="record"];
	"pandas.tests.libs" [label="<f0> Package| <f1> pandas.tests.libs",shape="record"];
	"pandas.tests.io.xml.test_xml_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.io.xml.test_xml_dtypes",shape="record"];
	"pandas.tests.io.xml.test_xml" [label="<f0> SourceModule| <f1> pandas.tests.io.xml.test_xml",shape="record"];
	"pandas.tests.io.xml.test_to_xml" [label="<f0> SourceModule| <f1> pandas.tests.io.xml.test_to_xml",shape="record"];
	"pandas.tests.io.xml.conftest" [label="<f0> SourceModule| <f1> pandas.tests.io.xml.conftest",shape="record"];
	"pandas.tests.io.xml" [label="<f0> Package| <f1> pandas.tests.io.xml",shape="record"];
	"pandas.tests.io.test_stata" [label="<f0> SourceModule| <f1> pandas.tests.io.test_stata",shape="record"];
	"pandas.tests.io.test_sql" [label="<f0> SourceModule| <f1> pandas.tests.io.test_sql",shape="record"];
	"'sqlalchemy.orm'" [label="<f0> MissingModule| <f1> 'sqlalchemy.orm'",shape="record"];
	"'sqlalchemy.dialects'" [label="<f0> MissingModule| <f1> 'sqlalchemy.dialects'",shape="record"];
	"adbc_driver_sqlite" [label="<f0> MissingModule| <f1> adbc_driver_sqlite",shape="record"];
	"adbc_driver_manager" [label="<f0> MissingModule| <f1> adbc_driver_manager",shape="record"];
	"adbc_driver_postgresql" [label="<f0> MissingModule| <f1> adbc_driver_postgresql",shape="record"];
	"pandas.tests.io.test_spss" [label="<f0> SourceModule| <f1> pandas.tests.io.test_spss",shape="record"];
	"pandas.tests.io.test_s3" [label="<f0> SourceModule| <f1> pandas.tests.io.test_s3",shape="record"];
	"'botocore.response'" [label="<f0> MissingModule| <f1> 'botocore.response'",shape="record"];
	"pandas.tests.io.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.io.test_pickle",shape="record"];
	"pandas.tests.io.test_parquet" [label="<f0> SourceModule| <f1> pandas.tests.io.test_parquet",shape="record"];
	"'pyarrow.dataset'" [label="<f0> MissingModule| <f1> 'pyarrow.dataset'",shape="record"];
	"fastparquet" [label="<f0> MissingModule| <f1> fastparquet",shape="record"];
	"pandas.tests.io.test_orc" [label="<f0> SourceModule| <f1> pandas.tests.io.test_orc",shape="record"];
	"pandas.tests.io.test_http_headers" [label="<f0> SourceModule| <f1> pandas.tests.io.test_http_headers",shape="record"];
	"pandas.tests.io.test_html" [label="<f0> SourceModule| <f1> pandas.tests.io.test_html",shape="record"];
	"pandas.tests.io.test_gcs" [label="<f0> SourceModule| <f1> pandas.tests.io.test_gcs",shape="record"];
	"pandas.tests.io.test_gbq" [label="<f0> SourceModule| <f1> pandas.tests.io.test_gbq",shape="record"];
	"pandas.tests.io.test_fsspec" [label="<f0> SourceModule| <f1> pandas.tests.io.test_fsspec",shape="record"];
	"'fsspec.registry'" [label="<f0> MissingModule| <f1> 'fsspec.registry'",shape="record"];
	"'fsspec.implementations'" [label="<f0> MissingModule| <f1> 'fsspec.implementations'",shape="record"];
	"pandas.tests.io.test_feather" [label="<f0> SourceModule| <f1> pandas.tests.io.test_feather",shape="record"];
	"pandas.tests.io.test_compression" [label="<f0> SourceModule| <f1> pandas.tests.io.test_compression",shape="record"];
	"pandas.tests.io.test_common" [label="<f0> SourceModule| <f1> pandas.tests.io.test_common",shape="record"];
	"'py.path'" [label="<f0> MissingModule| <f1> 'py.path'",shape="record"];
	"pandas.tests.io.test_clipboard" [label="<f0> SourceModule| <f1> pandas.tests.io.test_clipboard",shape="record"];
	"pandas.tests.io.sas.test_xport" [label="<f0> SourceModule| <f1> pandas.tests.io.sas.test_xport",shape="record"];
	"pandas.tests.io.sas.test_sas7bdat" [label="<f0> SourceModule| <f1> pandas.tests.io.sas.test_sas7bdat",shape="record"];
	"pandas.tests.io.sas.test_sas" [label="<f0> SourceModule| <f1> pandas.tests.io.sas.test_sas",shape="record"];
	"pandas.tests.io.sas.test_byteswap" [label="<f0> SourceModule| <f1> pandas.tests.io.sas.test_byteswap",shape="record"];
	"pandas.tests.io.sas" [label="<f0> Package| <f1> pandas.tests.io.sas",shape="record"];
	"pandas.tests.io.pytables.test_timezones" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_timezones",shape="record"];
	"pandas.tests.io.pytables.test_time_series" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_time_series",shape="record"];
	"pandas.tests.io.pytables.test_subclass" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_subclass",shape="record"];
	"pandas.tests.io.pytables.test_store" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_store",shape="record"];
	"pandas.tests.io.pytables.test_select" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_select",shape="record"];
	"pandas.tests.io.pytables.test_round_trip" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_round_trip",shape="record"];
	"pandas.tests.io.pytables.test_retain_attributes" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_retain_attributes",shape="record"];
	"pandas.tests.io.pytables.test_read" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_read",shape="record"];
	"pandas.tests.io.pytables.test_pytables_missing" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_pytables_missing",shape="record"];
	"pandas.tests.io.pytables.test_put" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_put",shape="record"];
	"pandas.tests.io.pytables.test_keys" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_keys",shape="record"];
	"pandas.tests.io.pytables.test_file_handling" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_file_handling",shape="record"];
	"pandas.tests.io.pytables.test_errors" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_errors",shape="record"];
	"pandas.tests.io.pytables.test_complex" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_complex",shape="record"];
	"pandas.tests.io.pytables.test_compat" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_compat",shape="record"];
	"pandas.tests.io.pytables.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_categorical",shape="record"];
	"pandas.tests.io.pytables.test_append" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.test_append",shape="record"];
	"pandas.tests.io.pytables.conftest" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.conftest",shape="record"];
	"pandas.tests.io.pytables.common" [label="<f0> SourceModule| <f1> pandas.tests.io.pytables.common",shape="record"];
	"pandas.tests.io.pytables" [label="<f0> Package| <f1> pandas.tests.io.pytables",shape="record"];
	"pandas.tests.io.parser.usecols.test_usecols_basic" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.usecols.test_usecols_basic",shape="record"];
	"pandas.tests.io.parser.usecols.test_strings" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.usecols.test_strings",shape="record"];
	"pandas.tests.io.parser.usecols.test_parse_dates" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.usecols.test_parse_dates",shape="record"];
	"pandas.tests.io.parser.usecols" [label="<f0> Package| <f1> pandas.tests.io.parser.usecols",shape="record"];
	"pandas.tests.io.parser.test_upcast" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_upcast",shape="record"];
	"pandas.tests.io.parser.test_unsupported" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_unsupported",shape="record"];
	"pandas.tests.io.parser.test_textreader" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_textreader",shape="record"];
	"pandas.tests.io.parser.test_skiprows" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_skiprows",shape="record"];
	"pandas.tests.io.parser.test_read_fwf" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_read_fwf",shape="record"];
	"pandas.tests.io.parser.test_quoting" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_quoting",shape="record"];
	"pandas.tests.io.parser.test_python_parser_only" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_python_parser_only",shape="record"];
	"pandas.tests.io.parser.test_parse_dates" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_parse_dates",shape="record"];
	"pandas.tests.io.parser.test_network" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_network",shape="record"];
	"pandas.tests.io.parser.test_na_values" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_na_values",shape="record"];
	"pandas.tests.io.parser.test_multi_thread" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_multi_thread",shape="record"];
	"pandas.tests.io.parser.test_mangle_dupes" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_mangle_dupes",shape="record"];
	"pandas.tests.io.parser.test_index_col" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_index_col",shape="record"];
	"pandas.tests.io.parser.test_header" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_header",shape="record"];
	"pandas.tests.io.parser.test_encoding" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_encoding",shape="record"];
	"pandas.tests.io.parser.test_dialect" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_dialect",shape="record"];
	"pandas.tests.io.parser.test_converters" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_converters",shape="record"];
	"pandas.tests.io.parser.test_concatenate_chunks" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_concatenate_chunks",shape="record"];
	"pandas.tests.io.parser.test_compression" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_compression",shape="record"];
	"pandas.tests.io.parser.test_comment" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_comment",shape="record"];
	"pandas.tests.io.parser.test_c_parser_only" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.test_c_parser_only",shape="record"];
	"pandas.tests.io.parser.dtypes.test_empty" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.dtypes.test_empty",shape="record"];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.dtypes.test_dtypes_basic",shape="record"];
	"pandas.tests.io.parser.dtypes.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.dtypes.test_categorical",shape="record"];
	"pandas.tests.io.parser.dtypes" [label="<f0> Package| <f1> pandas.tests.io.parser.dtypes",shape="record"];
	"pandas.tests.io.parser.conftest" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.conftest",shape="record"];
	"pandas.tests.io.parser.common.test_verbose" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_verbose",shape="record"];
	"pandas.tests.io.parser.common.test_read_errors" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_read_errors",shape="record"];
	"pandas.tests.io.parser.common.test_iterator" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_iterator",shape="record"];
	"pandas.tests.io.parser.common.test_ints" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_ints",shape="record"];
	"pandas.tests.io.parser.common.test_inf" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_inf",shape="record"];
	"pandas.tests.io.parser.common.test_index" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_index",shape="record"];
	"pandas.tests.io.parser.common.test_float" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_float",shape="record"];
	"pandas.tests.io.parser.common.test_file_buffer_url" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_file_buffer_url",shape="record"];
	"pandas.tests.io.parser.common.test_decimal" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_decimal",shape="record"];
	"pandas.tests.io.parser.common.test_data_list" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_data_list",shape="record"];
	"pandas.tests.io.parser.common.test_common_basic" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_common_basic",shape="record"];
	"pandas.tests.io.parser.common.test_chunksize" [label="<f0> SourceModule| <f1> pandas.tests.io.parser.common.test_chunksize",shape="record"];
	"pandas.tests.io.parser.common" [label="<f0> Package| <f1> pandas.tests.io.parser.common",shape="record"];
	"pandas.tests.io.parser" [label="<f0> Package| <f1> pandas.tests.io.parser",shape="record"];
	"pandas.tests.io.json.test_ujson" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_ujson",shape="record"];
	"pandas.tests.io.json.test_readlines" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_readlines",shape="record"];
	"pandas.tests.io.json.test_pandas" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_pandas",shape="record"];
	"pandas.tests.io.json.test_normalize" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_normalize",shape="record"];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_json_table_schema_ext_dtype",shape="record"];
	"pandas.tests.io.json.test_json_table_schema" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_json_table_schema",shape="record"];
	"pandas.tests.io.json.test_deprecated_kwargs" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_deprecated_kwargs",shape="record"];
	"pandas.tests.io.json.test_compression" [label="<f0> SourceModule| <f1> pandas.tests.io.json.test_compression",shape="record"];
	"pandas.tests.io.json.conftest" [label="<f0> SourceModule| <f1> pandas.tests.io.json.conftest",shape="record"];
	"pandas.tests.io.json" [label="<f0> Package| <f1> pandas.tests.io.json",shape="record"];
	"pandas.tests.io.generate_legacy_storage_files" [label="<f0> SourceModule| <f1> pandas.tests.io.generate_legacy_storage_files",shape="record"];
	"pandas.tests.io.formats.test_to_string" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_string",shape="record"];
	"pandas.tests.io.formats.test_to_markdown" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_markdown",shape="record"];
	"pandas.tests.io.formats.test_to_latex" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_latex",shape="record"];
	"pandas.tests.io.formats.test_to_html" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_html",shape="record"];
	"pandas.tests.io.formats.test_to_excel" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_excel",shape="record"];
	"pandas.tests.io.formats.test_to_csv" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_to_csv",shape="record"];
	"pandas.tests.io.formats.test_printing" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_printing",shape="record"];
	"pandas.tests.io.formats.test_ipython_compat" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_ipython_compat",shape="record"];
	"pandas.tests.io.formats.test_format" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_format",shape="record"];
	"pandas.tests.io.formats.test_eng_formatting" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_eng_formatting",shape="record"];
	"pandas.tests.io.formats.test_css" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_css",shape="record"];
	"pandas.tests.io.formats.test_console" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.test_console",shape="record"];
	"pandas.tests.io.formats.style.test_tooltip" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_tooltip",shape="record"];
	"pandas.tests.io.formats.style.test_to_string" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_to_string",shape="record"];
	"pandas.tests.io.formats.style.test_to_latex" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_to_latex",shape="record"];
	"pandas.tests.io.formats.style.test_style" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_style",shape="record"];
	"pandas.tests.io.formats.style.test_non_unique" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_non_unique",shape="record"];
	"pandas.tests.io.formats.style.test_matplotlib" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_matplotlib",shape="record"];
	"pandas.tests.io.formats.style.test_html" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_html",shape="record"];
	"pandas.tests.io.formats.style.test_highlight" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_highlight",shape="record"];
	"pandas.tests.io.formats.style.test_format" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_format",shape="record"];
	"pandas.tests.io.formats.style.test_exceptions" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_exceptions",shape="record"];
	"pandas.tests.io.formats.style.test_bar" [label="<f0> SourceModule| <f1> pandas.tests.io.formats.style.test_bar",shape="record"];
	"pandas.tests.io.formats.style" [label="<f0> Package| <f1> pandas.tests.io.formats.style",shape="record"];
	"pandas.tests.io.formats" [label="<f0> Package| <f1> pandas.tests.io.formats",shape="record"];
	"pandas.tests.io.excel.test_xlsxwriter" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_xlsxwriter",shape="record"];
	"pandas.tests.io.excel.test_xlrd" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_xlrd",shape="record"];
	"'xlrd.biffh'" [label="<f0> MissingModule| <f1> 'xlrd.biffh'",shape="record"];
	"pandas.tests.io.excel.test_writers" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_writers",shape="record"];
	"pandas.tests.io.excel.test_style" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_style",shape="record"];
	"pandas.tests.io.excel.test_readers" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_readers",shape="record"];
	"py" [label="<f0> MissingModule| <f1> py",shape="record"];
	"s3fs" [label="<f0> MissingModule| <f1> s3fs",shape="record"];
	"pandas.tests.io.excel.test_openpyxl" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_openpyxl",shape="record"];
	"pandas.tests.io.excel.test_odswriter" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_odswriter",shape="record"];
	"pandas.tests.io.excel.test_odf" [label="<f0> SourceModule| <f1> pandas.tests.io.excel.test_odf",shape="record"];
	"pandas.tests.io.excel" [label="<f0> Package| <f1> pandas.tests.io.excel",shape="record"];
	"pandas.tests.io.conftest" [label="<f0> SourceModule| <f1> pandas.tests.io.conftest",shape="record"];
	"boto3" [label="<f0> MissingModule| <f1> boto3",shape="record"];
	"pandas.tests.io" [label="<f0> Package| <f1> pandas.tests.io",shape="record"];
	"pandas.tests.internals.test_managers" [label="<f0> SourceModule| <f1> pandas.tests.internals.test_managers",shape="record"];
	"pandas.tests.internals.test_internals" [label="<f0> SourceModule| <f1> pandas.tests.internals.test_internals",shape="record"];
	"pandas.tests.internals.test_api" [label="<f0> SourceModule| <f1> pandas.tests.internals.test_api",shape="record"];
	"pandas.tests.internals" [label="<f0> Package| <f1> pandas.tests.internals",shape="record"];
	"pandas.tests.interchange.test_utils" [label="<f0> SourceModule| <f1> pandas.tests.interchange.test_utils",shape="record"];
	"pandas.tests.interchange.test_spec_conformance" [label="<f0> SourceModule| <f1> pandas.tests.interchange.test_spec_conformance",shape="record"];
	"pandas.tests.interchange.test_impl" [label="<f0> SourceModule| <f1> pandas.tests.interchange.test_impl",shape="record"];
	"'pyarrow.interchange'" [label="<f0> MissingModule| <f1> 'pyarrow.interchange'",shape="record"];
	"pandas.tests.interchange" [label="<f0> Package| <f1> pandas.tests.interchange",shape="record"];
	"pandas.tests.indexing.test_scalar" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_scalar",shape="record"];
	"pandas.tests.indexing.test_partial" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_partial",shape="record"];
	"pandas.tests.indexing.test_na_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_na_indexing",shape="record"];
	"pandas.tests.indexing.test_loc" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_loc",shape="record"];
	"pandas.tests.indexing.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_indexing",shape="record"];
	"pandas.tests.indexing.test_indexers" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_indexers",shape="record"];
	"pandas.tests.indexing.test_iloc" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_iloc",shape="record"];
	"pandas.tests.indexing.test_iat" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_iat",shape="record"];
	"pandas.tests.indexing.test_floats" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_floats",shape="record"];
	"pandas.tests.indexing.test_datetime" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_datetime",shape="record"];
	"pandas.tests.indexing.test_coercion" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_coercion",shape="record"];
	"pandas.tests.indexing.test_check_indexer" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_check_indexer",shape="record"];
	"pandas.tests.indexing.test_chaining_and_caching" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_chaining_and_caching",shape="record"];
	"pandas.tests.indexing.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_categorical",shape="record"];
	"pandas.tests.indexing.test_at" [label="<f0> SourceModule| <f1> pandas.tests.indexing.test_at",shape="record"];
	"pandas.tests.indexing.multiindex.test_sorted" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_sorted",shape="record"];
	"pandas.tests.indexing.multiindex.test_slice" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_slice",shape="record"];
	"pandas.tests.indexing.multiindex.test_setitem" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_setitem",shape="record"];
	"pandas.tests.indexing.multiindex.test_partial" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_partial",shape="record"];
	"pandas.tests.indexing.multiindex.test_multiindex" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_multiindex",shape="record"];
	"pandas.tests.indexing.multiindex.test_loc" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_loc",shape="record"];
	"pandas.tests.indexing.multiindex.test_indexing_slow" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_indexing_slow",shape="record"];
	"pandas.tests.indexing.multiindex.test_iloc" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_iloc",shape="record"];
	"pandas.tests.indexing.multiindex.test_getitem" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_getitem",shape="record"];
	"pandas.tests.indexing.multiindex.test_datetime" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_datetime",shape="record"];
	"pandas.tests.indexing.multiindex.test_chaining_and_caching" [label="<f0> SourceModule| <f1> pandas.tests.indexing.multiindex.test_chaining_and_caching",shape="record"];
	"pandas.tests.indexing.multiindex" [label="<f0> Package| <f1> pandas.tests.indexing.multiindex",shape="record"];
	"pandas.tests.indexing.interval.test_interval_new" [label="<f0> SourceModule| <f1> pandas.tests.indexing.interval.test_interval_new",shape="record"];
	"pandas.tests.indexing.interval.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.indexing.interval.test_interval",shape="record"];
	"pandas.tests.indexing.interval" [label="<f0> Package| <f1> pandas.tests.indexing.interval",shape="record"];
	"pandas.tests.indexing.conftest" [label="<f0> SourceModule| <f1> pandas.tests.indexing.conftest",shape="record"];
	"pandas.tests.indexing.common" [label="<f0> SourceModule| <f1> pandas.tests.indexing.common",shape="record"];
	"pandas.tests.indexing" [label="<f0> Package| <f1> pandas.tests.indexing",shape="record"];
	"pandas.tests.indexes.timedeltas.test_timedelta_range" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_timedelta_range",shape="record"];
	"pandas.tests.indexes.timedeltas.test_timedelta" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_timedelta",shape="record"];
	"pandas.tests.indexes.timedeltas.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_setops",shape="record"];
	"pandas.tests.indexes.timedeltas.test_searchsorted" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_searchsorted",shape="record"];
	"pandas.tests.indexes.timedeltas.test_scalar_compat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_scalar_compat",shape="record"];
	"pandas.tests.indexes.timedeltas.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_pickle",shape="record"];
	"pandas.tests.indexes.timedeltas.test_ops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_ops",shape="record"];
	"pandas.tests.indexes.timedeltas.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_join",shape="record"];
	"pandas.tests.indexes.timedeltas.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_indexing",shape="record"];
	"pandas.tests.indexes.timedeltas.test_freq_attr" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_freq_attr",shape="record"];
	"pandas.tests.indexes.timedeltas.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_formats",shape="record"];
	"pandas.tests.indexes.timedeltas.test_delete" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_delete",shape="record"];
	"pandas.tests.indexes.timedeltas.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_constructors",shape="record"];
	"pandas.tests.indexes.timedeltas.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.test_arithmetic",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_shift" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_shift",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_repeat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_repeat",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_insert" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_insert",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_fillna",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_factorize" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_factorize",shape="record"];
	"pandas.tests.indexes.timedeltas.methods.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.timedeltas.methods.test_astype",shape="record"];
	"pandas.tests.indexes.timedeltas.methods" [label="<f0> Package| <f1> pandas.tests.indexes.timedeltas.methods",shape="record"];
	"pandas.tests.indexes.timedeltas" [label="<f0> Package| <f1> pandas.tests.indexes.timedeltas",shape="record"];
	"pandas.tests.indexes.test_subclass" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_subclass",shape="record"];
	"pandas.tests.indexes.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_setops",shape="record"];
	"pandas.tests.indexes.test_old_base" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_old_base",shape="record"];
	"pandas.tests.indexes.test_numpy_compat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_numpy_compat",shape="record"];
	"pandas.tests.indexes.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_indexing",shape="record"];
	"pandas.tests.indexes.test_index_new" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_index_new",shape="record"];
	"pandas.tests.indexes.test_frozen" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_frozen",shape="record"];
	"pandas.tests.indexes.test_engines" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_engines",shape="record"];
	"pandas.tests.indexes.test_datetimelike" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_datetimelike",shape="record"];
	"pandas.tests.indexes.test_common" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_common",shape="record"];
	"pandas.tests.indexes.test_base" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_base",shape="record"];
	"pandas.tests.indexes.test_any_index" [label="<f0> SourceModule| <f1> pandas.tests.indexes.test_any_index",shape="record"];
	"pandas.tests.indexes.string.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.string.test_indexing",shape="record"];
	"pandas.tests.indexes.string.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.string.test_astype",shape="record"];
	"pandas.tests.indexes.string" [label="<f0> Package| <f1> pandas.tests.indexes.string",shape="record"];
	"pandas.tests.indexes.ranges.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.ranges.test_setops",shape="record"];
	"pandas.tests.indexes.ranges.test_range" [label="<f0> SourceModule| <f1> pandas.tests.indexes.ranges.test_range",shape="record"];
	"pandas.tests.indexes.ranges.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.ranges.test_join",shape="record"];
	"pandas.tests.indexes.ranges.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.ranges.test_indexing",shape="record"];
	"pandas.tests.indexes.ranges.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.ranges.test_constructors",shape="record"];
	"pandas.tests.indexes.ranges" [label="<f0> Package| <f1> pandas.tests.indexes.ranges",shape="record"];
	"pandas.tests.indexes.period.test_tools" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_tools",shape="record"];
	"pandas.tests.indexes.period.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_setops",shape="record"];
	"pandas.tests.indexes.period.test_searchsorted" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_searchsorted",shape="record"];
	"pandas.tests.indexes.period.test_scalar_compat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_scalar_compat",shape="record"];
	"pandas.tests.indexes.period.test_resolution" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_resolution",shape="record"];
	"pandas.tests.indexes.period.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_pickle",shape="record"];
	"pandas.tests.indexes.period.test_period_range" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_period_range",shape="record"];
	"pandas.tests.indexes.period.test_period" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_period",shape="record"];
	"pandas.tests.indexes.period.test_partial_slicing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_partial_slicing",shape="record"];
	"pandas.tests.indexes.period.test_monotonic" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_monotonic",shape="record"];
	"pandas.tests.indexes.period.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_join",shape="record"];
	"pandas.tests.indexes.period.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_indexing",shape="record"];
	"pandas.tests.indexes.period.test_freq_attr" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_freq_attr",shape="record"];
	"pandas.tests.indexes.period.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_formats",shape="record"];
	"pandas.tests.indexes.period.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.test_constructors",shape="record"];
	"pandas.tests.indexes.period.methods.test_to_timestamp" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_to_timestamp",shape="record"];
	"pandas.tests.indexes.period.methods.test_shift" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_shift",shape="record"];
	"pandas.tests.indexes.period.methods.test_repeat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_repeat",shape="record"];
	"pandas.tests.indexes.period.methods.test_is_full" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_is_full",shape="record"];
	"pandas.tests.indexes.period.methods.test_insert" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_insert",shape="record"];
	"pandas.tests.indexes.period.methods.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_fillna",shape="record"];
	"pandas.tests.indexes.period.methods.test_factorize" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_factorize",shape="record"];
	"pandas.tests.indexes.period.methods.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_astype",shape="record"];
	"pandas.tests.indexes.period.methods.test_asfreq" [label="<f0> SourceModule| <f1> pandas.tests.indexes.period.methods.test_asfreq",shape="record"];
	"pandas.tests.indexes.period.methods" [label="<f0> Package| <f1> pandas.tests.indexes.period.methods",shape="record"];
	"pandas.tests.indexes.period" [label="<f0> Package| <f1> pandas.tests.indexes.period",shape="record"];
	"pandas.tests.indexes.object.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.object.test_indexing",shape="record"];
	"pandas.tests.indexes.object.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.object.test_astype",shape="record"];
	"pandas.tests.indexes.object" [label="<f0> Package| <f1> pandas.tests.indexes.object",shape="record"];
	"pandas.tests.indexes.numeric.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.numeric.test_setops",shape="record"];
	"pandas.tests.indexes.numeric.test_numeric" [label="<f0> SourceModule| <f1> pandas.tests.indexes.numeric.test_numeric",shape="record"];
	"pandas.tests.indexes.numeric.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.numeric.test_join",shape="record"];
	"pandas.tests.indexes.numeric.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.numeric.test_indexing",shape="record"];
	"pandas.tests.indexes.numeric.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.numeric.test_astype",shape="record"];
	"pandas.tests.indexes.numeric" [label="<f0> Package| <f1> pandas.tests.indexes.numeric",shape="record"];
	"pandas.tests.indexes.multi.test_take" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_take",shape="record"];
	"pandas.tests.indexes.multi.test_sorting" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_sorting",shape="record"];
	"pandas.tests.indexes.multi.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_setops",shape="record"];
	"pandas.tests.indexes.multi.test_reshape" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_reshape",shape="record"];
	"pandas.tests.indexes.multi.test_reindex" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_reindex",shape="record"];
	"pandas.tests.indexes.multi.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_pickle",shape="record"];
	"pandas.tests.indexes.multi.test_partial_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_partial_indexing",shape="record"];
	"pandas.tests.indexes.multi.test_names" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_names",shape="record"];
	"pandas.tests.indexes.multi.test_monotonic" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_monotonic",shape="record"];
	"pandas.tests.indexes.multi.test_missing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_missing",shape="record"];
	"pandas.tests.indexes.multi.test_lexsort" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_lexsort",shape="record"];
	"pandas.tests.indexes.multi.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_join",shape="record"];
	"pandas.tests.indexes.multi.test_isin" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_isin",shape="record"];
	"pandas.tests.indexes.multi.test_integrity" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_integrity",shape="record"];
	"pandas.tests.indexes.multi.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_indexing",shape="record"];
	"pandas.tests.indexes.multi.test_get_set" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_get_set",shape="record"];
	"pandas.tests.indexes.multi.test_get_level_values" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_get_level_values",shape="record"];
	"pandas.tests.indexes.multi.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_formats",shape="record"];
	"pandas.tests.indexes.multi.test_equivalence" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_equivalence",shape="record"];
	"pandas.tests.indexes.multi.test_duplicates" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_duplicates",shape="record"];
	"pandas.tests.indexes.multi.test_drop" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_drop",shape="record"];
	"pandas.tests.indexes.multi.test_copy" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_copy",shape="record"];
	"pandas.tests.indexes.multi.test_conversion" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_conversion",shape="record"];
	"pandas.tests.indexes.multi.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_constructors",shape="record"];
	"pandas.tests.indexes.multi.test_compat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_compat",shape="record"];
	"pandas.tests.indexes.multi.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_astype",shape="record"];
	"pandas.tests.indexes.multi.test_analytics" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.test_analytics",shape="record"];
	"pandas.tests.indexes.multi.conftest" [label="<f0> SourceModule| <f1> pandas.tests.indexes.multi.conftest",shape="record"];
	"pandas.tests.indexes.multi" [label="<f0> Package| <f1> pandas.tests.indexes.multi",shape="record"];
	"pandas.tests.indexes.interval.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_setops",shape="record"];
	"pandas.tests.indexes.interval.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_pickle",shape="record"];
	"pandas.tests.indexes.interval.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_join",shape="record"];
	"pandas.tests.indexes.interval.test_interval_tree" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_interval_tree",shape="record"];
	"pandas.tests.indexes.interval.test_interval_range" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_interval_range",shape="record"];
	"pandas.tests.indexes.interval.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_interval",shape="record"];
	"pandas.tests.indexes.interval.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_indexing",shape="record"];
	"pandas.tests.indexes.interval.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_formats",shape="record"];
	"pandas.tests.indexes.interval.test_equals" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_equals",shape="record"];
	"pandas.tests.indexes.interval.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_constructors",shape="record"];
	"pandas.tests.indexes.interval.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.interval.test_astype",shape="record"];
	"pandas.tests.indexes.interval" [label="<f0> Package| <f1> pandas.tests.indexes.interval",shape="record"];
	"pandas.tests.indexes.datetimes.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_setops",shape="record"];
	"pandas.tests.indexes.datetimes.test_scalar_compat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_scalar_compat",shape="record"];
	"pandas.tests.indexes.datetimes.test_reindex" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_reindex",shape="record"];
	"pandas.tests.indexes.datetimes.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_pickle",shape="record"];
	"pandas.tests.indexes.datetimes.test_partial_slicing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_partial_slicing",shape="record"];
	"pandas.tests.indexes.datetimes.test_ops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_ops",shape="record"];
	"pandas.tests.indexes.datetimes.test_npfuncs" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_npfuncs",shape="record"];
	"pandas.tests.indexes.datetimes.test_join" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_join",shape="record"];
	"pandas.tests.indexes.datetimes.test_iter" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_iter",shape="record"];
	"pandas.tests.indexes.datetimes.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_indexing",shape="record"];
	"pandas.tests.indexes.datetimes.test_freq_attr" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_freq_attr",shape="record"];
	"pandas.tests.indexes.datetimes.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_formats",shape="record"];
	"pandas.tests.indexes.datetimes.test_datetime" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_datetime",shape="record"];
	"pandas.tests.indexes.datetimes.test_date_range" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_date_range",shape="record"];
	"pandas.tests.indexes.datetimes.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_constructors",shape="record"];
	"pandas.tests.indexes.datetimes.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.test_arithmetic",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_unique" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_unique",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_tz_localize",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_tz_convert",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_to_series" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_to_series",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_to_pydatetime" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_to_pydatetime",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_to_period" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_to_period",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_to_julian_date" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_to_julian_date",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_to_frame" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_to_frame",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_snap" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_snap",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_shift" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_shift",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_round" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_round",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_resolution" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_resolution",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_repeat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_repeat",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_normalize" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_normalize",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_map" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_map",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_isocalendar" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_isocalendar",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_insert" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_insert",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_fillna",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_factorize" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_factorize",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_delete" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_delete",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_astype",shape="record"];
	"pandas.tests.indexes.datetimes.methods.test_asof" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimes.methods.test_asof",shape="record"];
	"pandas.tests.indexes.datetimes.methods" [label="<f0> Package| <f1> pandas.tests.indexes.datetimes.methods",shape="record"];
	"pandas.tests.indexes.datetimes" [label="<f0> Package| <f1> pandas.tests.indexes.datetimes",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_value_counts" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_value_counts",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_sort_values" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_sort_values",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_nat" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_nat",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_is_monotonic" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_is_monotonic",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_indexing",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_equals" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_equals",shape="record"];
	"pandas.tests.indexes.datetimelike_.test_drop_duplicates" [label="<f0> SourceModule| <f1> pandas.tests.indexes.datetimelike_.test_drop_duplicates",shape="record"];
	"pandas.tests.indexes.datetimelike_" [label="<f0> Package| <f1> pandas.tests.indexes.datetimelike_",shape="record"];
	"pandas.tests.indexes.conftest" [label="<f0> SourceModule| <f1> pandas.tests.indexes.conftest",shape="record"];
	"pandas.tests.indexes.categorical.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_setops",shape="record"];
	"pandas.tests.indexes.categorical.test_reindex" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_reindex",shape="record"];
	"pandas.tests.indexes.categorical.test_map" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_map",shape="record"];
	"pandas.tests.indexes.categorical.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_indexing",shape="record"];
	"pandas.tests.indexes.categorical.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_formats",shape="record"];
	"pandas.tests.indexes.categorical.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_fillna",shape="record"];
	"pandas.tests.indexes.categorical.test_equals" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_equals",shape="record"];
	"pandas.tests.indexes.categorical.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_constructors",shape="record"];
	"pandas.tests.indexes.categorical.test_category" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_category",shape="record"];
	"pandas.tests.indexes.categorical.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_astype",shape="record"];
	"pandas.tests.indexes.categorical.test_append" [label="<f0> SourceModule| <f1> pandas.tests.indexes.categorical.test_append",shape="record"];
	"pandas.tests.indexes.categorical" [label="<f0> Package| <f1> pandas.tests.indexes.categorical",shape="record"];
	"pandas.tests.indexes.base_class.test_where" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_where",shape="record"];
	"pandas.tests.indexes.base_class.test_setops" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_setops",shape="record"];
	"pandas.tests.indexes.base_class.test_reshape" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_reshape",shape="record"];
	"pandas.tests.indexes.base_class.test_pickle" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_pickle",shape="record"];
	"pandas.tests.indexes.base_class.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_indexing",shape="record"];
	"pandas.tests.indexes.base_class.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_formats",shape="record"];
	"pandas.tests.indexes.base_class.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.indexes.base_class.test_constructors",shape="record"];
	"pandas.tests.indexes.base_class" [label="<f0> Package| <f1> pandas.tests.indexes.base_class",shape="record"];
	"pandas.tests.indexes" [label="<f0> Package| <f1> pandas.tests.indexes",shape="record"];
	"pandas.tests.groupby.transform.test_transform" [label="<f0> SourceModule| <f1> pandas.tests.groupby.transform.test_transform",shape="record"];
	"pandas.tests.groupby.transform.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.groupby.transform.test_numba",shape="record"];
	"pandas.tests.groupby.transform" [label="<f0> Package| <f1> pandas.tests.groupby.transform",shape="record"];
	"pandas.tests.groupby.test_timegrouper" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_timegrouper",shape="record"];
	"pandas.tests.groupby.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_reductions",shape="record"];
	"pandas.tests.groupby.test_raises" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_raises",shape="record"];
	"pandas.tests.groupby.test_pipe" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_pipe",shape="record"];
	"pandas.tests.groupby.test_numeric_only" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_numeric_only",shape="record"];
	"pandas.tests.groupby.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_numba",shape="record"];
	"pandas.tests.groupby.test_missing" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_missing",shape="record"];
	"pandas.tests.groupby.test_libgroupby" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_libgroupby",shape="record"];
	"pandas.tests.groupby.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_indexing",shape="record"];
	"pandas.tests.groupby.test_index_as_string" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_index_as_string",shape="record"];
	"pandas.tests.groupby.test_grouping" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_grouping",shape="record"];
	"pandas.tests.groupby.test_groupby_subclass" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_groupby_subclass",shape="record"];
	"pandas.tests.groupby.test_groupby_dropna" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_groupby_dropna",shape="record"];
	"pandas.tests.groupby.test_groupby" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_groupby",shape="record"];
	"pandas.tests.groupby.test_filters" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_filters",shape="record"];
	"pandas.tests.groupby.test_cumulative" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_cumulative",shape="record"];
	"pandas.tests.groupby.test_counting" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_counting",shape="record"];
	"pandas.tests.groupby.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_categorical",shape="record"];
	"pandas.tests.groupby.test_bin_groupby" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_bin_groupby",shape="record"];
	"pandas.tests.groupby.test_apply_mutate" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_apply_mutate",shape="record"];
	"pandas.tests.groupby.test_apply" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_apply",shape="record"];
	"pandas.tests.groupby.test_api" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_api",shape="record"];
	"pandas.tests.groupby.test_all_methods" [label="<f0> SourceModule| <f1> pandas.tests.groupby.test_all_methods",shape="record"];
	"pandas.tests.groupby.methods.test_value_counts" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_value_counts",shape="record"];
	"pandas.tests.groupby.methods.test_skew" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_skew",shape="record"];
	"pandas.tests.groupby.methods.test_size" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_size",shape="record"];
	"pandas.tests.groupby.methods.test_sample" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_sample",shape="record"];
	"pandas.tests.groupby.methods.test_rank" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_rank",shape="record"];
	"pandas.tests.groupby.methods.test_quantile" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_quantile",shape="record"];
	"pandas.tests.groupby.methods.test_nth" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_nth",shape="record"];
	"pandas.tests.groupby.methods.test_nlargest_nsmallest" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_nlargest_nsmallest",shape="record"];
	"pandas.tests.groupby.methods.test_is_monotonic" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_is_monotonic",shape="record"];
	"pandas.tests.groupby.methods.test_groupby_shift_diff" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_groupby_shift_diff",shape="record"];
	"pandas.tests.groupby.methods.test_describe" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_describe",shape="record"];
	"pandas.tests.groupby.methods.test_corrwith" [label="<f0> SourceModule| <f1> pandas.tests.groupby.methods.test_corrwith",shape="record"];
	"pandas.tests.groupby.methods" [label="<f0> Package| <f1> pandas.tests.groupby.methods",shape="record"];
	"pandas.tests.groupby.conftest" [label="<f0> SourceModule| <f1> pandas.tests.groupby.conftest",shape="record"];
	"pandas.tests.groupby.aggregate.test_other" [label="<f0> SourceModule| <f1> pandas.tests.groupby.aggregate.test_other",shape="record"];
	"pandas.tests.groupby.aggregate.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.groupby.aggregate.test_numba",shape="record"];
	"pandas.tests.groupby.aggregate.test_cython" [label="<f0> SourceModule| <f1> pandas.tests.groupby.aggregate.test_cython",shape="record"];
	"pandas.tests.groupby.aggregate.test_aggregate" [label="<f0> SourceModule| <f1> pandas.tests.groupby.aggregate.test_aggregate",shape="record"];
	"pandas.tests.groupby.aggregate" [label="<f0> Package| <f1> pandas.tests.groupby.aggregate",shape="record"];
	"pandas.tests.groupby" [label="<f0> Package| <f1> pandas.tests.groupby",shape="record"];
	"pandas.tests.generic.test_to_xarray" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_to_xarray",shape="record"];
	"pandas.tests.generic.test_series" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_series",shape="record"];
	"pandas.tests.generic.test_label_or_level_utils" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_label_or_level_utils",shape="record"];
	"pandas.tests.generic.test_generic" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_generic",shape="record"];
	"pandas.tests.generic.test_frame" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_frame",shape="record"];
	"pandas.tests.generic.test_finalize" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_finalize",shape="record"];
	"pandas.tests.generic.test_duplicate_labels" [label="<f0> SourceModule| <f1> pandas.tests.generic.test_duplicate_labels",shape="record"];
	"pandas.tests.generic" [label="<f0> Package| <f1> pandas.tests.generic",shape="record"];
	"pandas.tests.frame.test_validate" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_validate",shape="record"];
	"pandas.tests.frame" [label="<f0> Package| <f1> pandas.tests.frame",shape="record"];
	"pandas.tests.frame.test_unary" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_unary",shape="record"];
	"pandas.tests.frame.test_ufunc" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_ufunc",shape="record"];
	"pandas.tests.frame.test_subclass" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_subclass",shape="record"];
	"pandas.tests.frame.test_stack_unstack" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_stack_unstack",shape="record"];
	"pandas.tests.frame.test_repr" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_repr",shape="record"];
	"pandas.tests.frame.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_reductions",shape="record"];
	"pandas.tests.frame.test_query_eval" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_query_eval",shape="record"];
	"pandas.tests.frame.test_npfuncs" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_npfuncs",shape="record"];
	"pandas.tests.frame.test_nonunique_indexes" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_nonunique_indexes",shape="record"];
	"pandas.tests.frame.test_logical_ops" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_logical_ops",shape="record"];
	"pandas.tests.frame.test_iteration" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_iteration",shape="record"];
	"pandas.tests.frame.test_cumulative" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_cumulative",shape="record"];
	"pandas.tests.frame.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_constructors",shape="record"];
	"pandas.tests.frame.test_block_internals" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_block_internals",shape="record"];
	"pandas.tests.frame.test_arrow_interface" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_arrow_interface",shape="record"];
	"pandas.tests.frame.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_arithmetic",shape="record"];
	"pandas.tests.frame.common" [label="<f0> SourceModule| <f1> pandas.tests.frame.common",shape="record"];
	"pandas.tests.frame.test_api" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_api",shape="record"];
	"pandas.tests.frame.test_alter_axes" [label="<f0> SourceModule| <f1> pandas.tests.frame.test_alter_axes",shape="record"];
	"pandas.tests.frame.methods.test_values" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_values",shape="record"];
	"pandas.tests.frame.methods.test_value_counts" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_value_counts",shape="record"];
	"pandas.tests.frame.methods.test_update" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_update",shape="record"];
	"pandas.tests.frame.methods.test_tz_localize" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_tz_localize",shape="record"];
	"pandas.tests.frame.methods.test_tz_convert" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_tz_convert",shape="record"];
	"pandas.tests.frame.methods.test_truncate" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_truncate",shape="record"];
	"pandas.tests.frame.methods.test_transpose" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_transpose",shape="record"];
	"pandas.tests.frame.methods.test_to_timestamp" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_timestamp",shape="record"];
	"pandas.tests.frame.methods.test_to_records" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_records",shape="record"];
	"pandas.tests.frame.methods.test_to_period" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_period",shape="record"];
	"pandas.tests.frame.methods.test_to_numpy" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_numpy",shape="record"];
	"pandas.tests.frame.methods.test_to_dict_of_blocks" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_dict_of_blocks",shape="record"];
	"pandas.tests.frame.methods.test_to_dict" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_dict",shape="record"];
	"pandas.tests.frame.methods.test_to_csv" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_to_csv",shape="record"];
	"pandas.tests.frame.methods.test_swaplevel" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_swaplevel",shape="record"];
	"pandas.tests.frame.methods.test_swapaxes" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_swapaxes",shape="record"];
	"pandas.tests.frame.methods.test_sort_values" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_sort_values",shape="record"];
	"pandas.tests.frame.methods.test_sort_index" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_sort_index",shape="record"];
	"pandas.tests.frame.methods.test_size" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_size",shape="record"];
	"pandas.tests.frame.methods.test_shift" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_shift",shape="record"];
	"pandas.tests.frame.methods.test_set_index" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_set_index",shape="record"];
	"pandas.tests.frame.methods.test_set_axis" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_set_axis",shape="record"];
	"pandas.tests.frame.methods.test_select_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_select_dtypes",shape="record"];
	"pandas.tests.frame.methods.test_sample" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_sample",shape="record"];
	"pandas.tests.frame.methods.test_round" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_round",shape="record"];
	"pandas.tests.frame.methods.test_reset_index" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_reset_index",shape="record"];
	"pandas.tests.frame.methods.test_replace" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_replace",shape="record"];
	"pandas.tests.frame.methods.test_reorder_levels" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_reorder_levels",shape="record"];
	"pandas.tests.frame.methods.test_rename_axis" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_rename_axis",shape="record"];
	"pandas.tests.frame.methods.test_rename" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_rename",shape="record"];
	"pandas.tests.frame.methods.test_reindex_like" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_reindex_like",shape="record"];
	"pandas.tests.frame.methods.test_reindex" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_reindex",shape="record"];
	"pandas.tests.frame.methods.test_rank" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_rank",shape="record"];
	"pandas.tests.frame.methods.test_quantile" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_quantile",shape="record"];
	"pandas.tests.frame.methods.test_pop" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_pop",shape="record"];
	"pandas.tests.frame.methods.test_pipe" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_pipe",shape="record"];
	"pandas.tests.frame.methods.test_pct_change" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_pct_change",shape="record"];
	"pandas.tests.frame.methods.test_nlargest" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_nlargest",shape="record"];
	"pandas.tests.frame.methods.test_matmul" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_matmul",shape="record"];
	"pandas.tests.frame.methods.test_map" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_map",shape="record"];
	"pandas.tests.frame.methods.test_join" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_join",shape="record"];
	"pandas.tests.frame.methods.test_iterrows" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_iterrows",shape="record"];
	"pandas.tests.frame.methods.test_isin" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_isin",shape="record"];
	"pandas.tests.frame.methods.test_isetitem" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_isetitem",shape="record"];
	"pandas.tests.frame.methods.test_is_homogeneous_dtype" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_is_homogeneous_dtype",shape="record"];
	"pandas.tests.frame.methods.test_interpolate" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_interpolate",shape="record"];
	"pandas.tests.frame.methods.test_info" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_info",shape="record"];
	"pandas.tests.frame.methods.test_infer_objects" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_infer_objects",shape="record"];
	"pandas.tests.frame.methods.test_head_tail" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_head_tail",shape="record"];
	"pandas.tests.frame.methods.test_get_numeric_data" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_get_numeric_data",shape="record"];
	"pandas.tests.frame.methods.test_first_valid_index" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_first_valid_index",shape="record"];
	"pandas.tests.frame.methods.test_first_and_last" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_first_and_last",shape="record"];
	"pandas.tests.frame.methods.test_filter" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_filter",shape="record"];
	"pandas.tests.frame.methods.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_fillna",shape="record"];
	"pandas.tests.frame.methods.test_explode" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_explode",shape="record"];
	"pandas.tests.frame.methods.test_equals" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_equals",shape="record"];
	"pandas.tests.frame.methods.test_duplicated" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_duplicated",shape="record"];
	"pandas.tests.frame.methods.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_dtypes",shape="record"];
	"pandas.tests.frame.methods.test_dropna" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_dropna",shape="record"];
	"pandas.tests.frame.methods.test_droplevel" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_droplevel",shape="record"];
	"pandas.tests.frame.methods.test_drop_duplicates" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_drop_duplicates",shape="record"];
	"pandas.tests.frame.methods.test_drop" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_drop",shape="record"];
	"pandas.tests.frame.methods.test_dot" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_dot",shape="record"];
	"pandas.tests.frame.methods.test_diff" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_diff",shape="record"];
	"pandas.tests.frame.methods.test_describe" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_describe",shape="record"];
	"pandas.tests.frame.methods.test_cov_corr" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_cov_corr",shape="record"];
	"pandas.tests.frame.methods.test_count" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_count",shape="record"];
	"pandas.tests.frame.methods.test_copy" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_copy",shape="record"];
	"pandas.tests.frame.methods.test_convert_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_convert_dtypes",shape="record"];
	"pandas.tests.frame.methods.test_compare" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_compare",shape="record"];
	"pandas.tests.frame.methods.test_combine_first" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_combine_first",shape="record"];
	"pandas.tests.frame.methods.test_combine" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_combine",shape="record"];
	"pandas.tests.frame.methods.test_clip" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_clip",shape="record"];
	"pandas.tests.frame.methods.test_between_time" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_between_time",shape="record"];
	"pandas.tests.frame.methods.test_at_time" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_at_time",shape="record"];
	"pandas.tests.frame.methods.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_astype",shape="record"];
	"pandas.tests.frame.methods.test_assign" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_assign",shape="record"];
	"pandas.tests.frame.methods.test_asof" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_asof",shape="record"];
	"pandas.tests.frame.methods.test_asfreq" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_asfreq",shape="record"];
	"pandas.tests.frame.methods.test_align" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_align",shape="record"];
	"pandas.tests.frame.methods.test_add_prefix_suffix" [label="<f0> SourceModule| <f1> pandas.tests.frame.methods.test_add_prefix_suffix",shape="record"];
	"pandas.tests.frame.methods" [label="<f0> Package| <f1> pandas.tests.frame.methods",shape="record"];
	"pandas.tests.frame.indexing.test_xs" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_xs",shape="record"];
	"pandas.tests.frame.indexing.test_where" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_where",shape="record"];
	"pandas.tests.frame.indexing.test_take" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_take",shape="record"];
	"pandas.tests.frame.indexing.test_setitem" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_setitem",shape="record"];
	"pandas.tests.frame.indexing.test_set_value" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_set_value",shape="record"];
	"pandas.tests.frame.indexing.test_mask" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_mask",shape="record"];
	"pandas.tests.frame.indexing.test_insert" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_insert",shape="record"];
	"pandas.tests.frame.indexing.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_indexing",shape="record"];
	"pandas.tests.frame.indexing.test_getitem" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_getitem",shape="record"];
	"pandas.tests.frame.indexing.test_get_value" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_get_value",shape="record"];
	"pandas.tests.frame.indexing.test_get" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_get",shape="record"];
	"pandas.tests.frame.indexing.test_delitem" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_delitem",shape="record"];
	"pandas.tests.frame.indexing.test_coercion" [label="<f0> SourceModule| <f1> pandas.tests.frame.indexing.test_coercion",shape="record"];
	"pandas.tests.frame.indexing" [label="<f0> Package| <f1> pandas.tests.frame.indexing",shape="record"];
	"pandas.tests.frame.constructors.test_from_records" [label="<f0> SourceModule| <f1> pandas.tests.frame.constructors.test_from_records",shape="record"];
	"pandas.tests.frame.constructors.test_from_dict" [label="<f0> SourceModule| <f1> pandas.tests.frame.constructors.test_from_dict",shape="record"];
	"pandas.tests.frame.constructors" [label="<f0> Package| <f1> pandas.tests.frame.constructors",shape="record"];
	"pandas.tests.frame.conftest" [label="<f0> SourceModule| <f1> pandas.tests.frame.conftest",shape="record"];
	"pandas.tests.extension.test_string" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_string",shape="record"];
	"pandas.tests.extension.base" [label="<f0> Package| <f1> pandas.tests.extension.base",shape="record"];
	"pandas.tests.extension.base.setitem" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.setitem",shape="record"];
	"pandas.tests.extension.base.reshaping" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.reshaping",shape="record"];
	"pandas.tests.extension.base.reduce" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.reduce",shape="record"];
	"pandas.tests.extension.base.printing" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.printing",shape="record"];
	"pandas.tests.extension.base.ops" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.ops",shape="record"];
	"pandas.tests.extension.base.missing" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.missing",shape="record"];
	"pandas.tests.extension.base.methods" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.methods",shape="record"];
	"pandas.tests.extension.base.io" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.io",shape="record"];
	"pandas.tests.extension.base.interface" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.interface",shape="record"];
	"pandas.tests.extension.base.index" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.index",shape="record"];
	"pandas.tests.extension.base.groupby" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.groupby",shape="record"];
	"pandas.tests.extension.base.getitem" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.getitem",shape="record"];
	"pandas.tests.extension.base.dtype" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.dtype",shape="record"];
	"pandas.tests.extension.base.dim2" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.dim2",shape="record"];
	"pandas.tests.extension.base.constructors" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.constructors",shape="record"];
	"pandas.tests.extension.base.casting" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.casting",shape="record"];
	"pandas.tests.extension.base.accumulate" [label="<f0> SourceModule| <f1> pandas.tests.extension.base.accumulate",shape="record"];
	"pandas.tests.extension.test_sparse" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_sparse",shape="record"];
	"pandas.tests.extension.test_period" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_period",shape="record"];
	"pandas.tests.extension.test_numpy" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_numpy",shape="record"];
	"pandas.tests.extension.test_masked" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_masked",shape="record"];
	"pandas.tests.extension.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_interval",shape="record"];
	"pandas.tests.extension.test_extension" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_extension",shape="record"];
	"pandas.tests.extension.test_datetime" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_datetime",shape="record"];
	"pandas.tests.extension.test_common" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_common",shape="record"];
	"pandas.tests.extension.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_categorical",shape="record"];
	"pandas.tests.extension.test_arrow" [label="<f0> SourceModule| <f1> pandas.tests.extension.test_arrow",shape="record"];
	"pandas.tests.extension.list.test_list" [label="<f0> SourceModule| <f1> pandas.tests.extension.list.test_list",shape="record"];
	"pandas.tests.extension.list.array" [label="<f0> SourceModule| <f1> pandas.tests.extension.list.array",shape="record"];
	"pandas.tests.extension.list" [label="<f0> Package| <f1> pandas.tests.extension.list",shape="record"];
	"pandas.tests.extension.json.test_json" [label="<f0> SourceModule| <f1> pandas.tests.extension.json.test_json",shape="record"];
	"pandas.tests.extension.json.array" [label="<f0> SourceModule| <f1> pandas.tests.extension.json.array",shape="record"];
	"pandas.tests.extension.json" [label="<f0> Package| <f1> pandas.tests.extension.json",shape="record"];
	"pandas.tests.extension.decimal.test_decimal" [label="<f0> SourceModule| <f1> pandas.tests.extension.decimal.test_decimal",shape="record"];
	"pandas.tests.extension.date" [label="<f0> Package| <f1> pandas.tests.extension.date",shape="record"];
	"pandas.tests.extension.date.array" [label="<f0> SourceModule| <f1> pandas.tests.extension.date.array",shape="record"];
	"pandas.tests.extension.conftest" [label="<f0> SourceModule| <f1> pandas.tests.extension.conftest",shape="record"];
	"pandas.tests.extension.array_with_attr.test_array_with_attr" [label="<f0> SourceModule| <f1> pandas.tests.extension.array_with_attr.test_array_with_attr",shape="record"];
	"pandas.tests.extension.array_with_attr" [label="<f0> Package| <f1> pandas.tests.extension.array_with_attr",shape="record"];
	"pandas.tests.extension.array_with_attr.array" [label="<f0> SourceModule| <f1> pandas.tests.extension.array_with_attr.array",shape="record"];
	"pandas.tests.dtypes.test_missing" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_missing",shape="record"];
	"pandas.tests.dtypes.test_inference" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_inference",shape="record"];
	"pandas.tests.dtypes.test_generic" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_generic",shape="record"];
	"pandas.tests.dtypes.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_dtypes",shape="record"];
	"pandas.tests.dtypes.test_concat" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_concat",shape="record"];
	"pandas.tests.dtypes.test_common" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.test_common",shape="record"];
	"pandas.tests.dtypes.cast.test_promote" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_promote",shape="record"];
	"pandas.tests.dtypes.cast.test_maybe_box_native" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_maybe_box_native",shape="record"];
	"pandas.tests.dtypes.cast.test_infer_dtype" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_infer_dtype",shape="record"];
	"pandas.tests.dtypes.cast.test_infer_datetimelike" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_infer_datetimelike",shape="record"];
	"pandas.tests.dtypes.cast.test_find_common_type" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_find_common_type",shape="record"];
	"pandas.tests.dtypes.cast.test_downcast" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_downcast",shape="record"];
	"pandas.tests.dtypes.cast.test_dict_compat" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_dict_compat",shape="record"];
	"pandas.tests.dtypes.cast.test_construct_object_arr" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_construct_object_arr",shape="record"];
	"pandas.tests.dtypes.cast.test_construct_ndarray" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_construct_ndarray",shape="record"];
	"pandas.tests.dtypes.cast.test_construct_from_scalar" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_construct_from_scalar",shape="record"];
	"pandas.tests.dtypes.cast.test_can_hold_element" [label="<f0> SourceModule| <f1> pandas.tests.dtypes.cast.test_can_hold_element",shape="record"];
	"pandas.tests.dtypes.cast" [label="<f0> Package| <f1> pandas.tests.dtypes.cast",shape="record"];
	"pandas.tests.dtypes" [label="<f0> Package| <f1> pandas.tests.dtypes",shape="record"];
	"pandas.tests.copy_view.test_util" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_util",shape="record"];
	"pandas.tests.copy_view.util" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.util",shape="record"];
	"pandas.tests.copy_view.test_setitem" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_setitem",shape="record"];
	"pandas.tests.copy_view.test_replace" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_replace",shape="record"];
	"pandas.tests.copy_view.test_methods" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_methods",shape="record"];
	"pandas.tests.copy_view.test_interp_fillna" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_interp_fillna",shape="record"];
	"pandas.tests.copy_view.test_internals" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_internals",shape="record"];
	"pandas.tests.copy_view.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_indexing",shape="record"];
	"pandas.tests.copy_view.test_functions" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_functions",shape="record"];
	"pandas.tests.copy_view.test_core_functionalities" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_core_functionalities",shape="record"];
	"pandas.tests.copy_view.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_constructors",shape="record"];
	"pandas.tests.copy_view.test_clip" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_clip",shape="record"];
	"pandas.tests.copy_view.test_chained_assignment_deprecation" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_chained_assignment_deprecation",shape="record"];
	"pandas.tests.copy_view.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_astype",shape="record"];
	"pandas.tests.copy_view.test_array" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.test_array",shape="record"];
	"pandas.tests.copy_view.index.test_timedeltaindex" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.index.test_timedeltaindex",shape="record"];
	"pandas.tests.copy_view.index.test_periodindex" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.index.test_periodindex",shape="record"];
	"pandas.tests.copy_view.index.test_index" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.index.test_index",shape="record"];
	"pandas.tests.copy_view.index.test_datetimeindex" [label="<f0> SourceModule| <f1> pandas.tests.copy_view.index.test_datetimeindex",shape="record"];
	"pandas.tests.copy_view.index" [label="<f0> Package| <f1> pandas.tests.copy_view.index",shape="record"];
	"pandas.tests.copy_view" [label="<f0> Package| <f1> pandas.tests.copy_view",shape="record"];
	"pandas.tests.construction.test_extract_array" [label="<f0> SourceModule| <f1> pandas.tests.construction.test_extract_array",shape="record"];
	"pandas.tests.construction" [label="<f0> Package| <f1> pandas.tests.construction",shape="record"];
	"pandas.tests.config.test_localization" [label="<f0> SourceModule| <f1> pandas.tests.config.test_localization",shape="record"];
	"pandas.tests.config.test_config" [label="<f0> SourceModule| <f1> pandas.tests.config.test_config",shape="record"];
	"pandas.tests.config" [label="<f0> Package| <f1> pandas.tests.config",shape="record"];
	"pandas.tests.computation.test_eval" [label="<f0> SourceModule| <f1> pandas.tests.computation.test_eval",shape="record"];
	"pandas.tests.computation.test_compat" [label="<f0> SourceModule| <f1> pandas.tests.computation.test_compat",shape="record"];
	"pandas.tests.computation" [label="<f0> Package| <f1> pandas.tests.computation",shape="record"];
	"pandas.tests.base.test_value_counts" [label="<f0> SourceModule| <f1> pandas.tests.base.test_value_counts",shape="record"];
	"pandas.tests.base.test_unique" [label="<f0> SourceModule| <f1> pandas.tests.base.test_unique",shape="record"];
	"pandas.tests.base.test_transpose" [label="<f0> SourceModule| <f1> pandas.tests.base.test_transpose",shape="record"];
	"pandas.tests.base.test_misc" [label="<f0> SourceModule| <f1> pandas.tests.base.test_misc",shape="record"];
	"pandas.tests.base.test_fillna" [label="<f0> SourceModule| <f1> pandas.tests.base.test_fillna",shape="record"];
	"pandas.tests.base.test_conversion" [label="<f0> SourceModule| <f1> pandas.tests.base.test_conversion",shape="record"];
	"pandas.tests.base.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.base.test_constructors",shape="record"];
	"pandas.tests.base.common" [label="<f0> SourceModule| <f1> pandas.tests.base.common",shape="record"];
	"pandas.tests.base" [label="<f0> Package| <f1> pandas.tests.base",shape="record"];
	"pandas.tests.arrays.timedeltas.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.arrays.timedeltas.test_reductions",shape="record"];
	"pandas.tests.arrays.timedeltas.test_cumulative" [label="<f0> SourceModule| <f1> pandas.tests.arrays.timedeltas.test_cumulative",shape="record"];
	"pandas.tests.arrays.timedeltas.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.arrays.timedeltas.test_constructors",shape="record"];
	"pandas.tests.arrays.timedeltas" [label="<f0> Package| <f1> pandas.tests.arrays.timedeltas",shape="record"];
	"pandas.tests.arrays.test_timedeltas" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_timedeltas",shape="record"];
	"pandas.tests.arrays.test_period" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_period",shape="record"];
	"pandas.tests.arrays.test_ndarray_backed" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_ndarray_backed",shape="record"];
	"pandas.tests.arrays.test_datetimes" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_datetimes",shape="record"];
	"pandas.tests.arrays.test_datetimelike" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_datetimelike",shape="record"];
	"pandas.tests.arrays.test_array" [label="<f0> SourceModule| <f1> pandas.tests.arrays.test_array",shape="record"];
	"pandas.tests.arrays.string_.test_string_arrow" [label="<f0> SourceModule| <f1> pandas.tests.arrays.string_.test_string_arrow",shape="record"];
	"pandas.tests.arrays.string_.test_string" [label="<f0> SourceModule| <f1> pandas.tests.arrays.string_.test_string",shape="record"];
	"pandas.tests.arrays.string_.test_concat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.string_.test_concat",shape="record"];
	"pandas.tests.arrays.string_" [label="<f0> Package| <f1> pandas.tests.arrays.string_",shape="record"];
	"pandas.tests.arrays.sparse.test_unary" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_unary",shape="record"];
	"pandas.tests.arrays.sparse.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_reductions",shape="record"];
	"pandas.tests.arrays.sparse.test_libsparse" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_libsparse",shape="record"];
	"pandas.tests.arrays.sparse.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_indexing",shape="record"];
	"pandas.tests.arrays.sparse.test_dtype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_dtype",shape="record"];
	"pandas.tests.arrays.sparse.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_constructors",shape="record"];
	"pandas.tests.arrays.sparse.test_combine_concat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_combine_concat",shape="record"];
	"pandas.tests.arrays.sparse.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_astype",shape="record"];
	"pandas.tests.arrays.sparse.test_array" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_array",shape="record"];
	"pandas.tests.arrays.sparse.test_arithmetics" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_arithmetics",shape="record"];
	"pandas.tests.arrays.sparse.test_accessor" [label="<f0> SourceModule| <f1> pandas.tests.arrays.sparse.test_accessor",shape="record"];
	"pandas.tests.arrays.sparse" [label="<f0> Package| <f1> pandas.tests.arrays.sparse",shape="record"];
	"pandas.tests.arrays.period.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.arrays.period.test_reductions",shape="record"];
	"pandas.tests.arrays.period.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.arrays.period.test_constructors",shape="record"];
	"pandas.tests.arrays.period.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.period.test_astype",shape="record"];
	"pandas.tests.arrays.period.test_arrow_compat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.period.test_arrow_compat",shape="record"];
	"pandas.tests.arrays.period" [label="<f0> Package| <f1> pandas.tests.arrays.period",shape="record"];
	"pandas.tests.arrays.numpy_.test_numpy" [label="<f0> SourceModule| <f1> pandas.tests.arrays.numpy_.test_numpy",shape="record"];
	"pandas.tests.arrays.numpy_.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.numpy_.test_indexing",shape="record"];
	"pandas.tests.arrays.numpy_" [label="<f0> Package| <f1> pandas.tests.arrays.numpy_",shape="record"];
	"pandas.tests.arrays.masked.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.masked.test_indexing",shape="record"];
	"pandas.tests.arrays.masked.test_function" [label="<f0> SourceModule| <f1> pandas.tests.arrays.masked.test_function",shape="record"];
	"pandas.tests.arrays.masked.test_arrow_compat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.masked.test_arrow_compat",shape="record"];
	"pandas.tests.arrays.masked.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.arrays.masked.test_arithmetic",shape="record"];
	"pandas.tests.arrays.masked" [label="<f0> Package| <f1> pandas.tests.arrays.masked",shape="record"];
	"pandas.tests.arrays.interval.test_overlaps" [label="<f0> SourceModule| <f1> pandas.tests.arrays.interval.test_overlaps",shape="record"];
	"pandas.tests.arrays.interval.test_interval_pyarrow" [label="<f0> SourceModule| <f1> pandas.tests.arrays.interval.test_interval_pyarrow",shape="record"];
	"pandas.tests.arrays.interval.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.arrays.interval.test_interval",shape="record"];
	"pandas.tests.arrays.interval.test_formats" [label="<f0> SourceModule| <f1> pandas.tests.arrays.interval.test_formats",shape="record"];
	"pandas.tests.arrays.interval.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.interval.test_astype",shape="record"];
	"pandas.tests.arrays.interval" [label="<f0> Package| <f1> pandas.tests.arrays.interval",shape="record"];
	"pandas.tests.arrays.integer.test_repr" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_repr",shape="record"];
	"pandas.tests.arrays.integer.test_reduction" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_reduction",shape="record"];
	"pandas.tests.arrays.integer.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_indexing",shape="record"];
	"pandas.tests.arrays.integer.test_function" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_function",shape="record"];
	"pandas.tests.arrays.integer.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_dtypes",shape="record"];
	"pandas.tests.arrays.integer.test_construction" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_construction",shape="record"];
	"pandas.tests.arrays.integer.test_concat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_concat",shape="record"];
	"pandas.tests.arrays.integer.test_comparison" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_comparison",shape="record"];
	"pandas.tests.arrays.masked_shared" [label="<f0> SourceModule| <f1> pandas.tests.arrays.masked_shared",shape="record"];
	"pandas.tests.arrays.integer.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.test_arithmetic",shape="record"];
	"pandas.tests.arrays.integer.conftest" [label="<f0> SourceModule| <f1> pandas.tests.arrays.integer.conftest",shape="record"];
	"pandas.tests.arrays.integer" [label="<f0> Package| <f1> pandas.tests.arrays.integer",shape="record"];
	"pandas.tests.arrays.floating.test_to_numpy" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_to_numpy",shape="record"];
	"pandas.tests.arrays.floating.test_repr" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_repr",shape="record"];
	"pandas.tests.arrays.floating.test_function" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_function",shape="record"];
	"pandas.tests.arrays.floating.test_contains" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_contains",shape="record"];
	"pandas.tests.arrays.floating.test_construction" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_construction",shape="record"];
	"pandas.tests.arrays.floating.test_concat" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_concat",shape="record"];
	"pandas.tests.arrays.floating.test_comparison" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_comparison",shape="record"];
	"pandas.tests.arrays.floating.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_astype",shape="record"];
	"pandas.tests.arrays.floating.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.test_arithmetic",shape="record"];
	"pandas.tests.arrays.floating.conftest" [label="<f0> SourceModule| <f1> pandas.tests.arrays.floating.conftest",shape="record"];
	"pandas.tests.arrays.floating" [label="<f0> Package| <f1> pandas.tests.arrays.floating",shape="record"];
	"pandas.tests.arrays.datetimes.test_reductions" [label="<f0> SourceModule| <f1> pandas.tests.arrays.datetimes.test_reductions",shape="record"];
	"pandas.tests.arrays.datetimes.test_cumulative" [label="<f0> SourceModule| <f1> pandas.tests.arrays.datetimes.test_cumulative",shape="record"];
	"pandas.tests.arrays.datetimes.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.arrays.datetimes.test_constructors",shape="record"];
	"pandas.tests.arrays.datetimes" [label="<f0> Package| <f1> pandas.tests.arrays.datetimes",shape="record"];
	"pandas.tests.arrays.categorical.test_warnings" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_warnings",shape="record"];
	"pandas.tests.arrays.categorical.test_take" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_take",shape="record"];
	"pandas.tests.arrays.categorical.test_subclass" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_subclass",shape="record"];
	"pandas.tests.arrays.categorical.test_sorting" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_sorting",shape="record"];
	"pandas.tests.arrays.categorical.test_repr" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_repr",shape="record"];
	"pandas.tests.arrays.categorical.test_replace" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_replace",shape="record"];
	"pandas.tests.arrays.categorical.test_operators" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_operators",shape="record"];
	"pandas.tests.arrays.categorical.test_missing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_missing",shape="record"];
	"pandas.tests.arrays.categorical.test_map" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_map",shape="record"];
	"pandas.tests.arrays.categorical.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_indexing",shape="record"];
	"pandas.tests.arrays.categorical.test_dtypes" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_dtypes",shape="record"];
	"pandas.tests.arrays.categorical.test_constructors" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_constructors",shape="record"];
	"pandas.tests.arrays.categorical.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_astype",shape="record"];
	"pandas.tests.arrays.categorical.test_api" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_api",shape="record"];
	"pandas.tests.arrays.categorical.test_analytics" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_analytics",shape="record"];
	"pandas.tests.arrays.categorical.test_algos" [label="<f0> SourceModule| <f1> pandas.tests.arrays.categorical.test_algos",shape="record"];
	"pandas.tests.arrays.categorical" [label="<f0> Package| <f1> pandas.tests.arrays.categorical",shape="record"];
	"pandas.tests.arrays.boolean.test_repr" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_repr",shape="record"];
	"pandas.tests.arrays.boolean.test_reduction" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_reduction",shape="record"];
	"pandas.tests.arrays.boolean.test_ops" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_ops",shape="record"];
	"pandas.tests.arrays.boolean.test_logical" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_logical",shape="record"];
	"pandas.tests.arrays.boolean.test_indexing" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_indexing",shape="record"];
	"pandas.tests.arrays.boolean.test_function" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_function",shape="record"];
	"pandas.tests.arrays.boolean.test_construction" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_construction",shape="record"];
	"pandas.tests.arrays.boolean.test_comparison" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_comparison",shape="record"];
	"pandas.tests.arrays.boolean.test_astype" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_astype",shape="record"];
	"pandas.tests.arrays.boolean.test_arithmetic" [label="<f0> SourceModule| <f1> pandas.tests.arrays.boolean.test_arithmetic",shape="record"];
	"pandas.tests.arrays.boolean" [label="<f0> Package| <f1> pandas.tests.arrays.boolean",shape="record"];
	"pandas.tests.arrays" [label="<f0> Package| <f1> pandas.tests.arrays",shape="record"];
	"pandas.tests.arithmetic.test_timedelta64" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_timedelta64",shape="record"];
	"pandas.tests.arithmetic.test_period" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_period",shape="record"];
	"pandas.tests.arithmetic.test_object" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_object",shape="record"];
	"pandas.tests.arithmetic.test_numeric" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_numeric",shape="record"];
	"pandas.tests.arithmetic.test_interval" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_interval",shape="record"];
	"pandas.tests.arithmetic.test_datetime64" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_datetime64",shape="record"];
	"pandas.tests.arithmetic.test_categorical" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_categorical",shape="record"];
	"pandas.tests.arithmetic.test_array_ops" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.test_array_ops",shape="record"];
	"pandas.tests.arithmetic.conftest" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.conftest",shape="record"];
	"pandas.tests.arithmetic.common" [label="<f0> SourceModule| <f1> pandas.tests.arithmetic.common",shape="record"];
	"pandas.tests.arithmetic" [label="<f0> Package| <f1> pandas.tests.arithmetic",shape="record"];
	"pandas.tests.apply.test_str" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_str",shape="record"];
	"pandas.tests.apply.test_series_transform" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_series_transform",shape="record"];
	"pandas.tests.apply.test_series_apply_relabeling" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_series_apply_relabeling",shape="record"];
	"pandas.tests.apply.test_series_apply" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_series_apply",shape="record"];
	"pandas.tests.apply.test_numba" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_numba",shape="record"];
	"pandas.tests.apply.test_invalid_arg" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_invalid_arg",shape="record"];
	"pandas.tests.apply.test_frame_transform" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_frame_transform",shape="record"];
	"pandas.tests.apply.test_frame_apply_relabeling" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_frame_apply_relabeling",shape="record"];
	"pandas.tests.apply.test_frame_apply" [label="<f0> SourceModule| <f1> pandas.tests.apply.test_frame_apply",shape="record"];
	"pandas.tests.apply.common" [label="<f0> SourceModule| <f1> pandas.tests.apply.common",shape="record"];
	"pandas.tests.apply" [label="<f0> Package| <f1> pandas.tests.apply",shape="record"];
	"pandas.tests.api.test_types" [label="<f0> SourceModule| <f1> pandas.tests.api.test_types",shape="record"];
	"pandas.tests.api.test_api" [label="<f0> SourceModule| <f1> pandas.tests.api.test_api",shape="record"];
	"pandas.tests.api" [label="<f0> Package| <f1> pandas.tests.api",shape="record"];
	"pandas.tests" [label="<f0> Package| <f1> pandas.tests",shape="record"];
	"pandas.core.sparse.api" [label="<f0> SourceModule| <f1> pandas.core.sparse.api",shape="record"];
	"pandas.core.sparse" [label="<f0> Package| <f1> pandas.core.sparse",shape="record"];
	"pandas.conftest" [label="<f0> SourceModule| <f1> pandas.conftest",shape="record"];
	"'traitlets.config'" [label="<f0> MissingModule| <f1> 'traitlets.config'",shape="record"];
	"pandas._testing._hypothesis" [label="<f0> SourceModule| <f1> pandas._testing._hypothesis",shape="record"];
	"pandas._libs.tslibs.base" [label="<f0> Extension| <f1> pandas._libs.tslibs.base",shape="record"];
	"winreg" [label="<f0> BuiltinModule| <f1> winreg",shape="record"];
	"_thread" [label="<f0> BuiltinModule| <f1> _thread",shape="record"];
	"_elementtree" [label="<f0> Extension| <f1> _elementtree",shape="record"];
	"xml.etree.cElementTree" [label="<f0> SourceModule| <f1> xml.etree.cElementTree",shape="record"];
	"xml.etree.ElementInclude" [label="<f0> SourceModule| <f1> xml.etree.ElementInclude",shape="record"];
	"zipimport" [label="<f0> SourceModule| <f1> zipimport",shape="record"];
	"setuptools._vendor.typing_extensions" [label="<f0> SourceModule| <f1> setuptools._vendor.typing_extensions",shape="record"];
	"setuptools._vendor.wheel" [label="<f0> Package| <f1> setuptools._vendor.wheel",shape="record"];
	"setuptools._vendor.tomli" [label="<f0> Package| <f1> setuptools._vendor.tomli",shape="record"];
	"setuptools._vendor.tomli._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._parser",shape="record"];
	"setuptools._vendor.tomli._types" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._types",shape="record"];
	"setuptools._vendor.tomli._re" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._re",shape="record"];
	"setuptools._vendor.importlib_metadata" [label="<f0> Package| <f1> setuptools._vendor.importlib_metadata",shape="record"];
	"setuptools._vendor.importlib_metadata._adapters" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._adapters",shape="record"];
	"setuptools._vendor.importlib_metadata._text" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._text",shape="record"];
	"setuptools._vendor.importlib_metadata._itertools" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._itertools",shape="record"];
	"setuptools._vendor.importlib_metadata._functools" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._functools",shape="record"];
	"setuptools._vendor.importlib_metadata._compat" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._compat",shape="record"];
	"setuptools._vendor.importlib_metadata._collections" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._collections",shape="record"];
	"setuptools._vendor.importlib_metadata.compat.py311" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata.compat.py311",shape="record"];
	"setuptools._vendor.importlib_metadata.compat.py39" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata.compat.py39",shape="record"];
	"setuptools._vendor.importlib_metadata.compat" [label="<f0> Package| <f1> setuptools._vendor.importlib_metadata.compat",shape="record"];
	"setuptools._vendor.importlib_metadata._meta" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._meta",shape="record"];
	"zipp" [label="<f0> AliasNode| <f1> zipp",shape="record"];
	"setuptools._vendor.zipp" [label="<f0> Package| <f1> setuptools._vendor.zipp",shape="record"];
	"setuptools._vendor.zipp.glob" [label="<f0> SourceModule| <f1> setuptools._vendor.zipp.glob",shape="record"];
	"setuptools._vendor.zipp.compat.py310" [label="<f0> SourceModule| <f1> setuptools._vendor.zipp.compat.py310",shape="record"];
	"setuptools._vendor.zipp.compat" [label="<f0> Package| <f1> setuptools._vendor.zipp.compat",shape="record"];
	"setuptools._vendor.jaraco.text" [label="<f0> Package| <f1> setuptools._vendor.jaraco.text",shape="record"];
	"setuptools._vendor.jaraco" [label="<f0> NamespacePackage| <f1> setuptools._vendor.jaraco",shape="record"];
	"jaraco.context" [label="<f0> AliasNode| <f1> jaraco.context",shape="record"];
	"importlib_resources" [label="<f0> MissingModule| <f1> importlib_resources",shape="record"];
	"setuptools._vendor.jaraco.context" [label="<f0> SourceModule| <f1> setuptools._vendor.jaraco.context",shape="record"];
	"backports.tarfile" [label="<f0> AliasNode| <f1> backports.tarfile",shape="record"];
	"backports" [label="<f0> Package| <f1> backports",shape="record"];
	"setuptools._vendor.backports.tarfile" [label="<f0> Package| <f1> setuptools._vendor.backports.tarfile",shape="record"];
	"setuptools._vendor.backports" [label="<f0> Package| <f1> setuptools._vendor.backports",shape="record"];
	"setuptools._vendor.backports.tarfile.compat.py38" [label="<f0> SourceModule| <f1> setuptools._vendor.backports.tarfile.compat.py38",shape="record"];
	"setuptools._vendor.backports.tarfile.compat" [label="<f0> Package| <f1> setuptools._vendor.backports.tarfile.compat",shape="record"];
	"setuptools._vendor.jaraco.functools" [label="<f0> Package| <f1> setuptools._vendor.jaraco.functools",shape="record"];
	"setuptools._vendor.more_itertools" [label="<f0> Package| <f1> setuptools._vendor.more_itertools",shape="record"];
	"setuptools._vendor.more_itertools.recipes" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.recipes",shape="record"];
	"setuptools._vendor.more_itertools.more" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.more",shape="record"];
	"setuptools._distutils" [label="<f0> Package| <f1> setuptools._distutils",shape="record"];
	"_json" [label="<f0> BuiltinModule| <f1> _json",shape="record"];
	"_ssl" [label="<f0> Extension| <f1> _ssl",shape="record"];
	"D:\JAVA\code\pdd_project_final\main.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\main.py",shape="record"];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py",shape="record"];
	"pyimod02_importers" [label="<f0> MissingModule| <f1> pyimod02_importers",shape="record"];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py",shape="record"];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py",shape="record"];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py",shape="record"];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" [label="<f0> Script| <f1> D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py",shape="record"];
	"requests" [label="<f0> Package| <f1> requests",shape="record"];
	"requests.status_codes" [label="<f0> SourceModule| <f1> requests.status_codes",shape="record"];
	"requests.structures" [label="<f0> SourceModule| <f1> requests.structures",shape="record"];
	"requests.compat" [label="<f0> SourceModule| <f1> requests.compat",shape="record"];
	"http.cookies" [label="<f0> SourceModule| <f1> http.cookies",shape="record"];
	"simplejson" [label="<f0> MissingModule| <f1> simplejson",shape="record"];
	"requests.models" [label="<f0> SourceModule| <f1> requests.models",shape="record"];
	"idna" [label="<f0> Package| <f1> idna",shape="record"];
	"idna.package_data" [label="<f0> SourceModule| <f1> idna.package_data",shape="record"];
	"idna.intranges" [label="<f0> SourceModule| <f1> idna.intranges",shape="record"];
	"idna.core" [label="<f0> SourceModule| <f1> idna.core",shape="record"];
	"idna.uts46data" [label="<f0> SourceModule| <f1> idna.uts46data",shape="record"];
	"idna.idnadata" [label="<f0> SourceModule| <f1> idna.idnadata",shape="record"];
	"requests.hooks" [label="<f0> SourceModule| <f1> requests.hooks",shape="record"];
	"requests.cookies" [label="<f0> SourceModule| <f1> requests.cookies",shape="record"];
	"dummy_threading" [label="<f0> MissingModule| <f1> dummy_threading",shape="record"];
	"requests.auth" [label="<f0> SourceModule| <f1> requests.auth",shape="record"];
	"requests._internal_utils" [label="<f0> SourceModule| <f1> requests._internal_utils",shape="record"];
	"urllib3.util" [label="<f0> Package| <f1> urllib3.util",shape="record"];
	"urllib3.util.wait" [label="<f0> SourceModule| <f1> urllib3.util.wait",shape="record"];
	"urllib3.util.url" [label="<f0> SourceModule| <f1> urllib3.util.url",shape="record"];
	"urllib3.util.util" [label="<f0> SourceModule| <f1> urllib3.util.util",shape="record"];
	"urllib3.util.timeout" [label="<f0> SourceModule| <f1> urllib3.util.timeout",shape="record"];
	"urllib3.util.ssl_" [label="<f0> SourceModule| <f1> urllib3.util.ssl_",shape="record"];
	"urllib3.util.ssltransport" [label="<f0> SourceModule| <f1> urllib3.util.ssltransport",shape="record"];
	"urllib3.util.retry" [label="<f0> SourceModule| <f1> urllib3.util.retry",shape="record"];
	"urllib3.response" [label="<f0> SourceModule| <f1> urllib3.response",shape="record"];
	"zstandard" [label="<f0> MissingModule| <f1> zstandard",shape="record"];
	"compression" [label="<f0> MissingModule| <f1> compression",shape="record"];
	"urllib3.connection" [label="<f0> SourceModule| <f1> urllib3.connection",shape="record"];
	"urllib3.util.ssl_match_hostname" [label="<f0> SourceModule| <f1> urllib3.util.ssl_match_hostname",shape="record"];
	"urllib3._version" [label="<f0> SourceModule| <f1> urllib3._version",shape="record"];
	"urllib3.http2.probe" [label="<f0> SourceModule| <f1> urllib3.http2.probe",shape="record"];
	"urllib3.http2" [label="<f0> Package| <f1> urllib3.http2",shape="record"];
	"urllib3.http2.connection" [label="<f0> SourceModule| <f1> urllib3.http2.connection",shape="record"];
	"'h2.events'" [label="<f0> MissingModule| <f1> 'h2.events'",shape="record"];
	"'h2.connection'" [label="<f0> MissingModule| <f1> 'h2.connection'",shape="record"];
	"h2" [label="<f0> MissingModule| <f1> h2",shape="record"];
	"urllib3._collections" [label="<f0> SourceModule| <f1> urllib3._collections",shape="record"];
	"brotli" [label="<f0> MissingModule| <f1> brotli",shape="record"];
	"brotlicffi" [label="<f0> MissingModule| <f1> brotlicffi",shape="record"];
	"urllib3._base_connection" [label="<f0> SourceModule| <f1> urllib3._base_connection",shape="record"];
	"urllib3.connectionpool" [label="<f0> SourceModule| <f1> urllib3.connectionpool",shape="record"];
	"urllib3.util.proxy" [label="<f0> SourceModule| <f1> urllib3.util.proxy",shape="record"];
	"urllib3._request_methods" [label="<f0> SourceModule| <f1> urllib3._request_methods",shape="record"];
	"urllib3.util.response" [label="<f0> SourceModule| <f1> urllib3.util.response",shape="record"];
	"urllib3.util.request" [label="<f0> SourceModule| <f1> urllib3.util.request",shape="record"];
	"urllib3.util.connection" [label="<f0> SourceModule| <f1> urllib3.util.connection",shape="record"];
	"urllib3.filepost" [label="<f0> SourceModule| <f1> urllib3.filepost",shape="record"];
	"urllib3.fields" [label="<f0> SourceModule| <f1> urllib3.fields",shape="record"];
	"requests.api" [label="<f0> SourceModule| <f1> requests.api",shape="record"];
	"requests.sessions" [label="<f0> SourceModule| <f1> requests.sessions",shape="record"];
	"requests.adapters" [label="<f0> SourceModule| <f1> requests.adapters",shape="record"];
	"urllib3.contrib.socks" [label="<f0> SourceModule| <f1> urllib3.contrib.socks",shape="record"];
	"socks" [label="<f0> MissingModule| <f1> socks",shape="record"];
	"urllib3.poolmanager" [label="<f0> SourceModule| <f1> urllib3.poolmanager",shape="record"];
	"requests.__version__" [label="<f0> SourceModule| <f1> requests.__version__",shape="record"];
	"requests.utils" [label="<f0> SourceModule| <f1> requests.utils",shape="record"];
	"requests.certs" [label="<f0> SourceModule| <f1> requests.certs",shape="record"];
	"certifi" [label="<f0> Package| <f1> certifi",shape="record"];
	"certifi.core" [label="<f0> SourceModule| <f1> certifi.core",shape="record"];
	"requests.packages" [label="<f0> SourceModule| <f1> requests.packages",shape="record"];
	"urllib3.exceptions" [label="<f0> SourceModule| <f1> urllib3.exceptions",shape="record"];
	"cryptography" [label="<f0> MissingModule| <f1> cryptography",shape="record"];
	"urllib3.contrib.pyopenssl" [label="<f0> SourceModule| <f1> urllib3.contrib.pyopenssl",shape="record"];
	"'OpenSSL.crypto'" [label="<f0> MissingModule| <f1> 'OpenSSL.crypto'",shape="record"];
	"'cryptography.x509'" [label="<f0> MissingModule| <f1> 'cryptography.x509'",shape="record"];
	"OpenSSL" [label="<f0> MissingModule| <f1> OpenSSL",shape="record"];
	"urllib3.contrib" [label="<f0> Package| <f1> urllib3.contrib",shape="record"];
	"chardet" [label="<f0> MissingModule| <f1> chardet",shape="record"];
	"requests.exceptions" [label="<f0> SourceModule| <f1> requests.exceptions",shape="record"];
	"urllib3" [label="<f0> Package| <f1> urllib3",shape="record"];
	"urllib3.contrib.emscripten" [label="<f0> Package| <f1> urllib3.contrib.emscripten",shape="record"];
	"urllib3.contrib.emscripten.connection" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.connection",shape="record"];
	"urllib3.contrib.emscripten.response" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.response",shape="record"];
	"urllib3.contrib.emscripten.request" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.request",shape="record"];
	"urllib3.contrib.emscripten.fetch" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.fetch",shape="record"];
	"'pyodide.ffi'" [label="<f0> MissingModule| <f1> 'pyodide.ffi'",shape="record"];
	"pyodide" [label="<f0> MissingModule| <f1> pyodide",shape="record"];
	"js" [label="<f0> MissingModule| <f1> js",shape="record"];
	"collections.abc" [label="<f0> SourceModule| <f1> collections.abc",shape="record"];
	"collections" [label="<f0> Package| <f1> collections",shape="record"];
	"locale" [label="<f0> SourceModule| <f1> locale",shape="record"];
	"_locale" [label="<f0> BuiltinModule| <f1> _locale",shape="record"];
	"_weakrefset" [label="<f0> SourceModule| <f1> _weakrefset",shape="record"];
	"_collections_abc" [label="<f0> SourceModule| <f1> _collections_abc",shape="record"];
	"copyreg" [label="<f0> SourceModule| <f1> copyreg",shape="record"];
	"linecache" [label="<f0> SourceModule| <f1> linecache",shape="record"];
	"enum" [label="<f0> SourceModule| <f1> enum",shape="record"];
	"io" [label="<f0> SourceModule| <f1> io",shape="record"];
	"encodings.zlib_codec" [label="<f0> SourceModule| <f1> encodings.zlib_codec",shape="record"];
	"encodings.uu_codec" [label="<f0> SourceModule| <f1> encodings.uu_codec",shape="record"];
	"encodings.utf_8_sig" [label="<f0> SourceModule| <f1> encodings.utf_8_sig",shape="record"];
	"encodings.utf_8" [label="<f0> SourceModule| <f1> encodings.utf_8",shape="record"];
	"encodings.utf_7" [label="<f0> SourceModule| <f1> encodings.utf_7",shape="record"];
	"encodings.utf_32_le" [label="<f0> SourceModule| <f1> encodings.utf_32_le",shape="record"];
	"encodings.utf_32_be" [label="<f0> SourceModule| <f1> encodings.utf_32_be",shape="record"];
	"encodings.utf_32" [label="<f0> SourceModule| <f1> encodings.utf_32",shape="record"];
	"encodings.utf_16_le" [label="<f0> SourceModule| <f1> encodings.utf_16_le",shape="record"];
	"encodings.utf_16_be" [label="<f0> SourceModule| <f1> encodings.utf_16_be",shape="record"];
	"encodings.utf_16" [label="<f0> SourceModule| <f1> encodings.utf_16",shape="record"];
	"encodings.unicode_escape" [label="<f0> SourceModule| <f1> encodings.unicode_escape",shape="record"];
	"encodings.undefined" [label="<f0> SourceModule| <f1> encodings.undefined",shape="record"];
	"encodings.tis_620" [label="<f0> SourceModule| <f1> encodings.tis_620",shape="record"];
	"encodings.shift_jisx0213" [label="<f0> SourceModule| <f1> encodings.shift_jisx0213",shape="record"];
	"_codecs_jp" [label="<f0> BuiltinModule| <f1> _codecs_jp",shape="record"];
	"encodings.shift_jis_2004" [label="<f0> SourceModule| <f1> encodings.shift_jis_2004",shape="record"];
	"encodings.shift_jis" [label="<f0> SourceModule| <f1> encodings.shift_jis",shape="record"];
	"encodings.rot_13" [label="<f0> SourceModule| <f1> encodings.rot_13",shape="record"];
	"encodings.raw_unicode_escape" [label="<f0> SourceModule| <f1> encodings.raw_unicode_escape",shape="record"];
	"encodings.quopri_codec" [label="<f0> SourceModule| <f1> encodings.quopri_codec",shape="record"];
	"encodings.punycode" [label="<f0> SourceModule| <f1> encodings.punycode",shape="record"];
	"encodings.ptcp154" [label="<f0> SourceModule| <f1> encodings.ptcp154",shape="record"];
	"encodings.palmos" [label="<f0> SourceModule| <f1> encodings.palmos",shape="record"];
	"encodings.oem" [label="<f0> SourceModule| <f1> encodings.oem",shape="record"];
	"encodings.mbcs" [label="<f0> SourceModule| <f1> encodings.mbcs",shape="record"];
	"encodings.mac_turkish" [label="<f0> SourceModule| <f1> encodings.mac_turkish",shape="record"];
	"encodings.mac_romanian" [label="<f0> SourceModule| <f1> encodings.mac_romanian",shape="record"];
	"encodings.mac_roman" [label="<f0> SourceModule| <f1> encodings.mac_roman",shape="record"];
	"encodings.mac_latin2" [label="<f0> SourceModule| <f1> encodings.mac_latin2",shape="record"];
	"encodings.mac_iceland" [label="<f0> SourceModule| <f1> encodings.mac_iceland",shape="record"];
	"encodings.mac_greek" [label="<f0> SourceModule| <f1> encodings.mac_greek",shape="record"];
	"encodings.mac_farsi" [label="<f0> SourceModule| <f1> encodings.mac_farsi",shape="record"];
	"encodings.mac_cyrillic" [label="<f0> SourceModule| <f1> encodings.mac_cyrillic",shape="record"];
	"encodings.mac_croatian" [label="<f0> SourceModule| <f1> encodings.mac_croatian",shape="record"];
	"encodings.mac_arabic" [label="<f0> SourceModule| <f1> encodings.mac_arabic",shape="record"];
	"encodings.latin_1" [label="<f0> SourceModule| <f1> encodings.latin_1",shape="record"];
	"encodings.kz1048" [label="<f0> SourceModule| <f1> encodings.kz1048",shape="record"];
	"encodings.koi8_u" [label="<f0> SourceModule| <f1> encodings.koi8_u",shape="record"];
	"encodings.koi8_t" [label="<f0> SourceModule| <f1> encodings.koi8_t",shape="record"];
	"encodings.koi8_r" [label="<f0> SourceModule| <f1> encodings.koi8_r",shape="record"];
	"encodings.johab" [label="<f0> SourceModule| <f1> encodings.johab",shape="record"];
	"_codecs_kr" [label="<f0> BuiltinModule| <f1> _codecs_kr",shape="record"];
	"encodings.iso8859_9" [label="<f0> SourceModule| <f1> encodings.iso8859_9",shape="record"];
	"encodings.iso8859_8" [label="<f0> SourceModule| <f1> encodings.iso8859_8",shape="record"];
	"encodings.iso8859_7" [label="<f0> SourceModule| <f1> encodings.iso8859_7",shape="record"];
	"encodings.iso8859_6" [label="<f0> SourceModule| <f1> encodings.iso8859_6",shape="record"];
	"encodings.iso8859_5" [label="<f0> SourceModule| <f1> encodings.iso8859_5",shape="record"];
	"encodings.iso8859_4" [label="<f0> SourceModule| <f1> encodings.iso8859_4",shape="record"];
	"encodings.iso8859_3" [label="<f0> SourceModule| <f1> encodings.iso8859_3",shape="record"];
	"encodings.iso8859_2" [label="<f0> SourceModule| <f1> encodings.iso8859_2",shape="record"];
	"encodings.iso8859_16" [label="<f0> SourceModule| <f1> encodings.iso8859_16",shape="record"];
	"encodings.iso8859_15" [label="<f0> SourceModule| <f1> encodings.iso8859_15",shape="record"];
	"encodings.iso8859_14" [label="<f0> SourceModule| <f1> encodings.iso8859_14",shape="record"];
	"encodings.iso8859_13" [label="<f0> SourceModule| <f1> encodings.iso8859_13",shape="record"];
	"encodings.iso8859_11" [label="<f0> SourceModule| <f1> encodings.iso8859_11",shape="record"];
	"encodings.iso8859_10" [label="<f0> SourceModule| <f1> encodings.iso8859_10",shape="record"];
	"encodings.iso8859_1" [label="<f0> SourceModule| <f1> encodings.iso8859_1",shape="record"];
	"encodings.iso2022_kr" [label="<f0> SourceModule| <f1> encodings.iso2022_kr",shape="record"];
	"_codecs_iso2022" [label="<f0> BuiltinModule| <f1> _codecs_iso2022",shape="record"];
	"encodings.iso2022_jp_ext" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_ext",shape="record"];
	"encodings.iso2022_jp_3" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_3",shape="record"];
	"encodings.iso2022_jp_2004" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2004",shape="record"];
	"encodings.iso2022_jp_2" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2",shape="record"];
	"encodings.iso2022_jp_1" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_1",shape="record"];
	"encodings.iso2022_jp" [label="<f0> SourceModule| <f1> encodings.iso2022_jp",shape="record"];
	"encodings.idna" [label="<f0> SourceModule| <f1> encodings.idna",shape="record"];
	"stringprep" [label="<f0> SourceModule| <f1> stringprep",shape="record"];
	"encodings.hz" [label="<f0> SourceModule| <f1> encodings.hz",shape="record"];
	"_codecs_cn" [label="<f0> BuiltinModule| <f1> _codecs_cn",shape="record"];
	"encodings.hp_roman8" [label="<f0> SourceModule| <f1> encodings.hp_roman8",shape="record"];
	"encodings.hex_codec" [label="<f0> SourceModule| <f1> encodings.hex_codec",shape="record"];
	"encodings.gbk" [label="<f0> SourceModule| <f1> encodings.gbk",shape="record"];
	"encodings.gb2312" [label="<f0> SourceModule| <f1> encodings.gb2312",shape="record"];
	"encodings.gb18030" [label="<f0> SourceModule| <f1> encodings.gb18030",shape="record"];
	"encodings.euc_kr" [label="<f0> SourceModule| <f1> encodings.euc_kr",shape="record"];
	"encodings.euc_jp" [label="<f0> SourceModule| <f1> encodings.euc_jp",shape="record"];
	"encodings.euc_jisx0213" [label="<f0> SourceModule| <f1> encodings.euc_jisx0213",shape="record"];
	"encodings.euc_jis_2004" [label="<f0> SourceModule| <f1> encodings.euc_jis_2004",shape="record"];
	"encodings.cp950" [label="<f0> SourceModule| <f1> encodings.cp950",shape="record"];
	"_codecs_tw" [label="<f0> BuiltinModule| <f1> _codecs_tw",shape="record"];
	"encodings.cp949" [label="<f0> SourceModule| <f1> encodings.cp949",shape="record"];
	"encodings.cp932" [label="<f0> SourceModule| <f1> encodings.cp932",shape="record"];
	"encodings.cp875" [label="<f0> SourceModule| <f1> encodings.cp875",shape="record"];
	"encodings.cp874" [label="<f0> SourceModule| <f1> encodings.cp874",shape="record"];
	"encodings.cp869" [label="<f0> SourceModule| <f1> encodings.cp869",shape="record"];
	"encodings.cp866" [label="<f0> SourceModule| <f1> encodings.cp866",shape="record"];
	"encodings.cp865" [label="<f0> SourceModule| <f1> encodings.cp865",shape="record"];
	"encodings.cp864" [label="<f0> SourceModule| <f1> encodings.cp864",shape="record"];
	"encodings.cp863" [label="<f0> SourceModule| <f1> encodings.cp863",shape="record"];
	"encodings.cp862" [label="<f0> SourceModule| <f1> encodings.cp862",shape="record"];
	"encodings.cp861" [label="<f0> SourceModule| <f1> encodings.cp861",shape="record"];
	"encodings.cp860" [label="<f0> SourceModule| <f1> encodings.cp860",shape="record"];
	"encodings.cp858" [label="<f0> SourceModule| <f1> encodings.cp858",shape="record"];
	"encodings.cp857" [label="<f0> SourceModule| <f1> encodings.cp857",shape="record"];
	"encodings.cp856" [label="<f0> SourceModule| <f1> encodings.cp856",shape="record"];
	"encodings.cp855" [label="<f0> SourceModule| <f1> encodings.cp855",shape="record"];
	"encodings.cp852" [label="<f0> SourceModule| <f1> encodings.cp852",shape="record"];
	"encodings.cp850" [label="<f0> SourceModule| <f1> encodings.cp850",shape="record"];
	"encodings.cp775" [label="<f0> SourceModule| <f1> encodings.cp775",shape="record"];
	"encodings.cp737" [label="<f0> SourceModule| <f1> encodings.cp737",shape="record"];
	"encodings.cp720" [label="<f0> SourceModule| <f1> encodings.cp720",shape="record"];
	"encodings.cp500" [label="<f0> SourceModule| <f1> encodings.cp500",shape="record"];
	"encodings.cp437" [label="<f0> SourceModule| <f1> encodings.cp437",shape="record"];
	"encodings.cp424" [label="<f0> SourceModule| <f1> encodings.cp424",shape="record"];
	"encodings.cp273" [label="<f0> SourceModule| <f1> encodings.cp273",shape="record"];
	"encodings.cp1258" [label="<f0> SourceModule| <f1> encodings.cp1258",shape="record"];
	"encodings.cp1257" [label="<f0> SourceModule| <f1> encodings.cp1257",shape="record"];
	"encodings.cp1256" [label="<f0> SourceModule| <f1> encodings.cp1256",shape="record"];
	"encodings.cp1255" [label="<f0> SourceModule| <f1> encodings.cp1255",shape="record"];
	"encodings.cp1254" [label="<f0> SourceModule| <f1> encodings.cp1254",shape="record"];
	"encodings.cp1253" [label="<f0> SourceModule| <f1> encodings.cp1253",shape="record"];
	"encodings.cp1252" [label="<f0> SourceModule| <f1> encodings.cp1252",shape="record"];
	"encodings.cp1251" [label="<f0> SourceModule| <f1> encodings.cp1251",shape="record"];
	"encodings.cp1250" [label="<f0> SourceModule| <f1> encodings.cp1250",shape="record"];
	"encodings.cp1140" [label="<f0> SourceModule| <f1> encodings.cp1140",shape="record"];
	"encodings.cp1125" [label="<f0> SourceModule| <f1> encodings.cp1125",shape="record"];
	"encodings.cp1026" [label="<f0> SourceModule| <f1> encodings.cp1026",shape="record"];
	"encodings.cp1006" [label="<f0> SourceModule| <f1> encodings.cp1006",shape="record"];
	"encodings.cp037" [label="<f0> SourceModule| <f1> encodings.cp037",shape="record"];
	"encodings.charmap" [label="<f0> SourceModule| <f1> encodings.charmap",shape="record"];
	"encodings.bz2_codec" [label="<f0> SourceModule| <f1> encodings.bz2_codec",shape="record"];
	"encodings.big5hkscs" [label="<f0> SourceModule| <f1> encodings.big5hkscs",shape="record"];
	"_codecs_hk" [label="<f0> BuiltinModule| <f1> _codecs_hk",shape="record"];
	"encodings.big5" [label="<f0> SourceModule| <f1> encodings.big5",shape="record"];
	"encodings.base64_codec" [label="<f0> SourceModule| <f1> encodings.base64_codec",shape="record"];
	"encodings.ascii" [label="<f0> SourceModule| <f1> encodings.ascii",shape="record"];
	"encodings.aliases" [label="<f0> SourceModule| <f1> encodings.aliases",shape="record"];
	"encodings" [label="<f0> Package| <f1> encodings",shape="record"];
	"reprlib" [label="<f0> SourceModule| <f1> reprlib",shape="record"];
	"genericpath" [label="<f0> SourceModule| <f1> genericpath",shape="record"];
	"types" [label="<f0> SourceModule| <f1> types",shape="record"];
	"stat" [label="<f0> SourceModule| <f1> stat",shape="record"];
	"_stat" [label="<f0> BuiltinModule| <f1> _stat",shape="record"];
	"traceback" [label="<f0> SourceModule| <f1> traceback",shape="record"];
	"sre_constants" [label="<f0> SourceModule| <f1> sre_constants",shape="record"];
	"posixpath" [label="<f0> SourceModule| <f1> posixpath",shape="record"];
	"operator" [label="<f0> SourceModule| <f1> operator",shape="record"];
	"warnings" [label="<f0> SourceModule| <f1> warnings",shape="record"];
	"abc" [label="<f0> SourceModule| <f1> abc",shape="record"];
	"_py_abc" [label="<f0> SourceModule| <f1> _py_abc",shape="record"];
	"_abc" [label="<f0> BuiltinModule| <f1> _abc",shape="record"];
	"keyword" [label="<f0> SourceModule| <f1> keyword",shape="record"];
	"functools" [label="<f0> SourceModule| <f1> functools",shape="record"];
	"_functools" [label="<f0> BuiltinModule| <f1> _functools",shape="record"];
	"sre_parse" [label="<f0> SourceModule| <f1> sre_parse",shape="record"];
	"heapq" [label="<f0> SourceModule| <f1> heapq",shape="record"];
	"_heapq" [label="<f0> BuiltinModule| <f1> _heapq",shape="record"];
	"weakref" [label="<f0> SourceModule| <f1> weakref",shape="record"];
	"os" [label="<f0> SourceModule| <f1> os",shape="record"];
	"re._parser" [label="<f0> SourceModule| <f1> re._parser",shape="record"];
	"re._constants" [label="<f0> SourceModule| <f1> re._constants",shape="record"];
	"re._compiler" [label="<f0> SourceModule| <f1> re._compiler",shape="record"];
	"re._casefix" [label="<f0> SourceModule| <f1> re._casefix",shape="record"];
	"re" [label="<f0> Package| <f1> re",shape="record"];
	"sre_compile" [label="<f0> SourceModule| <f1> sre_compile",shape="record"];
	"_posixsubprocess" [label="<f0> MissingModule| <f1> _posixsubprocess",shape="record"];
	"datetime" [label="<f0> SourceModule| <f1> datetime",shape="record"];
	"_pydatetime" [label="<f0> SourceModule| <f1> _pydatetime",shape="record"];
	"_strptime" [label="<f0> SourceModule| <f1> _strptime",shape="record"];
	"_datetime" [label="<f0> BuiltinModule| <f1> _datetime",shape="record"];
	"_pickle" [label="<f0> BuiltinModule| <f1> _pickle",shape="record"];
	"ntpath" [label="<f0> SourceModule| <f1> ntpath",shape="record"];
	"posix" [label="<f0> MissingModule| <f1> posix",shape="record"];
	"_sre" [label="<f0> BuiltinModule| <f1> _sre",shape="record"];
	"codecs" [label="<f0> SourceModule| <f1> codecs",shape="record"];
	"_codecs" [label="<f0> BuiltinModule| <f1> _codecs",shape="record"];
	"time" [label="<f0> BuiltinModule| <f1> time",shape="record"];
	"gc" [label="<f0> BuiltinModule| <f1> gc",shape="record"];
	subgraph "cluster_setuptools._vendor.wheel" {
		label="setuptools._vendor.wheel";
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.wheelfile" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.macosx_libfile" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.cli" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.util" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.metadata" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.vendored" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.list" {
		label="pandas.tests.extension.list";
		"pandas.tests.extension.list" -> "pandas.tests.extension.list.array" [style="dotted"];
		"pandas.tests.extension.list" -> "pandas.tests.extension.list.test_list" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.xml" {
		label="pandas.tests.io.xml";
		"pandas.tests.io.xml" -> "pandas.tests.io.xml.conftest" [style="dotted"];
		"pandas.tests.io.xml" -> "pandas.tests.io.xml.test_to_xml" [style="dotted"];
		"pandas.tests.io.xml" -> "pandas.tests.io.xml.test_xml" [style="dotted"];
		"pandas.tests.io.xml" -> "pandas.tests.io.xml.test_xml_dtypes" [style="dotted"];
	}
	subgraph "cluster_openpyxl.workbook" {
		label="openpyxl.workbook";
		"openpyxl.workbook" -> "openpyxl.workbook.workbook" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.child" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.defined_name" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.external_link" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.external_reference" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.function_group" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.properties" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.protection" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.smart_tags" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.views" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook.web" [style="dotted"];
		"openpyxl.workbook" -> "openpyxl.workbook._writer" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.America.Indiana" {
		label="tzdata.zoneinfo.America.Indiana";
	}
	subgraph "cluster_numpy.polynomial" {
		label="numpy.polynomial";
		"numpy.polynomial" -> "numpy.polynomial.polyutils" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.chebyshev" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite_e" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.laguerre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.legendre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.polynomial" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial._polybase" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.tests" [style="dotted"];
	}
	subgraph "cluster_numpy.lib.tests" {
		label="numpy.lib.tests";
		"numpy.lib.tests" -> "numpy.lib.tests.test__datasource" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test__iotools" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test__version" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_array_utils" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_arraypad" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_arraysetops" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_arrayterator" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_format" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_function_base" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_histograms" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_index_tricks" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_io" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_loadtxt" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_mixins" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_nanfunctions" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_packbits" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_polynomial" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_recfunctions" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_regression" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_shape_base" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_stride_tricks" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_twodim_base" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_type_check" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_ufunclike" [style="dotted"];
		"numpy.lib.tests" -> "numpy.lib.tests.test_utils" [style="dotted"];
	}
	subgraph "cluster_setuptools.command" {
		label="setuptools.command";
		"setuptools.command" -> "setuptools.command.bdist_egg" [style="dotted"];
		"setuptools.command" -> "setuptools.command._requirestxt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.bdist_wheel" [style="dotted"];
		"setuptools.command" -> "setuptools.command.egg_info" [style="dotted"];
		"setuptools.command" -> "setuptools.command.sdist" [style="dotted"];
		"setuptools.command" -> "setuptools.command.setopt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.build" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.sparse" {
		label="pandas.tests.arrays.sparse";
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_accessor" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_arithmetics" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_array" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_astype" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_combine_concat" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_constructors" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_dtype" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_indexing" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_libsparse" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_reductions" [style="dotted"];
		"pandas.tests.arrays.sparse" -> "pandas.tests.arrays.sparse.test_unary" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.apply" {
		label="pandas.tests.apply";
		"pandas.tests.apply" -> "pandas.tests.apply.common" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_frame_apply" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_frame_apply_relabeling" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_frame_transform" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_invalid_arg" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_numba" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_series_apply" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_series_apply_relabeling" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_series_transform" [style="dotted"];
		"pandas.tests.apply" -> "pandas.tests.apply.test_str" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.backports" {
		label="setuptools._vendor.backports";
		"setuptools._vendor.backports" -> "setuptools._vendor.backports.tarfile" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.json" {
		label="pandas.tests.extension.json";
		"pandas.tests.extension.json" -> "pandas.tests.extension.json.array" [style="dotted"];
		"pandas.tests.extension.json" -> "pandas.tests.extension.json.test_json" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.frame.methods" {
		label="pandas.tests.frame.methods";
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_add_prefix_suffix" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_align" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_asfreq" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_asof" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_assign" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_astype" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_at_time" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_between_time" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_clip" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_combine" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_combine_first" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_compare" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_convert_dtypes" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_copy" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_count" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_cov_corr" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_describe" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_diff" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_dot" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_drop" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_drop_duplicates" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_droplevel" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_dropna" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_dtypes" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_duplicated" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_equals" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_explode" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_fillna" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_filter" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_first_and_last" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_first_valid_index" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_get_numeric_data" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_head_tail" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_infer_objects" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_info" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_interpolate" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_is_homogeneous_dtype" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_isetitem" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_isin" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_iterrows" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_join" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_map" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_matmul" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_nlargest" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_pct_change" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_pipe" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_pop" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_quantile" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_rank" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_reindex" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_reindex_like" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_rename" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_rename_axis" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_reorder_levels" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_replace" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_reset_index" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_round" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_sample" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_select_dtypes" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_set_axis" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_set_index" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_shift" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_size" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_sort_index" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_sort_values" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_swapaxes" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_swaplevel" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_csv" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_dict" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_dict_of_blocks" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_numpy" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_period" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_records" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_to_timestamp" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_transpose" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_truncate" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_tz_convert" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_tz_localize" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_update" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_value_counts" [style="dotted"];
		"pandas.tests.frame.methods" -> "pandas.tests.frame.methods.test_values" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.groupby.methods" {
		label="pandas.tests.groupby.methods";
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_corrwith" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_describe" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_groupby_shift_diff" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_is_monotonic" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_nlargest_nsmallest" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_nth" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_quantile" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_rank" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_sample" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_size" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_skew" [style="dotted"];
		"pandas.tests.groupby.methods" -> "pandas.tests.groupby.methods.test_value_counts" [style="dotted"];
	}
	subgraph "cluster_openpyxl.chartsheet" {
		label="openpyxl.chartsheet";
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.chartsheet" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.relation" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.properties" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.protection" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.views" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.custom" [style="dotted"];
		"openpyxl.chartsheet" -> "openpyxl.chartsheet.publish" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.parser" {
		label="pandas.tests.io.parser";
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.conftest" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_c_parser_only" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_comment" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_compression" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_concatenate_chunks" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_converters" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_dialect" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_encoding" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_header" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_index_col" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_mangle_dupes" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_multi_thread" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_na_values" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_network" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_parse_dates" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_python_parser_only" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_quoting" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_read_fwf" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_skiprows" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_textreader" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_unsupported" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.test_upcast" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.usecols" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.dtypes" [style="dotted"];
		"pandas.tests.io.parser" -> "pandas.tests.io.parser.common" [style="dotted"];
	}
	subgraph "cluster_xml" {
		label="xml";
		"xml" -> "xml.parsers" [style="dotted"];
		"xml" -> "xml.sax" [style="dotted"];
		"xml" -> "xml.etree" [style="dotted"];
		"xml" -> "xml.dom" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.excel" {
		label="pandas.tests.io.excel";
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_odf" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_odswriter" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_openpyxl" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_readers" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_style" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_writers" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_xlrd" [style="dotted"];
		"pandas.tests.io.excel" -> "pandas.tests.io.excel.test_xlsxwriter" [style="dotted"];
	}
	subgraph "cluster__distutils_hack" {
		label="_distutils_hack";
		"_distutils_hack" -> "_distutils_hack.override" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib.emscripten" {
		label="urllib3.contrib.emscripten";
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.connection" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.fetch" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.request" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.response" [style="dotted"];
	}
	subgraph "cluster_packaging.licenses" {
		label="packaging.licenses";
		"packaging.licenses" -> "packaging.licenses._spdx" [style="dotted"];
	}
	subgraph "cluster_urllib" {
		label="urllib";
		"urllib" -> "urllib.parse" [style="dotted"];
		"urllib" -> "urllib.request" [style="dotted"];
		"urllib" -> "urllib.error" [style="dotted"];
		"urllib" -> "urllib.response" [style="dotted"];
		"urllib" -> "urllib3" [style="dotted"];
	}
	subgraph "cluster_openpyxl" {
		label="openpyxl";
		"openpyxl" -> "openpyxl.xml" [style="dotted"];
		"openpyxl" -> "openpyxl.workbook" [style="dotted"];
		"openpyxl" -> "openpyxl._constants" [style="dotted"];
		"openpyxl" -> "openpyxl.worksheet" [style="dotted"];
		"openpyxl" -> "openpyxl.compat" [style="dotted"];
		"openpyxl" -> "openpyxl.reader" [style="dotted"];
		"openpyxl" -> "openpyxl.tests" [style="dotted"];
		"openpyxl" -> "openpyxl.chart" [style="dotted"];
		"openpyxl" -> "openpyxl.utils" [style="dotted"];
		"openpyxl" -> "openpyxl.formula" [style="dotted"];
		"openpyxl" -> "openpyxl.styles" [style="dotted"];
		"openpyxl" -> "openpyxl.formatting" [style="dotted"];
		"openpyxl" -> "openpyxl.drawing" [style="dotted"];
		"openpyxl" -> "openpyxl.chartsheet" [style="dotted"];
		"openpyxl" -> "openpyxl.packaging" [style="dotted"];
		"openpyxl" -> "openpyxl.pivot" [style="dotted"];
		"openpyxl" -> "openpyxl.comments" [style="dotted"];
		"openpyxl" -> "openpyxl.cell" [style="dotted"];
		"openpyxl" -> "openpyxl.writer" [style="dotted"];
		"openpyxl" -> "openpyxl.descriptors" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.masked" {
		label="pandas.tests.arrays.masked";
		"pandas.tests.arrays.masked" -> "pandas.tests.arrays.masked.test_arithmetic" [style="dotted"];
		"pandas.tests.arrays.masked" -> "pandas.tests.arrays.masked.test_arrow_compat" [style="dotted"];
		"pandas.tests.arrays.masked" -> "pandas.tests.arrays.masked.test_function" [style="dotted"];
		"pandas.tests.arrays.masked" -> "pandas.tests.arrays.masked.test_indexing" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.utils.hooks" {
		label="PyInstaller.utils.hooks";
		"PyInstaller.utils.hooks" -> "PyInstaller.utils.hooks.conda" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.internals" {
		label="pandas.tests.internals";
		"pandas.tests.internals" -> "pandas.tests.internals.test_api" [style="dotted"];
		"pandas.tests.internals" -> "pandas.tests.internals.test_internals" [style="dotted"];
		"pandas.tests.internals" -> "pandas.tests.internals.test_managers" [style="dotted"];
	}
	subgraph "cluster_pandas.io" {
		label="pandas.io";
		"pandas.io" -> "pandas.io.formats" [style="dotted"];
		"pandas.io" -> "pandas.io.json" [style="dotted"];
		"pandas.io" -> "pandas.io.stata" [style="dotted"];
		"pandas.io" -> "pandas.io.pytables" [style="dotted"];
		"pandas.io" -> "pandas.io.sql" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboards" [style="dotted"];
		"pandas.io" -> "pandas.io.gbq" [style="dotted"];
		"pandas.io" -> "pandas.io.api" [style="dotted"];
		"pandas.io" -> "pandas.io.common" [style="dotted"];
		"pandas.io" -> "pandas.io._util" [style="dotted"];
		"pandas.io" -> "pandas.io.excel" [style="dotted"];
		"pandas.io" -> "pandas.io.parsers" [style="dotted"];
		"pandas.io" -> "pandas.io.pickle" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboard" [style="dotted"];
		"pandas.io" -> "pandas.io.feather_format" [style="dotted"];
		"pandas.io" -> "pandas.io.parquet" [style="dotted"];
		"pandas.io" -> "pandas.io.orc" [style="dotted"];
		"pandas.io" -> "pandas.io.xml" [style="dotted"];
		"pandas.io" -> "pandas.io.sas" [style="dotted"];
		"pandas.io" -> "pandas.io.html" [style="dotted"];
		"pandas.io" -> "pandas.io.spss" [style="dotted"];
	}
	subgraph "cluster_ordlookup" {
		label="ordlookup";
		"ordlookup" -> "ordlookup.ws2_32" [style="dotted"];
		"ordlookup" -> "ordlookup.oleaut32" [style="dotted"];
	}
	subgraph "cluster_PyInstaller" {
		label="PyInstaller";
		"PyInstaller" -> "PyInstaller.compat" [style="dotted"];
		"PyInstaller" -> "PyInstaller.log" [style="dotted"];
		"PyInstaller" -> "PyInstaller.isolated" [style="dotted"];
		"PyInstaller" -> "PyInstaller.config" [style="dotted"];
		"PyInstaller" -> "PyInstaller.utils" [style="dotted"];
		"PyInstaller" -> "PyInstaller.depend" [style="dotted"];
		"PyInstaller" -> "PyInstaller.lib" [style="dotted"];
		"PyInstaller" -> "PyInstaller.exceptions" [style="dotted"];
		"PyInstaller" -> "PyInstaller.building" [style="dotted"];
		"PyInstaller" -> "PyInstaller._shared_with_waf" [style="dotted"];
	}
	subgraph "cluster_win32ctypes.core.ctypes" {
		label="win32ctypes.core.ctypes";
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._authentication" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._common" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._dll" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._nl_support" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._resource" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._system_information" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._time" [style="dotted"];
		"win32ctypes.core.ctypes" -> "win32ctypes.core.ctypes._util" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Chile" {
		label="tzdata.zoneinfo.Chile";
	}
	subgraph "cluster_pandas.core.interchange" {
		label="pandas.core.interchange";
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe_protocol" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.column" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.utils" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.buffer" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.from_dataframe" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.frame.indexing" {
		label="pandas.tests.frame.indexing";
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_coercion" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_delitem" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_get" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_get_value" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_getitem" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_indexing" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_insert" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_mask" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_set_value" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_setitem" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_take" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_where" [style="dotted"];
		"pandas.tests.frame.indexing" -> "pandas.tests.frame.indexing.test_xs" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Arctic" {
		label="tzdata.zoneinfo.Arctic";
	}
	subgraph "cluster_setuptools._vendor.backports.tarfile" {
		label="setuptools._vendor.backports.tarfile";
		"setuptools._vendor.backports.tarfile" -> "setuptools._vendor.backports.tarfile.compat" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Atlantic" {
		label="tzdata.zoneinfo.Atlantic";
	}
	subgraph "cluster_tzdata.zoneinfo.America.Kentucky" {
		label="tzdata.zoneinfo.America.Kentucky";
	}
	subgraph "cluster_pandas.tests.indexes.object" {
		label="pandas.tests.indexes.object";
		"pandas.tests.indexes.object" -> "pandas.tests.indexes.object.test_astype" [style="dotted"];
		"pandas.tests.indexes.object" -> "pandas.tests.indexes.object.test_indexing" [style="dotted"];
	}
	subgraph "cluster_pandas.plotting" {
		label="pandas.plotting";
		"pandas.plotting" -> "pandas.plotting._core" [style="dotted"];
		"pandas.plotting" -> "pandas.plotting._misc" [style="dotted"];
		"pandas.plotting" -> "pandas.plotting._matplotlib" [style="dotted"];
	}
	subgraph "cluster_numpy" {
		label="numpy";
		"numpy" -> "numpy.version" [style="dotted"];
		"numpy" -> "numpy._expired_attrs_2_0" [style="dotted"];
		"numpy" -> "numpy._globals" [style="dotted"];
		"numpy" -> "numpy._distributor_init_local" [style="dotted"];
		"numpy" -> "numpy._distributor_init" [style="dotted"];
		"numpy" -> "numpy.__config__" [style="dotted"];
		"numpy" -> "numpy._core" [style="dotted"];
		"numpy" -> "numpy.lib" [style="dotted"];
		"numpy" -> "numpy.matrixlib" [style="dotted"];
		"numpy" -> "numpy._array_api_info" [style="dotted"];
		"numpy" -> "numpy.linalg" [style="dotted"];
		"numpy" -> "numpy.fft" [style="dotted"];
		"numpy" -> "numpy.dtypes" [style="dotted"];
		"numpy" -> "numpy.random" [style="dotted"];
		"numpy" -> "numpy.polynomial" [style="dotted"];
		"numpy" -> "numpy.ma" [style="dotted"];
		"numpy" -> "numpy.ctypeslib" [style="dotted"];
		"numpy" -> "numpy.exceptions" [style="dotted"];
		"numpy" -> "numpy.testing" [style="dotted"];
		"numpy" -> "numpy.matlib" [style="dotted"];
		"numpy" -> "numpy.f2py" [style="dotted"];
		"numpy" -> "numpy.typing" [style="dotted"];
		"numpy" -> "numpy.rec" [style="dotted"];
		"numpy" -> "numpy.char" [style="dotted"];
		"numpy" -> "numpy.core" [style="dotted"];
		"numpy" -> "numpy.strings" [style="dotted"];
		"numpy" -> "numpy._pytesttester" [style="dotted"];
		"numpy" -> "numpy._configtool" [style="dotted"];
		"numpy" -> "numpy.conftest" [style="dotted"];
		"numpy" -> "numpy._utils" [style="dotted"];
		"numpy" -> "numpy._typing" [style="dotted"];
		"numpy" -> "numpy.tests" [style="dotted"];
		"numpy" -> "numpy._pyinstaller" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.backports.tarfile.compat" {
		label="setuptools._vendor.backports.tarfile.compat";
		"setuptools._vendor.backports.tarfile.compat" -> "setuptools._vendor.backports.tarfile.compat.py38" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tslibs" {
		label="pandas.tests.tslibs";
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_api" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_array_to_datetime" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_ccalendar" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_conversion" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_fields" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_libfrequencies" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_liboffsets" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_np_datetime" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_npy_units" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_parse_iso8601" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_parsing" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_period" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_resolution" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_strptime" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_timedeltas" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_timezones" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_to_offset" [style="dotted"];
		"pandas.tests.tslibs" -> "pandas.tests.tslibs.test_tzconversion" [style="dotted"];
	}
	subgraph "cluster_dateutil.tz" {
		label="dateutil.tz";
		"dateutil.tz" -> "dateutil.tz.tzfile" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.tz" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._common" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._factories" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.win" [style="dotted"];
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
		"unittest" -> "unittest.async_case" [style="dotted"];
		"unittest" -> "unittest.mock" [style="dotted"];
		"unittest" -> "unittest._log" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.pytables" {
		label="pandas.tests.io.pytables";
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.common" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.conftest" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_append" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_categorical" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_compat" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_complex" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_errors" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_file_handling" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_keys" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_put" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_pytables_missing" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_read" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_retain_attributes" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_round_trip" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_select" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_store" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_subclass" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_time_series" [style="dotted"];
		"pandas.tests.io.pytables" -> "pandas.tests.io.pytables.test_timezones" [style="dotted"];
	}
	subgraph "cluster_pandas.io.parsers" {
		label="pandas.io.parsers";
		"pandas.io.parsers" -> "pandas.io.parsers.readers" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.arrow_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.base_parser" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.c_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.python_parser" [style="dotted"];
	}
	subgraph "cluster_numpy.testing.tests" {
		label="numpy.testing.tests";
		"numpy.testing.tests" -> "numpy.testing.tests.test_utils" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tools" {
		label="pandas.tests.tools";
		"pandas.tests.tools" -> "pandas.tests.tools.test_to_datetime" [style="dotted"];
		"pandas.tests.tools" -> "pandas.tests.tools.test_to_numeric" [style="dotted"];
		"pandas.tests.tools" -> "pandas.tests.tools.test_to_time" [style="dotted"];
		"pandas.tests.tools" -> "pandas.tests.tools.test_to_timedelta" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco.text" {
		label="setuptools._vendor.jaraco.text";
	}
	subgraph "cluster_setuptools._vendor.importlib_metadata.compat" {
		label="setuptools._vendor.importlib_metadata.compat";
		"setuptools._vendor.importlib_metadata.compat" -> "setuptools._vendor.importlib_metadata.compat.py39" [style="dotted"];
		"setuptools._vendor.importlib_metadata.compat" -> "setuptools._vendor.importlib_metadata.compat.py311" [style="dotted"];
	}
	subgraph "cluster_openpyxl.formula" {
		label="openpyxl.formula";
		"openpyxl.formula" -> "openpyxl.formula.tokenizer" [style="dotted"];
		"openpyxl.formula" -> "openpyxl.formula.translate" [style="dotted"];
	}
	subgraph "cluster_pandas.plotting._matplotlib" {
		label="pandas.plotting._matplotlib";
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.tools" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.boxplot" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.converter" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.core" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.hist" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.misc" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.style" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.groupby" [style="dotted"];
		"pandas.plotting._matplotlib" -> "pandas.plotting._matplotlib.timeseries" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.parser.common" {
		label="pandas.tests.io.parser.common";
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_chunksize" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_common_basic" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_data_list" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_decimal" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_file_buffer_url" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_float" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_index" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_inf" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_ints" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_iterator" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_read_errors" [style="dotted"];
		"pandas.tests.io.parser.common" -> "pandas.tests.io.parser.common.test_verbose" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.vendored.packaging" {
		label="setuptools._vendor.wheel.vendored.packaging";
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._manylinux" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._musllinux" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.tags" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._elffile" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.requirements" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._parser" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._tokenizer" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.markers" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.utils" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.version" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._structures" [style="dotted"];
	}
	subgraph "cluster_numpy.typing.tests" {
		label="numpy.typing.tests";
		"numpy.typing.tests" -> "numpy.typing.tests.test_isfile" [style="dotted"];
		"numpy.typing.tests" -> "numpy.typing.tests.test_runtime" [style="dotted"];
		"numpy.typing.tests" -> "numpy.typing.tests.test_typing" [style="dotted"];
	}
	subgraph "cluster_idna" {
		label="idna";
		"idna" -> "idna.idnadata" [style="dotted"];
		"idna" -> "idna.core" [style="dotted"];
		"idna" -> "idna.intranges" [style="dotted"];
		"idna" -> "idna.package_data" [style="dotted"];
		"idna" -> "idna.uts46data" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.groupby.aggregate" {
		label="pandas.tests.groupby.aggregate";
		"pandas.tests.groupby.aggregate" -> "pandas.tests.groupby.aggregate.test_aggregate" [style="dotted"];
		"pandas.tests.groupby.aggregate" -> "pandas.tests.groupby.aggregate.test_cython" [style="dotted"];
		"pandas.tests.groupby.aggregate" -> "pandas.tests.groupby.aggregate.test_numba" [style="dotted"];
		"pandas.tests.groupby.aggregate" -> "pandas.tests.groupby.aggregate.test_other" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Canada" {
		label="tzdata.zoneinfo.Canada";
	}
	subgraph "cluster_pandas.tests.indexing.multiindex" {
		label="pandas.tests.indexing.multiindex";
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_chaining_and_caching" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_datetime" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_getitem" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_iloc" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_indexing_slow" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_loc" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_multiindex" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_partial" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_setitem" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_slice" [style="dotted"];
		"pandas.tests.indexing.multiindex" -> "pandas.tests.indexing.multiindex.test_sorted" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.sparse" {
		label="pandas.core.arrays.sparse";
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.accessor" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.array" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.scipy_sparse" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.timedeltas" {
		label="pandas.tests.arrays.timedeltas";
		"pandas.tests.arrays.timedeltas" -> "pandas.tests.arrays.timedeltas.test_constructors" [style="dotted"];
		"pandas.tests.arrays.timedeltas" -> "pandas.tests.arrays.timedeltas.test_cumulative" [style="dotted"];
		"pandas.tests.arrays.timedeltas" -> "pandas.tests.arrays.timedeltas.test_reductions" [style="dotted"];
	}
	subgraph "cluster_pandas.core.util" {
		label="pandas.core.util";
		"pandas.core.util" -> "pandas.core.util.hashing" [style="dotted"];
		"pandas.core.util" -> "pandas.core.util.numba_" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.lib" {
		label="PyInstaller.lib";
		"PyInstaller.lib" -> "PyInstaller.lib.modulegraph" [style="dotted"];
	}
	subgraph "cluster_pandas.compat" {
		label="pandas.compat";
		"pandas.compat" -> "pandas.compat._constants" [style="dotted"];
		"pandas.compat" -> "pandas.compat.compressors" [style="dotted"];
		"pandas.compat" -> "pandas.compat.numpy" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pyarrow" [style="dotted"];
		"pandas.compat" -> "pandas.compat._optional" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pickle_compat" [style="dotted"];
	}
	subgraph "cluster_openpyxl.packaging" {
		label="openpyxl.packaging";
		"openpyxl.packaging" -> "openpyxl.packaging.interface" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.core" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.custom" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.manifest" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.relationship" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.workbook" [style="dotted"];
		"openpyxl.packaging" -> "openpyxl.packaging.extended" [style="dotted"];
	}
	subgraph "cluster_pandas" {
		label="pandas";
		"pandas" -> "pandas.compat" [style="dotted"];
		"pandas" -> "pandas._config" [style="dotted"];
		"pandas" -> "pandas.tseries" [style="dotted"];
		"pandas" -> "pandas.api" [style="dotted"];
		"pandas" -> "pandas.arrays" [style="dotted"];
		"pandas" -> "pandas.errors" [style="dotted"];
		"pandas" -> "pandas.io" [style="dotted"];
		"pandas" -> "pandas.plotting" [style="dotted"];
		"pandas" -> "pandas.testing" [style="dotted"];
		"pandas" -> "pandas._version_meson" [style="dotted"];
		"pandas" -> "pandas._version" [style="dotted"];
		"pandas" -> "pandas._libs" [style="dotted"];
		"pandas" -> "pandas.conftest" [style="dotted"];
		"pandas" -> "pandas.core" [style="dotted"];
		"pandas" -> "pandas.util" [style="dotted"];
		"pandas" -> "pandas._typing" [style="dotted"];
		"pandas" -> "pandas._testing" [style="dotted"];
		"pandas" -> "pandas.tests" [style="dotted"];
	}
	subgraph "cluster_importlib.resources" {
		label="importlib.resources";
		"importlib.resources" -> "importlib.resources._common" [style="dotted"];
		"importlib.resources" -> "importlib.resources._legacy" [style="dotted"];
		"importlib.resources" -> "importlib.resources.abc" [style="dotted"];
		"importlib.resources" -> "importlib.resources._adapters" [style="dotted"];
		"importlib.resources" -> "importlib.resources.readers" [style="dotted"];
		"importlib.resources" -> "importlib.resources._itertools" [style="dotted"];
	}
	subgraph "cluster_pandas._testing" {
		label="pandas._testing";
		"pandas._testing" -> "pandas._testing._io" [style="dotted"];
		"pandas._testing" -> "pandas._testing._warnings" [style="dotted"];
		"pandas._testing" -> "pandas._testing.asserters" [style="dotted"];
		"pandas._testing" -> "pandas._testing.compat" [style="dotted"];
		"pandas._testing" -> "pandas._testing.contexts" [style="dotted"];
		"pandas._testing" -> "pandas._testing._hypothesis" [style="dotted"];
	}
	subgraph "cluster_numpy.ma.tests" {
		label="numpy.ma.tests";
		"numpy.ma.tests" -> "numpy.ma.tests.test_arrayobject" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_core" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_deprecations" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_extras" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_mrecords" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_old_ma" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_regression" [style="dotted"];
		"numpy.ma.tests" -> "numpy.ma.tests.test_subclassing" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Africa" {
		label="tzdata.zoneinfo.Africa";
	}
	subgraph "cluster_email" {
		label="email";
		"email" -> "email.errors" [style="dotted"];
		"email" -> "email.charset" [style="dotted"];
		"email" -> "email.header" [style="dotted"];
		"email" -> "email._header_value_parser" [style="dotted"];
		"email" -> "email.parser" [style="dotted"];
		"email" -> "email.message" [style="dotted"];
		"email" -> "email.utils" [style="dotted"];
		"email" -> "email._policybase" [style="dotted"];
		"email" -> "email._encoded_words" [style="dotted"];
		"email" -> "email.generator" [style="dotted"];
		"email" -> "email.iterators" [style="dotted"];
		"email" -> "email.policy" [style="dotted"];
		"email" -> "email.headerregistry" [style="dotted"];
		"email" -> "email.contentmanager" [style="dotted"];
		"email" -> "email.quoprimime" [style="dotted"];
		"email" -> "email.base64mime" [style="dotted"];
		"email" -> "email.encoders" [style="dotted"];
		"email" -> "email._parseaddr" [style="dotted"];
		"email" -> "email.feedparser" [style="dotted"];
	}
	subgraph "cluster_multiprocessing" {
		label="multiprocessing";
		"multiprocessing" -> "multiprocessing.process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.util" [style="dotted"];
		"multiprocessing" -> "multiprocessing.AuthenticationError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.BufferTooShort" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_sharer" [style="dotted"];
		"multiprocessing" -> "multiprocessing.connection" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.set_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_tracker" [style="dotted"];
		"multiprocessing" -> "multiprocessing.spawn" [style="dotted"];
		"multiprocessing" -> "multiprocessing.forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.reduction" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.TimeoutError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.shared_memory" [style="dotted"];
		"multiprocessing" -> "multiprocessing.context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Value" [style="dotted"];
		"multiprocessing" -> "multiprocessing.queues" [style="dotted"];
		"multiprocessing" -> "multiprocessing.synchronize" [style="dotted"];
		"multiprocessing" -> "multiprocessing.heap" [style="dotted"];
		"multiprocessing" -> "multiprocessing.managers" [style="dotted"];
		"multiprocessing" -> "multiprocessing.sharedctypes" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_fork" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_posix" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_win32" [style="dotted"];
		"multiprocessing" -> "multiprocessing.dummy" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.computation" {
		label="pandas.tests.computation";
		"pandas.tests.computation" -> "pandas.tests.computation.test_compat" [style="dotted"];
		"pandas.tests.computation" -> "pandas.tests.computation.test_eval" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.base" {
		label="pandas.tests.base";
		"pandas.tests.base" -> "pandas.tests.base.common" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_constructors" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_conversion" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_fillna" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_misc" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_transpose" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_unique" [style="dotted"];
		"pandas.tests.base" -> "pandas.tests.base.test_value_counts" [style="dotted"];
	}
	subgraph "cluster_importlib" {
		label="importlib";
		"importlib" -> "importlib._bootstrap" [style="dotted"];
		"importlib" -> "importlib._bootstrap_external" [style="dotted"];
		"importlib" -> "importlib.machinery" [style="dotted"];
		"importlib" -> "importlib.util" [style="dotted"];
		"importlib" -> "importlib.readers" [style="dotted"];
		"importlib" -> "importlib.metadata" [style="dotted"];
		"importlib" -> "importlib.abc" [style="dotted"];
		"importlib" -> "importlib._abc" [style="dotted"];
		"importlib" -> "importlib.resources" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.window.moments" {
		label="pandas.tests.window.moments";
		"pandas.tests.window.moments" -> "pandas.tests.window.moments.conftest" [style="dotted"];
		"pandas.tests.window.moments" -> "pandas.tests.window.moments.test_moments_consistency_ewm" [style="dotted"];
		"pandas.tests.window.moments" -> "pandas.tests.window.moments.test_moments_consistency_expanding" [style="dotted"];
		"pandas.tests.window.moments" -> "pandas.tests.window.moments.test_moments_consistency_rolling" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.isolated" {
		label="PyInstaller.isolated";
		"PyInstaller.isolated" -> "PyInstaller.isolated._parent" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.formats" {
		label="pandas.tests.io.formats";
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_console" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_css" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_eng_formatting" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_format" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_ipython_compat" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_printing" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_csv" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_excel" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_html" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_latex" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_markdown" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.test_to_string" [style="dotted"];
		"pandas.tests.io.formats" -> "pandas.tests.io.formats.style" [style="dotted"];
	}
	subgraph "cluster_setuptools.config._validate_pyproject" {
		label="setuptools.config._validate_pyproject";
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.formats" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.error_reporting" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.extra_validations" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.fastjsonschema_exceptions" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.fastjsonschema_validations" [style="dotted"];
	}
	subgraph "cluster_pandas.core.tools" {
		label="pandas.core.tools";
		"pandas.core.tools" -> "pandas.core.tools.numeric" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.datetimes" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.timedeltas" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.times" [style="dotted"];
	}
	subgraph "cluster_backports" {
		label="backports";
		"backports" -> "backports.tarfile" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexers" {
		label="pandas.core.indexers";
		"pandas.core.indexers" -> "pandas.core.indexers.utils" [style="dotted"];
		"pandas.core.indexers" -> "pandas.core.indexers.objects" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.date" {
		label="pandas.tests.extension.date";
		"pandas.tests.extension.date" -> "pandas.tests.extension.date.array" [style="dotted"];
	}
	subgraph "cluster_urllib3.http2" {
		label="urllib3.http2";
		"urllib3.http2" -> "urllib3.http2.connection" [style="dotted"];
		"urllib3.http2" -> "urllib3.http2.probe" [style="dotted"];
	}
	subgraph "cluster_pandas.api.indexers" {
		label="pandas.api.indexers";
	}
	subgraph "cluster_six.moves" {
		label="six.moves";
		"six.moves" -> "six.moves._thread" [style="dotted"];
		"six.moves" -> "six.moves.winreg" [style="dotted"];
		"six.moves" -> "six.moves.range" [style="dotted"];
	}
	subgraph "cluster_openpyxl.compat" {
		label="openpyxl.compat";
		"openpyxl.compat" -> "openpyxl.compat.numbers" [style="dotted"];
		"openpyxl.compat" -> "openpyxl.compat.strings" [style="dotted"];
		"openpyxl.compat" -> "openpyxl.compat.abc" [style="dotted"];
		"openpyxl.compat" -> "openpyxl.compat.product" [style="dotted"];
		"openpyxl.compat" -> "openpyxl.compat.singleton" [style="dotted"];
	}
	subgraph "cluster_numpy._utils" {
		label="numpy._utils";
		"numpy._utils" -> "numpy._utils._convertions" [style="dotted"];
		"numpy._utils" -> "numpy._utils._pep440" [style="dotted"];
		"numpy._utils" -> "numpy._utils._inspect" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.US" {
		label="tzdata.zoneinfo.US";
	}
	subgraph "cluster_numpy.tests" {
		label="numpy.tests";
		"numpy.tests" -> "numpy.tests.test__all__" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_configtool" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_ctypeslib" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_lazyloading" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_matlib" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_numpy_config" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_numpy_version" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_public_api" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_reloading" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_scripts" [style="dotted"];
		"numpy.tests" -> "numpy.tests.test_warnings" [style="dotted"];
	}
	subgraph "cluster_numpy.fft.tests" {
		label="numpy.fft.tests";
		"numpy.fft.tests" -> "numpy.fft.tests.test_helper" [style="dotted"];
		"numpy.fft.tests" -> "numpy.fft.tests.test_pocketfft" [style="dotted"];
	}
	subgraph "cluster_pandas.io.clipboard" {
		label="pandas.io.clipboard";
	}
	subgraph "cluster_pandas.tests.scalar.timedelta.methods" {
		label="pandas.tests.scalar.timedelta.methods";
		"pandas.tests.scalar.timedelta.methods" -> "pandas.tests.scalar.timedelta.methods.test_as_unit" [style="dotted"];
		"pandas.tests.scalar.timedelta.methods" -> "pandas.tests.scalar.timedelta.methods.test_round" [style="dotted"];
	}
	subgraph "cluster_openpyxl.formatting" {
		label="openpyxl.formatting";
		"openpyxl.formatting" -> "openpyxl.formatting.rule" [style="dotted"];
		"openpyxl.formatting" -> "openpyxl.formatting.formatting" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.floating" {
		label="pandas.tests.arrays.floating";
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.conftest" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_arithmetic" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_astype" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_comparison" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_concat" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_construction" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_contains" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_function" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_repr" [style="dotted"];
		"pandas.tests.arrays.floating" -> "pandas.tests.arrays.floating.test_to_numpy" [style="dotted"];
	}
	subgraph "cluster_numpy.testing" {
		label="numpy.testing";
		"numpy.testing" -> "numpy.testing._private" [style="dotted"];
		"numpy.testing" -> "numpy.testing.overrides" [style="dotted"];
		"numpy.testing" -> "numpy.testing.print_coercion_tables" [style="dotted"];
		"numpy.testing" -> "numpy.testing.tests" [style="dotted"];
	}
	subgraph "cluster_tzdata" {
		label="tzdata";
		"tzdata" -> "tzdata.zoneinfo" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.api" {
		label="pandas.tests.api";
		"pandas.tests.api" -> "pandas.tests.api.test_api" [style="dotted"];
		"pandas.tests.api" -> "pandas.tests.api.test_types" [style="dotted"];
	}
	subgraph "cluster_ctypes.macholib" {
		label="ctypes.macholib";
		"ctypes.macholib" -> "ctypes.macholib.dyld" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.framework" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.dylib" [style="dotted"];
	}
	subgraph "cluster_concurrent" {
		label="concurrent";
		"concurrent" -> "concurrent.futures" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py._backends" {
		label="numpy.f2py._backends";
		"numpy.f2py._backends" -> "numpy.f2py._backends._meson" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._distutils" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._backend" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexes" {
		label="pandas.core.indexes";
		"pandas.core.indexes" -> "pandas.core.indexes.base" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.api" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimes" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.timedeltas" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.multi" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.frozen" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimelike" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.extension" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.range" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.category" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.interval" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.period" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.accessors" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays" {
		label="pandas.tests.arrays";
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_array" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_datetimelike" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_datetimes" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_ndarray_backed" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_period" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.test_timedeltas" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.timedeltas" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.string_" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.sparse" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.period" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.numpy_" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.masked" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.interval" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.masked_shared" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.integer" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.floating" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.datetimes" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.categorical" [style="dotted"];
		"pandas.tests.arrays" -> "pandas.tests.arrays.boolean" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils.command" {
		label="setuptools._distutils.command";
		"setuptools._distutils.command" -> "setuptools._distutils.command.check" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build_ext" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.sdist" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.bdist" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.window" {
		label="pandas._libs.window";
		"pandas._libs.window" -> "pandas._libs.window.aggregations" [style="dotted"];
		"pandas._libs.window" -> "pandas._libs.window.indexers" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.datetimes" {
		label="pandas.tests.indexes.datetimes";
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_arithmetic" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_constructors" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_date_range" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_datetime" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_formats" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_freq_attr" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_indexing" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_iter" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_join" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_npfuncs" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_ops" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_partial_slicing" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_pickle" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_reindex" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_scalar_compat" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_setops" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.test_timezones" [style="dotted"];
		"pandas.tests.indexes.datetimes" -> "pandas.tests.indexes.datetimes.methods" [style="dotted"];
	}
	subgraph "cluster_win32ctypes.core" {
		label="win32ctypes.core";
		"win32ctypes.core" -> "win32ctypes.core._winerrors" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._common" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._dll" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._resource" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._system_information" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._time" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core._authentication" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core.ctypes" [style="dotted"];
		"win32ctypes.core" -> "win32ctypes.core.compat" [style="dotted"];
	}
	subgraph "cluster_numpy.lib" {
		label="numpy.lib";
		"numpy.lib" -> "numpy.lib.recfunctions" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraypad_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraysetops_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arrayterator_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._function_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._histograms_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._index_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._nanfunctions_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib.format" [style="dotted"];
		"numpy.lib" -> "numpy.lib._npyio_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._polynomial_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._shape_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._stride_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._twodim_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._type_check_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._ufunclike_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._version" [style="dotted"];
		"numpy.lib" -> "numpy.lib.array_utils" [style="dotted"];
		"numpy.lib" -> "numpy.lib.introspect" [style="dotted"];
		"numpy.lib" -> "numpy.lib.mixins" [style="dotted"];
		"numpy.lib" -> "numpy.lib.npyio" [style="dotted"];
		"numpy.lib" -> "numpy.lib.scimath" [style="dotted"];
		"numpy.lib" -> "numpy.lib.stride_tricks" [style="dotted"];
		"numpy.lib" -> "numpy.lib._user_array_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib.user_array" [style="dotted"];
		"numpy.lib" -> "numpy.lib._iotools" [style="dotted"];
		"numpy.lib" -> "numpy.lib._array_utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._datasource" [style="dotted"];
		"numpy.lib" -> "numpy.lib._format_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._scimath_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib.tests" [style="dotted"];
	}
	subgraph "cluster_importlib.metadata" {
		label="importlib.metadata";
		"importlib.metadata" -> "importlib.metadata._adapters" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._meta" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._collections" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._functools" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._itertools" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._text" [style="dotted"];
	}
	subgraph "cluster_pandas.io.formats" {
		label="pandas.io.formats";
		"pandas.io.formats" -> "pandas.io.formats.printing" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.format" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.console" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.html" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.string" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.csvs" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style_render" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.excel" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats._color_data" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.css" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.info" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.xml" [style="dotted"];
	}
	subgraph "cluster_openpyxl.writer" {
		label="openpyxl.writer";
		"openpyxl.writer" -> "openpyxl.writer.excel" [style="dotted"];
		"openpyxl.writer" -> "openpyxl.writer.theme" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.America.Argentina" {
		label="tzdata.zoneinfo.America.Argentina";
	}
	subgraph "cluster_pandas.tests.scalar" {
		label="pandas.tests.scalar";
		"pandas.tests.scalar" -> "pandas.tests.scalar.test_na_scalar" [style="dotted"];
		"pandas.tests.scalar" -> "pandas.tests.scalar.test_nat" [style="dotted"];
		"pandas.tests.scalar" -> "pandas.tests.scalar.timestamp" [style="dotted"];
		"pandas.tests.scalar" -> "pandas.tests.scalar.timedelta" [style="dotted"];
		"pandas.tests.scalar" -> "pandas.tests.scalar.period" [style="dotted"];
		"pandas.tests.scalar" -> "pandas.tests.scalar.interval" [style="dotted"];
	}
	subgraph "cluster_xmlrpc" {
		label="xmlrpc";
		"xmlrpc" -> "xmlrpc.client" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays" {
		label="pandas.core.arrays";
		"pandas.core.arrays" -> "pandas.core.arrays.datetimelike" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.base" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.boolean" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.categorical" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.datetimes" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.floating" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.integer" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.interval" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.masked" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numpy_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.period" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.sparse" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.timedeltas" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._ranges" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._arrow_string_mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numeric" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._utils" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py" {
		label="numpy.f2py";
		"numpy.f2py" -> "numpy.f2py.__version__" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.capi_maps" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cb_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.symbolic" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.auxfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.func2subr" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.common_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f90mod_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.use_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f2py2e" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.diagnose" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.__main__" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._src_pyf" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._backends" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.crackfortran" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._isocbind" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.scalar.period" {
		label="pandas.tests.scalar.period";
		"pandas.tests.scalar.period" -> "pandas.tests.scalar.period.test_arithmetic" [style="dotted"];
		"pandas.tests.scalar.period" -> "pandas.tests.scalar.period.test_asfreq" [style="dotted"];
		"pandas.tests.scalar.period" -> "pandas.tests.scalar.period.test_period" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.parser.dtypes" {
		label="pandas.tests.io.parser.dtypes";
		"pandas.tests.io.parser.dtypes" -> "pandas.tests.io.parser.dtypes.test_categorical" [style="dotted"];
		"pandas.tests.io.parser.dtypes" -> "pandas.tests.io.parser.dtypes.test_dtypes_basic" [style="dotted"];
		"pandas.tests.io.parser.dtypes" -> "pandas.tests.io.parser.dtypes.test_empty" [style="dotted"];
	}
	subgraph "cluster_pandas.io.excel" {
		label="pandas.io.excel";
		"pandas.io.excel" -> "pandas.io.excel._base" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odswriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._openpyxl" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._util" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlsxwriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._calamine" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odfreader" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._pyxlsb" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlrd" [style="dotted"];
	}
	subgraph "cluster_pandas.core.computation" {
		label="pandas.core.computation";
		"pandas.core.computation" -> "pandas.core.computation.expressions" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.expr" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.api" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.check" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.ops" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.parsing" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.scope" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.common" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.eval" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.engines" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.align" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.pytables" [style="dotted"];
	}
	subgraph "cluster_numpy.linalg.tests" {
		label="numpy.linalg.tests";
		"numpy.linalg.tests" -> "numpy.linalg.tests.test_deprecations" [style="dotted"];
		"numpy.linalg.tests" -> "numpy.linalg.tests.test_linalg" [style="dotted"];
		"numpy.linalg.tests" -> "numpy.linalg.tests.test_regression" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.base" {
		label="pandas.tests.extension.base";
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.accumulate" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.casting" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.constructors" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.dim2" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.dtype" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.getitem" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.groupby" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.index" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.interface" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.io" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.methods" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.missing" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.ops" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.printing" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.reduce" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.reshaping" [style="dotted"];
		"pandas.tests.extension.base" -> "pandas.tests.extension.base.setitem" [style="dotted"];
	}
	subgraph "cluster_openpyxl.drawing" {
		label="openpyxl.drawing";
		"openpyxl.drawing" -> "openpyxl.drawing.drawing" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.spreadsheet_drawing" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.image" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.text" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.colors" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.effect" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.fill" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.geometry" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.line" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.xdr" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.connector" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.graphic" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.picture" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.relation" [style="dotted"];
		"openpyxl.drawing" -> "openpyxl.drawing.properties" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.numeric" {
		label="pandas.tests.indexes.numeric";
		"pandas.tests.indexes.numeric" -> "pandas.tests.indexes.numeric.test_astype" [style="dotted"];
		"pandas.tests.indexes.numeric" -> "pandas.tests.indexes.numeric.test_indexing" [style="dotted"];
		"pandas.tests.indexes.numeric" -> "pandas.tests.indexes.numeric.test_join" [style="dotted"];
		"pandas.tests.indexes.numeric" -> "pandas.tests.indexes.numeric.test_numeric" [style="dotted"];
		"pandas.tests.indexes.numeric" -> "pandas.tests.indexes.numeric.test_setops" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.packaging" {
		label="setuptools._vendor.packaging";
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._manylinux" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._musllinux" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.requirements" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._parser" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._tokenizer" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.markers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.utils" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.tags" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.version" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._structures" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._elffile" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Asia" {
		label="tzdata.zoneinfo.Asia";
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
		"encodings" -> "encodings.mbcs" [style="dotted"];
		"encodings" -> "encodings.ascii" [style="dotted"];
		"encodings" -> "encodings.base64_codec" [style="dotted"];
		"encodings" -> "encodings.big5" [style="dotted"];
		"encodings" -> "encodings.big5hkscs" [style="dotted"];
		"encodings" -> "encodings.bz2_codec" [style="dotted"];
		"encodings" -> "encodings.charmap" [style="dotted"];
		"encodings" -> "encodings.cp037" [style="dotted"];
		"encodings" -> "encodings.cp1006" [style="dotted"];
		"encodings" -> "encodings.cp1026" [style="dotted"];
		"encodings" -> "encodings.cp1125" [style="dotted"];
		"encodings" -> "encodings.cp1140" [style="dotted"];
		"encodings" -> "encodings.cp1250" [style="dotted"];
		"encodings" -> "encodings.cp1251" [style="dotted"];
		"encodings" -> "encodings.cp1252" [style="dotted"];
		"encodings" -> "encodings.cp1253" [style="dotted"];
		"encodings" -> "encodings.cp1254" [style="dotted"];
		"encodings" -> "encodings.cp1255" [style="dotted"];
		"encodings" -> "encodings.cp1256" [style="dotted"];
		"encodings" -> "encodings.cp1257" [style="dotted"];
		"encodings" -> "encodings.cp1258" [style="dotted"];
		"encodings" -> "encodings.cp273" [style="dotted"];
		"encodings" -> "encodings.cp424" [style="dotted"];
		"encodings" -> "encodings.cp437" [style="dotted"];
		"encodings" -> "encodings.cp500" [style="dotted"];
		"encodings" -> "encodings.cp720" [style="dotted"];
		"encodings" -> "encodings.cp737" [style="dotted"];
		"encodings" -> "encodings.cp775" [style="dotted"];
		"encodings" -> "encodings.cp850" [style="dotted"];
		"encodings" -> "encodings.cp852" [style="dotted"];
		"encodings" -> "encodings.cp855" [style="dotted"];
		"encodings" -> "encodings.cp856" [style="dotted"];
		"encodings" -> "encodings.cp857" [style="dotted"];
		"encodings" -> "encodings.cp858" [style="dotted"];
		"encodings" -> "encodings.cp860" [style="dotted"];
		"encodings" -> "encodings.cp861" [style="dotted"];
		"encodings" -> "encodings.cp862" [style="dotted"];
		"encodings" -> "encodings.cp863" [style="dotted"];
		"encodings" -> "encodings.cp864" [style="dotted"];
		"encodings" -> "encodings.cp865" [style="dotted"];
		"encodings" -> "encodings.cp866" [style="dotted"];
		"encodings" -> "encodings.cp869" [style="dotted"];
		"encodings" -> "encodings.cp874" [style="dotted"];
		"encodings" -> "encodings.cp875" [style="dotted"];
		"encodings" -> "encodings.cp932" [style="dotted"];
		"encodings" -> "encodings.cp949" [style="dotted"];
		"encodings" -> "encodings.cp950" [style="dotted"];
		"encodings" -> "encodings.euc_jis_2004" [style="dotted"];
		"encodings" -> "encodings.euc_jisx0213" [style="dotted"];
		"encodings" -> "encodings.euc_jp" [style="dotted"];
		"encodings" -> "encodings.euc_kr" [style="dotted"];
		"encodings" -> "encodings.gb18030" [style="dotted"];
		"encodings" -> "encodings.gb2312" [style="dotted"];
		"encodings" -> "encodings.gbk" [style="dotted"];
		"encodings" -> "encodings.hex_codec" [style="dotted"];
		"encodings" -> "encodings.hp_roman8" [style="dotted"];
		"encodings" -> "encodings.hz" [style="dotted"];
		"encodings" -> "encodings.idna" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_1" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2004" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_3" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_ext" [style="dotted"];
		"encodings" -> "encodings.iso2022_kr" [style="dotted"];
		"encodings" -> "encodings.iso8859_1" [style="dotted"];
		"encodings" -> "encodings.iso8859_10" [style="dotted"];
		"encodings" -> "encodings.iso8859_11" [style="dotted"];
		"encodings" -> "encodings.iso8859_13" [style="dotted"];
		"encodings" -> "encodings.iso8859_14" [style="dotted"];
		"encodings" -> "encodings.iso8859_15" [style="dotted"];
		"encodings" -> "encodings.iso8859_16" [style="dotted"];
		"encodings" -> "encodings.iso8859_2" [style="dotted"];
		"encodings" -> "encodings.iso8859_3" [style="dotted"];
		"encodings" -> "encodings.iso8859_4" [style="dotted"];
		"encodings" -> "encodings.iso8859_5" [style="dotted"];
		"encodings" -> "encodings.iso8859_6" [style="dotted"];
		"encodings" -> "encodings.iso8859_7" [style="dotted"];
		"encodings" -> "encodings.iso8859_8" [style="dotted"];
		"encodings" -> "encodings.iso8859_9" [style="dotted"];
		"encodings" -> "encodings.johab" [style="dotted"];
		"encodings" -> "encodings.koi8_r" [style="dotted"];
		"encodings" -> "encodings.koi8_t" [style="dotted"];
		"encodings" -> "encodings.koi8_u" [style="dotted"];
		"encodings" -> "encodings.kz1048" [style="dotted"];
		"encodings" -> "encodings.latin_1" [style="dotted"];
		"encodings" -> "encodings.mac_arabic" [style="dotted"];
		"encodings" -> "encodings.mac_croatian" [style="dotted"];
		"encodings" -> "encodings.mac_cyrillic" [style="dotted"];
		"encodings" -> "encodings.mac_farsi" [style="dotted"];
		"encodings" -> "encodings.mac_greek" [style="dotted"];
		"encodings" -> "encodings.mac_iceland" [style="dotted"];
		"encodings" -> "encodings.mac_latin2" [style="dotted"];
		"encodings" -> "encodings.mac_roman" [style="dotted"];
		"encodings" -> "encodings.mac_romanian" [style="dotted"];
		"encodings" -> "encodings.mac_turkish" [style="dotted"];
		"encodings" -> "encodings.oem" [style="dotted"];
		"encodings" -> "encodings.palmos" [style="dotted"];
		"encodings" -> "encodings.ptcp154" [style="dotted"];
		"encodings" -> "encodings.punycode" [style="dotted"];
		"encodings" -> "encodings.quopri_codec" [style="dotted"];
		"encodings" -> "encodings.raw_unicode_escape" [style="dotted"];
		"encodings" -> "encodings.rot_13" [style="dotted"];
		"encodings" -> "encodings.shift_jis" [style="dotted"];
		"encodings" -> "encodings.shift_jis_2004" [style="dotted"];
		"encodings" -> "encodings.shift_jisx0213" [style="dotted"];
		"encodings" -> "encodings.tis_620" [style="dotted"];
		"encodings" -> "encodings.undefined" [style="dotted"];
		"encodings" -> "encodings.unicode_escape" [style="dotted"];
		"encodings" -> "encodings.utf_16" [style="dotted"];
		"encodings" -> "encodings.utf_16_be" [style="dotted"];
		"encodings" -> "encodings.utf_16_le" [style="dotted"];
		"encodings" -> "encodings.utf_32" [style="dotted"];
		"encodings" -> "encodings.utf_32_be" [style="dotted"];
		"encodings" -> "encodings.utf_32_le" [style="dotted"];
		"encodings" -> "encodings.utf_7" [style="dotted"];
		"encodings" -> "encodings.utf_8" [style="dotted"];
		"encodings" -> "encodings.utf_8_sig" [style="dotted"];
		"encodings" -> "encodings.uu_codec" [style="dotted"];
		"encodings" -> "encodings.zlib_codec" [style="dotted"];
	}
	subgraph "cluster_numpy.rec" {
		label="numpy.rec";
	}
	subgraph "cluster_pandas.tests.io.parser.usecols" {
		label="pandas.tests.io.parser.usecols";
		"pandas.tests.io.parser.usecols" -> "pandas.tests.io.parser.usecols.test_parse_dates" [style="dotted"];
		"pandas.tests.io.parser.usecols" -> "pandas.tests.io.parser.usecols.test_strings" [style="dotted"];
		"pandas.tests.io.parser.usecols" -> "pandas.tests.io.parser.usecols.test_usecols_basic" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.copy_view.index" {
		label="pandas.tests.copy_view.index";
		"pandas.tests.copy_view.index" -> "pandas.tests.copy_view.index.test_datetimeindex" [style="dotted"];
		"pandas.tests.copy_view.index" -> "pandas.tests.copy_view.index.test_index" [style="dotted"];
		"pandas.tests.copy_view.index" -> "pandas.tests.copy_view.index.test_periodindex" [style="dotted"];
		"pandas.tests.copy_view.index" -> "pandas.tests.copy_view.index.test_timedeltaindex" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.interval" {
		label="pandas.tests.indexes.interval";
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_astype" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_constructors" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_equals" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_formats" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_indexing" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_interval" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_interval_range" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_interval_tree" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_join" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_pickle" [style="dotted"];
		"pandas.tests.indexes.interval" -> "pandas.tests.indexes.interval.test_setops" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.dtypes" {
		label="pandas.tests.dtypes";
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_common" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_concat" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_dtypes" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_generic" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_inference" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.test_missing" [style="dotted"];
		"pandas.tests.dtypes" -> "pandas.tests.dtypes.cast" [style="dotted"];
	}
	subgraph "cluster_numpy.random.tests.data" {
		label="numpy.random.tests.data";
	}
	subgraph "cluster_numpy.matrixlib" {
		label="numpy.matrixlib";
		"numpy.matrixlib" -> "numpy.matrixlib.defmatrix" [style="dotted"];
		"numpy.matrixlib" -> "numpy.matrixlib.tests" [style="dotted"];
	}
	subgraph "cluster_openpyxl.comments" {
		label="openpyxl.comments";
		"openpyxl.comments" -> "openpyxl.comments.comments" [style="dotted"];
		"openpyxl.comments" -> "openpyxl.comments.comment_sheet" [style="dotted"];
		"openpyxl.comments" -> "openpyxl.comments.author" [style="dotted"];
		"openpyxl.comments" -> "openpyxl.comments.shape_writer" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.utils.win32" {
		label="PyInstaller.utils.win32";
		"PyInstaller.utils.win32" -> "PyInstaller.utils.win32.versioninfo" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.frame.constructors" {
		label="pandas.tests.frame.constructors";
		"pandas.tests.frame.constructors" -> "pandas.tests.frame.constructors.test_from_dict" [style="dotted"];
		"pandas.tests.frame.constructors" -> "pandas.tests.frame.constructors.test_from_records" [style="dotted"];
	}
	subgraph "cluster_pandas.util.version" {
		label="pandas.util.version";
	}
	subgraph "cluster_pydoc_data" {
		label="pydoc_data";
		"pydoc_data" -> "pydoc_data.topics" [style="dotted"];
	}
	subgraph "cluster_multiprocessing.dummy" {
		label="multiprocessing.dummy";
		"multiprocessing.dummy" -> "multiprocessing.dummy.connection" [style="dotted"];
	}
	subgraph "cluster_dateutil.parser" {
		label="dateutil.parser";
		"dateutil.parser" -> "dateutil.parser._parser" [style="dotted"];
		"dateutil.parser" -> "dateutil.parser.isoparser" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo" {
		label="tzdata.zoneinfo";
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.US" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Pacific" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Mexico" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Indian" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Europe" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Etc" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Chile" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Canada" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Brazil" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Australia" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Atlantic" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Asia" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Arctic" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Antarctica" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.America" [style="dotted"];
		"tzdata.zoneinfo" -> "tzdata.zoneinfo.Africa" [style="dotted"];
	}
	subgraph "cluster_pandas.core.array_algos" {
		label="pandas.core.array_algos";
		"pandas.core.array_algos" -> "pandas.core.array_algos.datetimelike_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_reductions" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.putmask" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.quantile" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.replace" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.transforms" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.take" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Mexico" {
		label="tzdata.zoneinfo.Mexico";
	}
	subgraph "cluster_zoneinfo" {
		label="zoneinfo";
		"zoneinfo" -> "zoneinfo._tzpath" [style="dotted"];
		"zoneinfo" -> "zoneinfo._common" [style="dotted"];
		"zoneinfo" -> "zoneinfo._zoneinfo" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.frame" {
		label="pandas.tests.frame";
		"pandas.tests.frame" -> "pandas.tests.frame.conftest" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_alter_axes" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_api" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_arithmetic" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_arrow_interface" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_block_internals" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_constructors" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_cumulative" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_iteration" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_logical_ops" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_nonunique_indexes" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_npfuncs" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_query_eval" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_reductions" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_repr" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_stack_unstack" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_subclass" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_ufunc" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_unary" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.test_validate" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.common" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.methods" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.indexing" [style="dotted"];
		"pandas.tests.frame" -> "pandas.tests.frame.constructors" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.base_class" {
		label="pandas.tests.indexes.base_class";
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_constructors" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_formats" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_indexing" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_pickle" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_reshape" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_setops" [style="dotted"];
		"pandas.tests.indexes.base_class" -> "pandas.tests.indexes.base_class.test_where" [style="dotted"];
	}
	subgraph "cluster_pandas.core.reshape" {
		label="pandas.core.reshape";
		"pandas.core.reshape" -> "pandas.core.reshape.api" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.concat" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.tile" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.util" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.reshape" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.merge" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.melt" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.pivot" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.encoding" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arithmetic" {
		label="pandas.tests.arithmetic";
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.common" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.conftest" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_array_ops" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_categorical" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_datetime64" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_interval" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_numeric" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_object" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_period" [style="dotted"];
		"pandas.tests.arithmetic" -> "pandas.tests.arithmetic.test_timedelta64" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tseries.offsets" {
		label="pandas.tests.tseries.offsets";
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.common" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_business_day" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_business_hour" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_business_month" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_business_quarter" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_business_year" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_common" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_custom_business_day" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_custom_business_hour" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_custom_business_month" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_dst" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_easter" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_fiscal" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_index" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_month" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_offsets" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_offsets_properties" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_quarter" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_ticks" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_week" [style="dotted"];
		"pandas.tests.tseries.offsets" -> "pandas.tests.tseries.offsets.test_year" [style="dotted"];
	}
	subgraph "cluster_numpy.random._examples.cffi" {
		label="numpy.random._examples.cffi";
		"numpy.random._examples.cffi" -> "numpy.random._examples.cffi.extending" [style="dotted"];
		"numpy.random._examples.cffi" -> "numpy.random._examples.cffi.parse" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.tslibs" {
		label="pandas._libs.tslibs";
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.dtypes" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.conversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.nattype" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.np_datetime" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.offsets" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.parsing" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.period" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timedeltas" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timestamps" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timezones" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.tzconversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.vectorized" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.fields" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.base" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.ccalendar" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.strptime" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.platformdirs" {
		label="setuptools._vendor.platformdirs";
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.api" [style="dotted"];
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.version" [style="dotted"];
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.windows" [style="dotted"];
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.macos" [style="dotted"];
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.unix" [style="dotted"];
		"setuptools._vendor.platformdirs" -> "setuptools._vendor.platformdirs.android" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tseries" {
		label="pandas.tests.tseries";
		"pandas.tests.tseries" -> "pandas.tests.tseries.offsets" [style="dotted"];
		"pandas.tests.tseries" -> "pandas.tests.tseries.holiday" [style="dotted"];
		"pandas.tests.tseries" -> "pandas.tests.tseries.frequencies" [style="dotted"];
	}
	subgraph "cluster_pkg_resources" {
		label="pkg_resources";
	}
	subgraph "cluster_pandas.tests" {
		label="pandas.tests";
		"pandas.tests" -> "pandas.tests.test_aggregation" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_algos" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_common" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_downstream" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_errors" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_expressions" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_flags" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_multilevel" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_nanops" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_optional_dependency" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_register_accessor" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_sorting" [style="dotted"];
		"pandas.tests" -> "pandas.tests.test_take" [style="dotted"];
		"pandas.tests" -> "pandas.tests.window" [style="dotted"];
		"pandas.tests" -> "pandas.tests.util" [style="dotted"];
		"pandas.tests" -> "pandas.tests.tslibs" [style="dotted"];
		"pandas.tests" -> "pandas.tests.tseries" [style="dotted"];
		"pandas.tests" -> "pandas.tests.tools" [style="dotted"];
		"pandas.tests" -> "pandas.tests.strings" [style="dotted"];
		"pandas.tests" -> "pandas.tests.series" [style="dotted"];
		"pandas.tests" -> "pandas.tests.scalar" [style="dotted"];
		"pandas.tests" -> "pandas.tests.extension" [style="dotted"];
		"pandas.tests" -> "pandas.tests.reshape" [style="dotted"];
		"pandas.tests" -> "pandas.tests.resample" [style="dotted"];
		"pandas.tests" -> "pandas.tests.reductions" [style="dotted"];
		"pandas.tests" -> "pandas.tests.plotting" [style="dotted"];
		"pandas.tests" -> "pandas.tests.libs" [style="dotted"];
		"pandas.tests" -> "pandas.tests.io" [style="dotted"];
		"pandas.tests" -> "pandas.tests.internals" [style="dotted"];
		"pandas.tests" -> "pandas.tests.interchange" [style="dotted"];
		"pandas.tests" -> "pandas.tests.indexing" [style="dotted"];
		"pandas.tests" -> "pandas.tests.indexes" [style="dotted"];
		"pandas.tests" -> "pandas.tests.groupby" [style="dotted"];
		"pandas.tests" -> "pandas.tests.generic" [style="dotted"];
		"pandas.tests" -> "pandas.tests.frame" [style="dotted"];
		"pandas.tests" -> "pandas.tests.dtypes" [style="dotted"];
		"pandas.tests" -> "pandas.tests.copy_view" [style="dotted"];
		"pandas.tests" -> "pandas.tests.construction" [style="dotted"];
		"pandas.tests" -> "pandas.tests.config" [style="dotted"];
		"pandas.tests" -> "pandas.tests.computation" [style="dotted"];
		"pandas.tests" -> "pandas.tests.base" [style="dotted"];
		"pandas.tests" -> "pandas.tests.arrays" [style="dotted"];
		"pandas.tests" -> "pandas.tests.arithmetic" [style="dotted"];
		"pandas.tests" -> "pandas.tests.apply" [style="dotted"];
		"pandas.tests" -> "pandas.tests.api" [style="dotted"];
	}
	subgraph "cluster_zipfile._path" {
		label="zipfile._path";
		"zipfile._path" -> "zipfile._path.glob" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes" {
		label="pandas.tests.indexes";
		"pandas.tests.indexes" -> "pandas.tests.indexes.conftest" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_any_index" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_base" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_common" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_datetimelike" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_engines" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_frozen" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_index_new" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_indexing" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_numpy_compat" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_old_base" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_setops" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.test_subclass" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.timedeltas" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.string" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.ranges" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.period" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.object" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.numeric" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.multi" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.interval" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.datetimes" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.datetimelike_" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.categorical" [style="dotted"];
		"pandas.tests.indexes" -> "pandas.tests.indexes.base_class" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.zipp" {
		label="setuptools._vendor.zipp";
		"setuptools._vendor.zipp" -> "setuptools._vendor.zipp.glob" [style="dotted"];
		"setuptools._vendor.zipp" -> "setuptools._vendor.zipp.compat" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.categorical" {
		label="pandas.tests.indexes.categorical";
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_append" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_astype" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_category" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_constructors" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_equals" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_fillna" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_formats" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_indexing" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_map" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_reindex" [style="dotted"];
		"pandas.tests.indexes.categorical" -> "pandas.tests.indexes.categorical.test_setops" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexing" {
		label="pandas.tests.indexing";
		"pandas.tests.indexing" -> "pandas.tests.indexing.common" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.conftest" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_at" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_categorical" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_chaining_and_caching" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_check_indexer" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_coercion" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_datetime" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_floats" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_iat" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_iloc" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_indexers" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_indexing" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_loc" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_na_indexing" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_partial" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.test_scalar" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.multiindex" [style="dotted"];
		"pandas.tests.indexing" -> "pandas.tests.indexing.interval" [style="dotted"];
	}
	subgraph "cluster_pandas.core.sparse" {
		label="pandas.core.sparse";
		"pandas.core.sparse" -> "pandas.core.sparse.api" [style="dotted"];
	}
	subgraph "cluster_numpy.strings" {
		label="numpy.strings";
	}
	subgraph "cluster_pandas.tests.scalar.interval" {
		label="pandas.tests.scalar.interval";
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_arithmetic" [style="dotted"];
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_constructors" [style="dotted"];
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_contains" [style="dotted"];
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_formats" [style="dotted"];
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_interval" [style="dotted"];
		"pandas.tests.scalar.interval" -> "pandas.tests.scalar.interval.test_overlaps" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.scalar.timedelta" {
		label="pandas.tests.scalar.timedelta";
		"pandas.tests.scalar.timedelta" -> "pandas.tests.scalar.timedelta.test_arithmetic" [style="dotted"];
		"pandas.tests.scalar.timedelta" -> "pandas.tests.scalar.timedelta.test_constructors" [style="dotted"];
		"pandas.tests.scalar.timedelta" -> "pandas.tests.scalar.timedelta.test_formats" [style="dotted"];
		"pandas.tests.scalar.timedelta" -> "pandas.tests.scalar.timedelta.test_timedelta" [style="dotted"];
		"pandas.tests.scalar.timedelta" -> "pandas.tests.scalar.timedelta.methods" [style="dotted"];
	}
	subgraph "cluster_pandas.errors" {
		label="pandas.errors";
	}
	subgraph "cluster_openpyxl.pivot" {
		label="openpyxl.pivot";
		"openpyxl.pivot" -> "openpyxl.pivot.table" [style="dotted"];
		"openpyxl.pivot" -> "openpyxl.pivot.cache" [style="dotted"];
		"openpyxl.pivot" -> "openpyxl.pivot.record" [style="dotted"];
		"openpyxl.pivot" -> "openpyxl.pivot.fields" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils.compilers" {
		label="setuptools._distutils.compilers";
		"setuptools._distutils.compilers" -> "setuptools._distutils.compilers.C" [style="dotted"];
	}
	subgraph "cluster_pandas.api.interchange" {
		label="pandas.api.interchange";
	}
	subgraph "cluster_numpy.ctypeslib" {
		label="numpy.ctypeslib";
		"numpy.ctypeslib" -> "numpy.ctypeslib._ctypeslib" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.reductions" {
		label="pandas.tests.reductions";
		"pandas.tests.reductions" -> "pandas.tests.reductions.test_reductions" [style="dotted"];
		"pandas.tests.reductions" -> "pandas.tests.reductions.test_stat_reductions" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.scalar.timestamp" {
		label="pandas.tests.scalar.timestamp";
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_arithmetic" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_comparisons" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_constructors" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_formats" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_timestamp" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.test_timezones" [style="dotted"];
		"pandas.tests.scalar.timestamp" -> "pandas.tests.scalar.timestamp.methods" [style="dotted"];
	}
	subgraph "cluster_openpyxl.worksheet" {
		label="openpyxl.worksheet";
		"openpyxl.worksheet" -> "openpyxl.worksheet.cell_watch" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.controls" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.custom" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.errors" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.picture" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.smart_tag" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet._read_only" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet._reader" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.table" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.worksheet" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.datavalidation" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.page" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.dimensions" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.protection" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.filters" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.views" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.cell_range" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.merge" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.properties" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.pagebreak" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.scenario" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.formula" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.print_settings" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.hyperlink" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.header_footer" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.related" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.drawing" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet._write_only" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.copier" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet._writer" [style="dotted"];
		"openpyxl.worksheet" -> "openpyxl.worksheet.ole" [style="dotted"];
	}
	subgraph "cluster_dateutil" {
		label="dateutil";
		"dateutil" -> "dateutil._version" [style="dotted"];
		"dateutil" -> "dateutil.relativedelta" [style="dotted"];
		"dateutil" -> "dateutil.easter" [style="dotted"];
		"dateutil" -> "dateutil.tz" [style="dotted"];
		"dateutil" -> "dateutil.rrule" [style="dotted"];
		"dateutil" -> "dateutil._common" [style="dotted"];
		"dateutil" -> "dateutil.parser" [style="dotted"];
		"dateutil" -> "dateutil.zoneinfo" [style="dotted"];
	}
	subgraph "cluster_setuptools.config" {
		label="setuptools.config";
		"setuptools.config" -> "setuptools.config.expand" [style="dotted"];
		"setuptools.config" -> "setuptools.config.setupcfg" [style="dotted"];
		"setuptools.config" -> "setuptools.config._validate_pyproject" [style="dotted"];
		"setuptools.config" -> "setuptools.config.pyprojecttoml" [style="dotted"];
		"setuptools.config" -> "setuptools.config._apply_pyprojecttoml" [style="dotted"];
	}
	subgraph "cluster_numpy._core.tests" {
		label="numpy._core.tests";
		"numpy._core.tests" -> "numpy._core.tests._natype" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.America" {
		label="tzdata.zoneinfo.America";
		"tzdata.zoneinfo.America" -> "tzdata.zoneinfo.America.North_Dakota" [style="dotted"];
		"tzdata.zoneinfo.America" -> "tzdata.zoneinfo.America.Kentucky" [style="dotted"];
		"tzdata.zoneinfo.America" -> "tzdata.zoneinfo.America.Indiana" [style="dotted"];
		"tzdata.zoneinfo.America" -> "tzdata.zoneinfo.America.Argentina" [style="dotted"];
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.wintypes" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes._aix" [style="dotted"];
		"ctypes" -> "ctypes.macholib" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.importlib_metadata" {
		label="setuptools._vendor.importlib_metadata";
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._meta" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata.compat" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._collections" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._compat" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._functools" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._itertools" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._adapters" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._text" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor" {
		label="setuptools._vendor";
		"setuptools._vendor" -> "setuptools._vendor.typing_extensions" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.platformdirs" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.packaging" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.wheel" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.tomli" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.importlib_metadata" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.zipp" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.jaraco" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.backports" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.more_itertools" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.plotting" {
		label="pandas.tests.plotting";
		"pandas.tests.plotting" -> "pandas.tests.plotting.common" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.conftest" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_backend" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_boxplot_method" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_common" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_converter" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_datetimelike" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_groupby" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_hist_method" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_misc" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_series" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.test_style" [style="dotted"];
		"pandas.tests.plotting" -> "pandas.tests.plotting.frame" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco" {
		label="setuptools._vendor.jaraco";
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.context" [style="dotted"];
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.text" [style="dotted"];
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.functools" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.generic" {
		label="pandas.tests.generic";
		"pandas.tests.generic" -> "pandas.tests.generic.test_duplicate_labels" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_finalize" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_frame" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_generic" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_label_or_level_utils" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_series" [style="dotted"];
		"pandas.tests.generic" -> "pandas.tests.generic.test_to_xarray" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Etc" {
		label="tzdata.zoneinfo.Etc";
	}
	subgraph "cluster_packaging" {
		label="packaging";
		"packaging" -> "packaging._manylinux" [style="dotted"];
		"packaging" -> "packaging._musllinux" [style="dotted"];
		"packaging" -> "packaging.utils" [style="dotted"];
		"packaging" -> "packaging.tags" [style="dotted"];
		"packaging" -> "packaging.version" [style="dotted"];
		"packaging" -> "packaging._elffile" [style="dotted"];
		"packaging" -> "packaging._structures" [style="dotted"];
		"packaging" -> "packaging.requirements" [style="dotted"];
		"packaging" -> "packaging.markers" [style="dotted"];
		"packaging" -> "packaging.specifiers" [style="dotted"];
		"packaging" -> "packaging._parser" [style="dotted"];
		"packaging" -> "packaging._tokenizer" [style="dotted"];
		"packaging" -> "packaging.metadata" [style="dotted"];
		"packaging" -> "packaging.licenses" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.period" {
		label="pandas.tests.arrays.period";
		"pandas.tests.arrays.period" -> "pandas.tests.arrays.period.test_arrow_compat" [style="dotted"];
		"pandas.tests.arrays.period" -> "pandas.tests.arrays.period.test_astype" [style="dotted"];
		"pandas.tests.arrays.period" -> "pandas.tests.arrays.period.test_constructors" [style="dotted"];
		"pandas.tests.arrays.period" -> "pandas.tests.arrays.period.test_reductions" [style="dotted"];
	}
	subgraph "cluster_concurrent.futures" {
		label="concurrent.futures";
		"concurrent.futures" -> "concurrent.futures._base" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.process" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.thread" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib" {
		label="urllib3.contrib";
		"urllib3.contrib" -> "urllib3.contrib.pyopenssl" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.socks" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.emscripten" [style="dotted"];
	}
	subgraph "cluster_numpy.testing._private" {
		label="numpy.testing._private";
		"numpy.testing._private" -> "numpy.testing._private.extbuild" [style="dotted"];
		"numpy.testing._private" -> "numpy.testing._private.utils" [style="dotted"];
	}
	subgraph "cluster_pandas.core.dtypes" {
		label="pandas.core.dtypes";
		"pandas.core.dtypes" -> "pandas.core.dtypes.dtypes" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.common" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.missing" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.generic" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.cast" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.inference" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.concat" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.astype" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.base" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.api" [style="dotted"];
	}
	subgraph "cluster_et_xmlfile" {
		label="et_xmlfile";
		"et_xmlfile" -> "et_xmlfile.incremental_tree" [style="dotted"];
		"et_xmlfile" -> "et_xmlfile.xmlfile" [style="dotted"];
	}
	subgraph "cluster_pandas.core.internals" {
		label="pandas.core.internals";
		"pandas.core.internals" -> "pandas.core.internals.Block" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.api" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.array_manager" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.base" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.concat" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.managers" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.blocks" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.construction" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.ops" [style="dotted"];
	}
	subgraph "cluster_pandas.api.types" {
		label="pandas.api.types";
	}
	subgraph "cluster_pandas.tests.io" {
		label="pandas.tests.io";
		"pandas.tests.io" -> "pandas.tests.io.conftest" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.generate_legacy_storage_files" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_clipboard" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_common" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_compression" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_feather" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_fsspec" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_gbq" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_gcs" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_html" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_http_headers" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_orc" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_parquet" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_pickle" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_s3" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_spss" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_sql" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.test_stata" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.xml" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.sas" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.pytables" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.parser" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.json" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.formats" [style="dotted"];
		"pandas.tests.io" -> "pandas.tests.io.excel" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.string" {
		label="pandas.tests.indexes.string";
		"pandas.tests.indexes.string" -> "pandas.tests.indexes.string.test_astype" [style="dotted"];
		"pandas.tests.indexes.string" -> "pandas.tests.indexes.string.test_indexing" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Europe" {
		label="tzdata.zoneinfo.Europe";
	}
	subgraph "cluster_pandas.tests.arrays.integer" {
		label="pandas.tests.arrays.integer";
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.conftest" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_arithmetic" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_comparison" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_concat" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_construction" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_dtypes" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_function" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_indexing" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_reduction" [style="dotted"];
		"pandas.tests.arrays.integer" -> "pandas.tests.arrays.integer.test_repr" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.series.methods" {
		label="pandas.tests.series.methods";
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_add_prefix_suffix" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_align" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_argsort" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_asof" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_astype" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_autocorr" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_between" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_case_when" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_clip" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_combine" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_combine_first" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_compare" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_convert_dtypes" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_copy" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_count" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_cov_corr" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_describe" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_diff" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_drop" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_drop_duplicates" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_dropna" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_dtypes" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_duplicated" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_equals" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_explode" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_fillna" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_get_numeric_data" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_head_tail" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_infer_objects" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_info" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_interpolate" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_is_monotonic" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_is_unique" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_isin" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_isna" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_item" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_map" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_matmul" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_nlargest" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_nunique" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_pct_change" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_pop" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_quantile" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_rank" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_reindex" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_reindex_like" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_rename" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_rename_axis" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_repeat" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_replace" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_reset_index" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_round" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_searchsorted" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_set_name" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_size" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_sort_index" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_sort_values" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_to_csv" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_to_dict" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_to_frame" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_to_numpy" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_tolist" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_truncate" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_tz_localize" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_unique" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_unstack" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_update" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_value_counts" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_values" [style="dotted"];
		"pandas.tests.series.methods" -> "pandas.tests.series.methods.test_view" [style="dotted"];
	}
	subgraph "cluster_tomllib" {
		label="tomllib";
		"tomllib" -> "tomllib._parser" [style="dotted"];
		"tomllib" -> "tomllib._re" [style="dotted"];
		"tomllib" -> "tomllib._types" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.array_with_attr" {
		label="pandas.tests.extension.array_with_attr";
		"pandas.tests.extension.array_with_attr" -> "pandas.tests.extension.array_with_attr.array" [style="dotted"];
		"pandas.tests.extension.array_with_attr" -> "pandas.tests.extension.array_with_attr.test_array_with_attr" [style="dotted"];
	}
	subgraph "cluster_numpy.char" {
		label="numpy.char";
	}
	subgraph "cluster_numpy._typing" {
		label="numpy._typing";
		"numpy._typing" -> "numpy._typing._array_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._char_codes" [style="dotted"];
		"numpy._typing" -> "numpy._typing._dtype_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nbit" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nbit_base" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nested_sequence" [style="dotted"];
		"numpy._typing" -> "numpy._typing._scalars" [style="dotted"];
		"numpy._typing" -> "numpy._typing._shape" [style="dotted"];
		"numpy._typing" -> "numpy._typing._ufunc" [style="dotted"];
		"numpy._typing" -> "numpy._typing._extended_precision" [style="dotted"];
		"numpy._typing" -> "numpy._typing._add_docstring" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.numpy_" {
		label="pandas.tests.arrays.numpy_";
		"pandas.tests.arrays.numpy_" -> "pandas.tests.arrays.numpy_.test_indexing" [style="dotted"];
		"pandas.tests.arrays.numpy_" -> "pandas.tests.arrays.numpy_.test_numpy" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.interchange" {
		label="pandas.tests.interchange";
		"pandas.tests.interchange" -> "pandas.tests.interchange.test_impl" [style="dotted"];
		"pandas.tests.interchange" -> "pandas.tests.interchange.test_spec_conformance" [style="dotted"];
		"pandas.tests.interchange" -> "pandas.tests.interchange.test_utils" [style="dotted"];
	}
	subgraph "cluster_collections" {
		label="collections";
		"collections" -> "collections.Mapping" [style="dotted"];
		"collections" -> "collections.abc" [style="dotted"];
	}
	subgraph "cluster_pandas.core.strings" {
		label="pandas.core.strings";
		"pandas.core.strings" -> "pandas.core.strings.object_array" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.base" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.accessor" [style="dotted"];
	}
	subgraph "cluster_pandas.core._numba" {
		label="pandas.core._numba";
		"pandas.core._numba" -> "pandas.core._numba.executor" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.kernels" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.extensions" [style="dotted"];
	}
	subgraph "cluster_openpyxl.descriptors" {
		label="openpyxl.descriptors";
		"openpyxl.descriptors" -> "openpyxl.descriptors.base" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.sequence" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.slots" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.serialisable" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.excel" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.nested" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.namespace" [style="dotted"];
		"openpyxl.descriptors" -> "openpyxl.descriptors.container" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Indian" {
		label="tzdata.zoneinfo.Indian";
	}
	subgraph "cluster_openpyxl.cell" {
		label="openpyxl.cell";
		"openpyxl.cell" -> "openpyxl.cell.cell" [style="dotted"];
		"openpyxl.cell" -> "openpyxl.cell.read_only" [style="dotted"];
		"openpyxl.cell" -> "openpyxl.cell.rich_text" [style="dotted"];
		"openpyxl.cell" -> "openpyxl.cell.text" [style="dotted"];
		"openpyxl.cell" -> "openpyxl.cell._writer" [style="dotted"];
	}
	subgraph "cluster_openpyxl.workbook.external_link" {
		label="openpyxl.workbook.external_link";
		"openpyxl.workbook.external_link" -> "openpyxl.workbook.external_link.external" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.zipp.compat" {
		label="setuptools._vendor.zipp.compat";
		"setuptools._vendor.zipp.compat" -> "setuptools._vendor.zipp.compat.py310" [style="dotted"];
	}
	subgraph "cluster_altgraph" {
		label="altgraph";
		"altgraph" -> "altgraph.ObjectGraph" [style="dotted"];
		"altgraph" -> "altgraph.Graph" [style="dotted"];
		"altgraph" -> "altgraph.GraphUtil" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tseries.holiday" {
		label="pandas.tests.tseries.holiday";
		"pandas.tests.tseries.holiday" -> "pandas.tests.tseries.holiday.test_calendar" [style="dotted"];
		"pandas.tests.tseries.holiday" -> "pandas.tests.tseries.holiday.test_federal" [style="dotted"];
		"pandas.tests.tseries.holiday" -> "pandas.tests.tseries.holiday.test_holiday" [style="dotted"];
		"pandas.tests.tseries.holiday" -> "pandas.tests.tseries.holiday.test_observance" [style="dotted"];
	}
	subgraph "cluster_numpy.core" {
		label="numpy.core";
		"numpy.core" -> "numpy.core._utils" [style="dotted"];
		"numpy.core" -> "numpy.core._dtype" [style="dotted"];
		"numpy.core" -> "numpy.core._dtype_ctypes" [style="dotted"];
		"numpy.core" -> "numpy.core._internal" [style="dotted"];
		"numpy.core" -> "numpy.core._multiarray_umath" [style="dotted"];
		"numpy.core" -> "numpy.core.arrayprint" [style="dotted"];
		"numpy.core" -> "numpy.core.defchararray" [style="dotted"];
		"numpy.core" -> "numpy.core.einsumfunc" [style="dotted"];
		"numpy.core" -> "numpy.core.fromnumeric" [style="dotted"];
		"numpy.core" -> "numpy.core.function_base" [style="dotted"];
		"numpy.core" -> "numpy.core.getlimits" [style="dotted"];
		"numpy.core" -> "numpy.core.multiarray" [style="dotted"];
		"numpy.core" -> "numpy.core.numeric" [style="dotted"];
		"numpy.core" -> "numpy.core.numerictypes" [style="dotted"];
		"numpy.core" -> "numpy.core.overrides" [style="dotted"];
		"numpy.core" -> "numpy.core.records" [style="dotted"];
		"numpy.core" -> "numpy.core.shape_base" [style="dotted"];
		"numpy.core" -> "numpy.core.umath" [style="dotted"];
	}
	subgraph "cluster_xml.sax" {
		label="xml.sax";
		"xml.sax" -> "xml.sax.handler" [style="dotted"];
		"xml.sax" -> "xml.sax.xmlreader" [style="dotted"];
		"xml.sax" -> "xml.sax.saxutils" [style="dotted"];
		"xml.sax" -> "xml.sax._exceptions" [style="dotted"];
		"xml.sax" -> "xml.sax.expatreader" [style="dotted"];
	}
	subgraph "cluster_numpy.fft" {
		label="numpy.fft";
		"numpy.fft" -> "numpy.fft._helper" [style="dotted"];
		"numpy.fft" -> "numpy.fft._pocketfft_umath" [style="dotted"];
		"numpy.fft" -> "numpy.fft._pocketfft" [style="dotted"];
		"numpy.fft" -> "numpy.fft.helper" [style="dotted"];
		"numpy.fft" -> "numpy.fft.tests" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.reshape.merge" {
		label="pandas.tests.reshape.merge";
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_join" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_merge" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_merge_asof" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_merge_cross" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_merge_index_as_string" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_merge_ordered" [style="dotted"];
		"pandas.tests.reshape.merge" -> "pandas.tests.reshape.merge.test_multi" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.datetimes.methods" {
		label="pandas.tests.indexes.datetimes.methods";
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_asof" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_astype" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_delete" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_factorize" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_fillna" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_insert" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_isocalendar" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_map" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_normalize" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_repeat" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_resolution" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_round" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_shift" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_snap" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_to_frame" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_to_julian_date" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_to_period" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_to_pydatetime" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_to_series" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_tz_convert" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_tz_localize" [style="dotted"];
		"pandas.tests.indexes.datetimes.methods" -> "pandas.tests.indexes.datetimes.methods.test_unique" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.extension.decimal" {
		label="pandas.tests.extension.decimal";
		"pandas.tests.extension.decimal" -> "pandas.tests.extension.decimal.array" [style="dotted"];
		"pandas.tests.extension.decimal" -> "pandas.tests.extension.decimal.test_decimal" [style="dotted"];
	}
	subgraph "cluster_pandas.io.sas" {
		label="pandas.io.sas";
		"pandas.io.sas" -> "pandas.io.sas.sasreader" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas7bdat" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_constants" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_xport" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.string_" {
		label="pandas.tests.arrays.string_";
		"pandas.tests.arrays.string_" -> "pandas.tests.arrays.string_.test_concat" [style="dotted"];
		"pandas.tests.arrays.string_" -> "pandas.tests.arrays.string_.test_string" [style="dotted"];
		"pandas.tests.arrays.string_" -> "pandas.tests.arrays.string_.test_string_arrow" [style="dotted"];
	}
	subgraph "cluster_asyncio" {
		label="asyncio";
		"asyncio" -> "asyncio.constants" [style="dotted"];
		"asyncio" -> "asyncio.coroutines" [style="dotted"];
		"asyncio" -> "asyncio.format_helpers" [style="dotted"];
		"asyncio" -> "asyncio.DefaultEventLoopPolicy" [style="dotted"];
		"asyncio" -> "asyncio.events" [style="dotted"];
		"asyncio" -> "asyncio.exceptions" [style="dotted"];
		"asyncio" -> "asyncio.base_futures" [style="dotted"];
		"asyncio" -> "asyncio.futures" [style="dotted"];
		"asyncio" -> "asyncio.protocols" [style="dotted"];
		"asyncio" -> "asyncio.transports" [style="dotted"];
		"asyncio" -> "asyncio.sslproto" [style="dotted"];
		"asyncio" -> "asyncio.mixins" [style="dotted"];
		"asyncio" -> "asyncio.locks" [style="dotted"];
		"asyncio" -> "asyncio.base_tasks" [style="dotted"];
		"asyncio" -> "asyncio.tasks" [style="dotted"];
		"asyncio" -> "asyncio.timeouts" [style="dotted"];
		"asyncio" -> "asyncio.staggered" [style="dotted"];
		"asyncio" -> "asyncio.trsock" [style="dotted"];
		"asyncio" -> "asyncio.base_events" [style="dotted"];
		"asyncio" -> "asyncio.runners" [style="dotted"];
		"asyncio" -> "asyncio.queues" [style="dotted"];
		"asyncio" -> "asyncio.streams" [style="dotted"];
		"asyncio" -> "asyncio.subprocess" [style="dotted"];
		"asyncio" -> "asyncio.taskgroups" [style="dotted"];
		"asyncio" -> "asyncio.threads" [style="dotted"];
		"asyncio" -> "asyncio.base_subprocess" [style="dotted"];
		"asyncio" -> "asyncio.proactor_events" [style="dotted"];
		"asyncio" -> "asyncio.selector_events" [style="dotted"];
		"asyncio" -> "asyncio.windows_utils" [style="dotted"];
		"asyncio" -> "asyncio.windows_events" [style="dotted"];
		"asyncio" -> "asyncio.unix_events" [style="dotted"];
		"asyncio" -> "asyncio.log" [style="dotted"];
	}
	subgraph "cluster_pandas.core.methods" {
		label="pandas.core.methods";
		"pandas.core.methods" -> "pandas.core.methods.selectn" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.describe" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.to_dict" [style="dotted"];
	}
	subgraph "cluster_jaraco" {
		label="jaraco";
		"jaraco" -> "jaraco.functools" [style="dotted"];
		"jaraco" -> "jaraco.text" [style="dotted"];
		"jaraco" -> "jaraco.context" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.dtypes.cast" {
		label="pandas.tests.dtypes.cast";
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_can_hold_element" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_construct_from_scalar" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_construct_ndarray" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_construct_object_arr" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_dict_compat" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_downcast" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_find_common_type" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_infer_datetimelike" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_infer_dtype" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_maybe_box_native" [style="dotted"];
		"pandas.tests.dtypes.cast" -> "pandas.tests.dtypes.cast.test_promote" [style="dotted"];
	}
	subgraph "cluster_openpyxl.chart" {
		label="openpyxl.chart";
		"openpyxl.chart" -> "openpyxl.chart.area_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.bar_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.bubble_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.line_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.pie_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.radar_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.scatter_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.stock_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.surface_chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.series_factory" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.reference" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.chartspace" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.reader" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.data_source" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.series" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.shapes" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.error_bar" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.label" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.marker" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.trendline" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.text" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.layout" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.picture" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart._chart" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart._3d" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.axis" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.descriptors" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.title" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.legend" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.updown_bars" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.plotarea" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.pivot" [style="dotted"];
		"openpyxl.chart" -> "openpyxl.chart.print_settings" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.vendored" {
		label="setuptools._vendor.wheel.vendored";
		"setuptools._vendor.wheel.vendored" -> "setuptools._vendor.wheel.vendored.packaging" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.tseries.frequencies" {
		label="pandas.tests.tseries.frequencies";
		"pandas.tests.tseries.frequencies" -> "pandas.tests.tseries.frequencies.test_freq_code" [style="dotted"];
		"pandas.tests.tseries.frequencies" -> "pandas.tests.tseries.frequencies.test_frequencies" [style="dotted"];
		"pandas.tests.tseries.frequencies" -> "pandas.tests.tseries.frequencies.test_inference" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.tomli" {
		label="setuptools._vendor.tomli";
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._parser" [style="dotted"];
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._re" [style="dotted"];
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._types" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.config" {
		label="pandas.tests.config";
		"pandas.tests.config" -> "pandas.tests.config.test_config" [style="dotted"];
		"pandas.tests.config" -> "pandas.tests.config.test_localization" [style="dotted"];
	}
	subgraph "cluster_re" {
		label="re";
		"re" -> "re._parser" [style="dotted"];
		"re" -> "re._compiler" [style="dotted"];
		"re" -> "re._constants" [style="dotted"];
		"re" -> "re._casefix" [style="dotted"];
	}
	subgraph "cluster_requests" {
		label="requests";
		"requests" -> "requests.exceptions" [style="dotted"];
		"requests" -> "requests.packages" [style="dotted"];
		"requests" -> "requests.certs" [style="dotted"];
		"requests" -> "requests.utils" [style="dotted"];
		"requests" -> "requests.__version__" [style="dotted"];
		"requests" -> "requests.sessions" [style="dotted"];
		"requests" -> "requests.api" [style="dotted"];
		"requests" -> "requests.models" [style="dotted"];
		"requests" -> "requests.status_codes" [style="dotted"];
		"requests" -> "requests.structures" [style="dotted"];
		"requests" -> "requests.compat" [style="dotted"];
		"requests" -> "requests._internal_utils" [style="dotted"];
		"requests" -> "requests.auth" [style="dotted"];
		"requests" -> "requests.cookies" [style="dotted"];
		"requests" -> "requests.hooks" [style="dotted"];
		"requests" -> "requests.adapters" [style="dotted"];
	}
	subgraph "cluster_openpyxl.xml" {
		label="openpyxl.xml";
		"openpyxl.xml" -> "openpyxl.xml.constants" [style="dotted"];
		"openpyxl.xml" -> "openpyxl.xml.functions" [style="dotted"];
	}
	subgraph "cluster_numpy._core.include" {
		label="numpy._core.include";
	}
	subgraph "cluster_pandas.tests.io.sas" {
		label="pandas.tests.io.sas";
		"pandas.tests.io.sas" -> "pandas.tests.io.sas.test_byteswap" [style="dotted"];
		"pandas.tests.io.sas" -> "pandas.tests.io.sas.test_sas" [style="dotted"];
		"pandas.tests.io.sas" -> "pandas.tests.io.sas.test_sas7bdat" [style="dotted"];
		"pandas.tests.io.sas" -> "pandas.tests.io.sas.test_xport" [style="dotted"];
	}
	subgraph "cluster_certifi" {
		label="certifi";
		"certifi" -> "certifi.core" [style="dotted"];
	}
	subgraph "cluster_zipfile" {
		label="zipfile";
		"zipfile" -> "zipfile._path" [style="dotted"];
	}
	subgraph "cluster_setuptools" {
		label="setuptools";
		"setuptools" -> "setuptools._normalization" [style="dotted"];
		"setuptools" -> "setuptools._reqs" [style="dotted"];
		"setuptools" -> "setuptools._core_metadata" [style="dotted"];
		"setuptools" -> "setuptools.monkey" [style="dotted"];
		"setuptools" -> "setuptools.logging" [style="dotted"];
		"setuptools" -> "setuptools._imp" [style="dotted"];
		"setuptools" -> "setuptools.depends" [style="dotted"];
		"setuptools" -> "setuptools.discovery" [style="dotted"];
		"setuptools" -> "setuptools._entry_points" [style="dotted"];
		"setuptools" -> "setuptools.command" [style="dotted"];
		"setuptools" -> "setuptools.windows_support" [style="dotted"];
		"setuptools" -> "setuptools._shutil" [style="dotted"];
		"setuptools" -> "setuptools.dist" [style="dotted"];
		"setuptools" -> "setuptools.extension" [style="dotted"];
		"setuptools" -> "setuptools.version" [style="dotted"];
		"setuptools" -> "setuptools.warnings" [style="dotted"];
		"setuptools" -> "setuptools.msvc" [style="dotted"];
		"setuptools" -> "setuptools._vendor" [style="dotted"];
		"setuptools" -> "setuptools._distutils" [style="dotted"];
		"setuptools" -> "setuptools._importlib" [style="dotted"];
		"setuptools" -> "setuptools._path" [style="dotted"];
		"setuptools" -> "setuptools._static" [style="dotted"];
		"setuptools" -> "setuptools.config" [style="dotted"];
		"setuptools" -> "setuptools.errors" [style="dotted"];
		"setuptools" -> "setuptools.installer" [style="dotted"];
		"setuptools" -> "setuptools.unicode_utils" [style="dotted"];
		"setuptools" -> "setuptools.glob" [style="dotted"];
		"setuptools" -> "setuptools.compat" [style="dotted"];
		"setuptools" -> "setuptools.wheel" [style="dotted"];
		"setuptools" -> "setuptools.archive_util" [style="dotted"];
		"setuptools" -> "setuptools._discovery" [style="dotted"];
		"setuptools" -> "setuptools._itertools" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.groupby" {
		label="pandas.tests.groupby";
		"pandas.tests.groupby" -> "pandas.tests.groupby.conftest" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_all_methods" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_api" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_apply" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_apply_mutate" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_bin_groupby" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_categorical" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_counting" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_cumulative" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_filters" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_groupby" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_groupby_dropna" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_groupby_subclass" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_grouping" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_index_as_string" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_indexing" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_libgroupby" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_missing" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_numba" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_numeric_only" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_pipe" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_raises" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_reductions" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.test_timegrouper" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.transform" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.methods" [style="dotted"];
		"pandas.tests.groupby" -> "pandas.tests.groupby.aggregate" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.period" {
		label="pandas.tests.indexes.period";
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_constructors" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_formats" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_freq_attr" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_indexing" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_join" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_monotonic" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_partial_slicing" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_period" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_period_range" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_pickle" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_resolution" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_scalar_compat" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_searchsorted" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_setops" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.test_tools" [style="dotted"];
		"pandas.tests.indexes.period" -> "pandas.tests.indexes.period.methods" [style="dotted"];
	}
	subgraph "cluster_xml.parsers" {
		label="xml.parsers";
		"xml.parsers" -> "xml.parsers.expat" [style="dotted"];
	}
	subgraph "cluster_charset_normalizer" {
		label="charset_normalizer";
		"charset_normalizer" -> "charset_normalizer.api" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.legacy" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.models" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.utils" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.version" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md__mypyc" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.constant" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.cd" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md" [style="dotted"];
	}
	subgraph "cluster_numpy._core.lib.pkgconfig" {
		label="numpy._core.lib.pkgconfig";
	}
	subgraph "cluster_pandas.core" {
		label="pandas.core";
		"pandas.core" -> "pandas.core.roperator" [style="dotted"];
		"pandas.core" -> "pandas.core.missing" [style="dotted"];
		"pandas.core" -> "pandas.core.nanops" [style="dotted"];
		"pandas.core" -> "pandas.core.indexing" [style="dotted"];
		"pandas.core" -> "pandas.core.sample" [style="dotted"];
		"pandas.core" -> "pandas.core.algorithms" [style="dotted"];
		"pandas.core" -> "pandas.core.arraylike" [style="dotted"];
		"pandas.core" -> "pandas.core.config_init" [style="dotted"];
		"pandas.core" -> "pandas.core.api" [style="dotted"];
		"pandas.core" -> "pandas.core.frame" [style="dotted"];
		"pandas.core" -> "pandas.core.generic" [style="dotted"];
		"pandas.core" -> "pandas.core.resample" [style="dotted"];
		"pandas.core" -> "pandas.core.series" [style="dotted"];
		"pandas.core" -> "pandas.core.base" [style="dotted"];
		"pandas.core" -> "pandas.core.common" [style="dotted"];
		"pandas.core" -> "pandas.core.dtypes" [style="dotted"];
		"pandas.core" -> "pandas.core.construction" [style="dotted"];
		"pandas.core" -> "pandas.core.internals" [style="dotted"];
		"pandas.core" -> "pandas.core.ops" [style="dotted"];
		"pandas.core" -> "pandas.core.util" [style="dotted"];
		"pandas.core" -> "pandas.core.computation" [style="dotted"];
		"pandas.core" -> "pandas.core.sorting" [style="dotted"];
		"pandas.core" -> "pandas.core.arrays" [style="dotted"];
		"pandas.core" -> "pandas.core.accessor" [style="dotted"];
		"pandas.core" -> "pandas.core.strings" [style="dotted"];
		"pandas.core" -> "pandas.core.groupby" [style="dotted"];
		"pandas.core" -> "pandas.core.apply" [style="dotted"];
		"pandas.core" -> "pandas.core.window" [style="dotted"];
		"pandas.core" -> "pandas.core.shared_docs" [style="dotted"];
		"pandas.core" -> "pandas.core.tools" [style="dotted"];
		"pandas.core" -> "pandas.core._numba" [style="dotted"];
		"pandas.core" -> "pandas.core.indexers" [style="dotted"];
		"pandas.core" -> "pandas.core.array_algos" [style="dotted"];
		"pandas.core" -> "pandas.core.reshape" [style="dotted"];
		"pandas.core" -> "pandas.core.indexes" [style="dotted"];
		"pandas.core" -> "pandas.core.methods" [style="dotted"];
		"pandas.core" -> "pandas.core.flags" [style="dotted"];
		"pandas.core" -> "pandas.core.interchange" [style="dotted"];
		"pandas.core" -> "pandas.core.sparse" [style="dotted"];
	}
	subgraph "cluster_xml.etree" {
		label="xml.etree";
		"xml.etree" -> "xml.etree.ElementPath" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementTree" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementInclude" [style="dotted"];
		"xml.etree" -> "xml.etree.cElementTree" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.datetimelike_" {
		label="pandas.tests.indexes.datetimelike_";
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_drop_duplicates" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_equals" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_indexing" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_is_monotonic" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_nat" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_sort_values" [style="dotted"];
		"pandas.tests.indexes.datetimelike_" -> "pandas.tests.indexes.datetimelike_.test_value_counts" [style="dotted"];
	}
	subgraph "cluster_pandas.compat.numpy" {
		label="pandas.compat.numpy";
		"pandas.compat.numpy" -> "pandas.compat.numpy.function" [style="dotted"];
	}
	subgraph "cluster_setuptools.compat" {
		label="setuptools.compat";
		"setuptools.compat" -> "setuptools.compat.py39" [style="dotted"];
		"setuptools.compat" -> "setuptools.compat.py311" [style="dotted"];
		"setuptools.compat" -> "setuptools.compat.py310" [style="dotted"];
	}
	subgraph "cluster_logging" {
		label="logging";
	}
	subgraph "cluster_pandas.core._numba.kernels" {
		label="pandas.core._numba.kernels";
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.mean_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.min_max_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.sum_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.var_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.shared" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.series.accessors" {
		label="pandas.tests.series.accessors";
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_cat_accessor" [style="dotted"];
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_dt_accessor" [style="dotted"];
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_list_accessor" [style="dotted"];
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_sparse_accessor" [style="dotted"];
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_str_accessor" [style="dotted"];
		"pandas.tests.series.accessors" -> "pandas.tests.series.accessors.test_struct_accessor" [style="dotted"];
	}
	subgraph "cluster_win32ctypes.pywin32" {
		label="win32ctypes.pywin32";
		"win32ctypes.pywin32" -> "win32ctypes.pywin32.pywintypes" [style="dotted"];
		"win32ctypes.pywin32" -> "win32ctypes.pywin32.win32api" [style="dotted"];
		"win32ctypes.pywin32" -> "win32ctypes.pywin32.win32cred" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.interval" {
		label="pandas.tests.arrays.interval";
		"pandas.tests.arrays.interval" -> "pandas.tests.arrays.interval.test_astype" [style="dotted"];
		"pandas.tests.arrays.interval" -> "pandas.tests.arrays.interval.test_formats" [style="dotted"];
		"pandas.tests.arrays.interval" -> "pandas.tests.arrays.interval.test_interval" [style="dotted"];
		"pandas.tests.arrays.interval" -> "pandas.tests.arrays.interval.test_interval_pyarrow" [style="dotted"];
		"pandas.tests.arrays.interval" -> "pandas.tests.arrays.interval.test_overlaps" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.more_itertools" {
		label="setuptools._vendor.more_itertools";
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.more" [style="dotted"];
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.recipes" [style="dotted"];
	}
	subgraph "cluster_pytz" {
		label="pytz";
		"pytz" -> "pytz.exceptions" [style="dotted"];
		"pytz" -> "pytz.lazy" [style="dotted"];
		"pytz" -> "pytz.tzinfo" [style="dotted"];
		"pytz" -> "pytz.tzfile" [style="dotted"];
	}
	subgraph "cluster_pandas.core.window" {
		label="pandas.core.window";
		"pandas.core.window" -> "pandas.core.window.ewm" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.expanding" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.rolling" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.doc" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.common" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.numba_" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.online" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.reshape.concat" {
		label="pandas.tests.reshape.concat";
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.conftest" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_append" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_append_common" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_categorical" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_concat" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_dataframe" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_datetimes" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_empty" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_index" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_invalid" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_series" [style="dotted"];
		"pandas.tests.reshape.concat" -> "pandas.tests.reshape.concat.test_sort" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Pacific" {
		label="tzdata.zoneinfo.Pacific";
	}
	subgraph "cluster_win32ctypes" {
		label="win32ctypes";
		"win32ctypes" -> "win32ctypes.version" [style="dotted"];
		"win32ctypes" -> "win32ctypes.core" [style="dotted"];
		"win32ctypes" -> "win32ctypes.pywin32" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Antarctica" {
		label="tzdata.zoneinfo.Antarctica";
	}
	subgraph "cluster_pandas.tests.indexes.multi" {
		label="pandas.tests.indexes.multi";
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.conftest" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_analytics" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_astype" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_compat" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_constructors" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_conversion" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_copy" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_drop" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_duplicates" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_equivalence" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_formats" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_get_level_values" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_get_set" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_indexing" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_integrity" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_isin" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_join" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_lexsort" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_missing" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_monotonic" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_names" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_partial_indexing" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_pickle" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_reindex" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_reshape" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_setops" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_sorting" [style="dotted"];
		"pandas.tests.indexes.multi" -> "pandas.tests.indexes.multi.test_take" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.util" {
		label="pandas.tests.util";
		"pandas.tests.util" -> "pandas.tests.util.conftest" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_almost_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_attr_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_categorical_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_extension_array_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_frame_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_index_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_interval_array_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_numpy_array_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_produces_warning" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_assert_series_equal" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_deprecate" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_deprecate_kwarg" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_deprecate_nonkeyword_arguments" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_doc" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_hashing" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_numba" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_rewrite_warning" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_shares_memory" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_show_versions" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_util" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_validate_args" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_validate_args_and_kwargs" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_validate_inclusive" [style="dotted"];
		"pandas.tests.util" -> "pandas.tests.util.test_validate_kwargs" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.building" {
		label="PyInstaller.building";
		"PyInstaller.building" -> "PyInstaller.building.utils" [style="dotted"];
	}
	subgraph "cluster_numpy._pyinstaller" {
		label="numpy._pyinstaller";
		"numpy._pyinstaller" -> "numpy._pyinstaller.hook-numpy" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.resample" {
		label="pandas.tests.resample";
		"pandas.tests.resample" -> "pandas.tests.resample.conftest" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_base" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_datetime_index" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_period_index" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_resample_api" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_resampler_grouper" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_time_grouper" [style="dotted"];
		"pandas.tests.resample" -> "pandas.tests.resample.test_timedelta" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.json" {
		label="pandas.tests.io.json";
		"pandas.tests.io.json" -> "pandas.tests.io.json.conftest" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_compression" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_deprecated_kwargs" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_json_table_schema" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_json_table_schema_ext_dtype" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_normalize" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_pandas" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_readlines" [style="dotted"];
		"pandas.tests.io.json" -> "pandas.tests.io.json.test_ujson" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.timedeltas" {
		label="pandas.tests.indexes.timedeltas";
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_arithmetic" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_constructors" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_delete" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_formats" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_freq_attr" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_indexing" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_join" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_ops" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_pickle" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_scalar_compat" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_searchsorted" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_setops" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_timedelta" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.test_timedelta_range" [style="dotted"];
		"pandas.tests.indexes.timedeltas" -> "pandas.tests.indexes.timedeltas.methods" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.depend" {
		label="PyInstaller.depend";
		"PyInstaller.depend" -> "PyInstaller.depend.imphookapi" [style="dotted"];
	}
	subgraph "cluster_pandas.api" {
		label="pandas.api";
		"pandas.api" -> "pandas.api.extensions" [style="dotted"];
		"pandas.api" -> "pandas.api.indexers" [style="dotted"];
		"pandas.api" -> "pandas.api.interchange" [style="dotted"];
		"pandas.api" -> "pandas.api.types" [style="dotted"];
		"pandas.api" -> "pandas.api.typing" [style="dotted"];
	}
	subgraph "cluster_numpy.linalg" {
		label="numpy.linalg";
		"numpy.linalg" -> "numpy.linalg._umath_linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg._linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.lapack_lite" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.tests" [style="dotted"];
	}
	subgraph "cluster_numpy._core.lib" {
		label="numpy._core.lib";
		"numpy._core.lib" -> "numpy._core.lib.pkgconfig" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.cli" {
		label="setuptools._vendor.wheel.cli";
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.unpack" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.pack" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.convert" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.tags" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Brazil" {
		label="tzdata.zoneinfo.Brazil";
	}
	subgraph "cluster_pandas.core.ops" {
		label="pandas.core.ops";
		"pandas.core.ops" -> "pandas.core.ops.missing" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.array_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.common" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.docstrings" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.invalid" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.mask_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.dispatch" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.groupby.transform" {
		label="pandas.tests.groupby.transform";
		"pandas.tests.groupby.transform" -> "pandas.tests.groupby.transform.test_numba" [style="dotted"];
		"pandas.tests.groupby.transform" -> "pandas.tests.groupby.transform.test_transform" [style="dotted"];
	}
	subgraph "cluster_pandas.tseries" {
		label="pandas.tseries";
		"pandas.tseries" -> "pandas.tseries.frequencies" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.offsets" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.api" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.holiday" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.categorical" {
		label="pandas.tests.arrays.categorical";
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_algos" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_analytics" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_api" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_astype" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_constructors" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_dtypes" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_indexing" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_map" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_missing" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_operators" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_replace" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_repr" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_sorting" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_subclass" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_take" [style="dotted"];
		"pandas.tests.arrays.categorical" -> "pandas.tests.arrays.categorical.test_warnings" [style="dotted"];
	}
	subgraph "cluster_xml.dom" {
		label="xml.dom";
		"xml.dom" -> "xml.dom.domreg" [style="dotted"];
		"xml.dom" -> "xml.dom.xmlbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.minidom" [style="dotted"];
		"xml.dom" -> "xml.dom.pulldom" [style="dotted"];
		"xml.dom" -> "xml.dom.minicompat" [style="dotted"];
		"xml.dom" -> "xml.dom.expatbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.NodeFilter" [style="dotted"];
	}
	subgraph "cluster_urllib3" {
		label="urllib3";
		"urllib3" -> "urllib3.exceptions" [style="dotted"];
		"urllib3" -> "urllib3._base_connection" [style="dotted"];
		"urllib3" -> "urllib3._collections" [style="dotted"];
		"urllib3" -> "urllib3._version" [style="dotted"];
		"urllib3" -> "urllib3.connectionpool" [style="dotted"];
		"urllib3" -> "urllib3.filepost" [style="dotted"];
		"urllib3" -> "urllib3.poolmanager" [style="dotted"];
		"urllib3" -> "urllib3.response" [style="dotted"];
		"urllib3" -> "urllib3.fields" [style="dotted"];
		"urllib3" -> "urllib3.util" [style="dotted"];
		"urllib3" -> "urllib3.connection" [style="dotted"];
		"urllib3" -> "urllib3.http2" [style="dotted"];
		"urllib3" -> "urllib3._request_methods" [style="dotted"];
		"urllib3" -> "urllib3.contrib" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.arrow" {
		label="pandas.core.arrays.arrow";
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.accessors" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.array" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow._arrow_utils" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.extension_types" [style="dotted"];
	}
	subgraph "cluster_pandas._libs" {
		label="pandas._libs";
		"pandas._libs" -> "pandas._libs.pandas_parser" [style="dotted"];
		"pandas._libs" -> "pandas._libs.pandas_datetime" [style="dotted"];
		"pandas._libs" -> "pandas._libs.lib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.missing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.algos" [style="dotted"];
		"pandas._libs" -> "pandas._libs.index" [style="dotted"];
		"pandas._libs" -> "pandas._libs.writers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.reshape" [style="dotted"];
		"pandas._libs" -> "pandas._libs.join" [style="dotted"];
		"pandas._libs" -> "pandas._libs.interval" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslibs" [style="dotted"];
		"pandas._libs" -> "pandas._libs.arrays" [style="dotted"];
		"pandas._libs" -> "pandas._libs.byteswap" [style="dotted"];
		"pandas._libs" -> "pandas._libs.groupby" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashtable" [style="dotted"];
		"pandas._libs" -> "pandas._libs.indexing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.internals" [style="dotted"];
		"pandas._libs" -> "pandas._libs.json" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops_dispatch" [style="dotted"];
		"pandas._libs" -> "pandas._libs.parsers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.properties" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sas" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sparse" [style="dotted"];
		"pandas._libs" -> "pandas._libs.testing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.window" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.lib.modulegraph" {
		label="PyInstaller.lib.modulegraph";
		"PyInstaller.lib.modulegraph" -> "PyInstaller.lib.modulegraph.util" [style="dotted"];
		"PyInstaller.lib.modulegraph" -> "PyInstaller.lib.modulegraph.modulegraph" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.boolean" {
		label="pandas.tests.arrays.boolean";
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_arithmetic" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_astype" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_comparison" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_construction" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_function" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_indexing" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_logical" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_ops" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_reduction" [style="dotted"];
		"pandas.tests.arrays.boolean" -> "pandas.tests.arrays.boolean.test_repr" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.America.North_Dakota" {
		label="tzdata.zoneinfo.America.North_Dakota";
	}
	subgraph "cluster_numpy.random._examples.numba" {
		label="numpy.random._examples.numba";
		"numpy.random._examples.numba" -> "numpy.random._examples.numba.extending" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.series.indexing" {
		label="pandas.tests.series.indexing";
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_datetime" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_delitem" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_get" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_getitem" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_indexing" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_mask" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_set_value" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_setitem" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_take" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_where" [style="dotted"];
		"pandas.tests.series.indexing" -> "pandas.tests.series.indexing.test_xs" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.arrays.datetimes" {
		label="pandas.tests.arrays.datetimes";
		"pandas.tests.arrays.datetimes" -> "pandas.tests.arrays.datetimes.test_constructors" [style="dotted"];
		"pandas.tests.arrays.datetimes" -> "pandas.tests.arrays.datetimes.test_cumulative" [style="dotted"];
		"pandas.tests.arrays.datetimes" -> "pandas.tests.arrays.datetimes.test_reductions" [style="dotted"];
	}
	subgraph "cluster_pandas.arrays" {
		label="pandas.arrays";
	}
	subgraph "cluster_setuptools._distutils.compilers.C" {
		label="setuptools._distutils.compilers.C";
		"setuptools._distutils.compilers.C" -> "setuptools._distutils.compilers.C.msvc" [style="dotted"];
		"setuptools._distutils.compilers.C" -> "setuptools._distutils.compilers.C.base" [style="dotted"];
		"setuptools._distutils.compilers.C" -> "setuptools._distutils.compilers.C.errors" [style="dotted"];
	}
	subgraph "cluster_numpy.matrixlib.tests" {
		label="numpy.matrixlib.tests";
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_defmatrix" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_interaction" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_masked_matrix" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_matrix_linalg" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_multiarray" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_numeric" [style="dotted"];
		"numpy.matrixlib.tests" -> "numpy.matrixlib.tests.test_regression" [style="dotted"];
	}
	subgraph "cluster_html" {
		label="html";
		"html" -> "html.entities" [style="dotted"];
	}
	subgraph "cluster_numpy.ma" {
		label="numpy.ma";
		"numpy.ma" -> "numpy.ma.core" [style="dotted"];
		"numpy.ma" -> "numpy.ma.extras" [style="dotted"];
		"numpy.ma" -> "numpy.ma.mrecords" [style="dotted"];
		"numpy.ma" -> "numpy.ma.testutils" [style="dotted"];
		"numpy.ma" -> "numpy.ma.tests" [style="dotted"];
	}
	subgraph "cluster_pandas.api.typing" {
		label="pandas.api.typing";
	}
	subgraph "cluster_numpy.typing" {
		label="numpy.typing";
		"numpy.typing" -> "numpy.typing.mypy_plugin" [style="dotted"];
		"numpy.typing" -> "numpy.typing.tests" [style="dotted"];
	}
	subgraph "cluster_dateutil.zoneinfo" {
		label="dateutil.zoneinfo";
	}
	subgraph "cluster_pandas.util" {
		label="pandas.util";
		"pandas.util" -> "pandas.util._decorators" [style="dotted"];
		"pandas.util" -> "pandas.util.hash_array" [style="dotted"];
		"pandas.util" -> "pandas.util.hash_pandas_object" [style="dotted"];
		"pandas.util" -> "pandas.util._doctools" [style="dotted"];
		"pandas.util" -> "pandas.util._print_versions" [style="dotted"];
		"pandas.util" -> "pandas.util._tester" [style="dotted"];
		"pandas.util" -> "pandas.util._exceptions" [style="dotted"];
		"pandas.util" -> "pandas.util.version" [style="dotted"];
		"pandas.util" -> "pandas.util._validators" [style="dotted"];
		"pandas.util" -> "pandas.util._test_decorators" [style="dotted"];
	}
	subgraph "cluster_numpy.random.tests" {
		label="numpy.random.tests";
		"numpy.random.tests" -> "numpy.random.tests.test_direct" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_extending" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_generator_mt19937" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_generator_mt19937_regressions" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_random" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_randomstate" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_randomstate_regression" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_regression" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_seed_sequence" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.test_smoke" [style="dotted"];
		"numpy.random.tests" -> "numpy.random.tests.data" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.timedeltas.methods" {
		label="pandas.tests.indexes.timedeltas.methods";
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_astype" [style="dotted"];
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_factorize" [style="dotted"];
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_fillna" [style="dotted"];
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_insert" [style="dotted"];
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_repeat" [style="dotted"];
		"pandas.tests.indexes.timedeltas.methods" -> "pandas.tests.indexes.timedeltas.methods.test_shift" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils" {
		label="setuptools._distutils";
		"setuptools._distutils" -> "setuptools._distutils.file_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.archive_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.version" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._log" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._modified" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.errors" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.spawn" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.sysconfig" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.ccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.compat" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.text_file" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.dir_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.debug" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.fancy_getopt" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.compilers" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.core" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.command" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.cmd" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.dist" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.extension" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.versionpredicate" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._msvccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.log" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.filelist" [style="dotted"];
	}
	subgraph "cluster_numpy._core" {
		label="numpy._core";
		"numpy._core" -> "numpy._core._multiarray_umath" [style="dotted"];
		"numpy._core" -> "numpy._core.overrides" [style="dotted"];
		"numpy._core" -> "numpy._core.multiarray" [style="dotted"];
		"numpy._core" -> "numpy._core.umath" [style="dotted"];
		"numpy._core" -> "numpy._core.numerictypes" [style="dotted"];
		"numpy._core" -> "numpy._core.fromnumeric" [style="dotted"];
		"numpy._core" -> "numpy._core.numeric" [style="dotted"];
		"numpy._core" -> "numpy._core.shape_base" [style="dotted"];
		"numpy._core" -> "numpy._core._asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.arrayprint" [style="dotted"];
		"numpy._core" -> "numpy._core.add" [style="dotted"];
		"numpy._core" -> "numpy._core.all" [style="dotted"];
		"numpy._core" -> "numpy._core.amax" [style="dotted"];
		"numpy._core" -> "numpy._core.amin" [style="dotted"];
		"numpy._core" -> "numpy._core.argsort" [style="dotted"];
		"numpy._core" -> "numpy._core.array" [style="dotted"];
		"numpy._core" -> "numpy._core.asanyarray" [style="dotted"];
		"numpy._core" -> "numpy._core.asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_2d" [style="dotted"];
		"numpy._core" -> "numpy._core.cdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.complexfloating" [style="dotted"];
		"numpy._core" -> "numpy._core.count_nonzero" [style="dotted"];
		"numpy._core" -> "numpy._core.csingle" [style="dotted"];
		"numpy._core" -> "numpy._core.divide" [style="dotted"];
		"numpy._core" -> "numpy._core.dot" [style="dotted"];
		"numpy._core" -> "numpy._core.double" [style="dotted"];
		"numpy._core" -> "numpy._core.empty" [style="dotted"];
		"numpy._core" -> "numpy._core.empty_like" [style="dotted"];
		"numpy._core" -> "numpy._core.errstate" [style="dotted"];
		"numpy._core" -> "numpy._core.finfo" [style="dotted"];
		"numpy._core" -> "numpy._core.inexact" [style="dotted"];
		"numpy._core" -> "numpy._core.inf" [style="dotted"];
		"numpy._core" -> "numpy._core.intc" [style="dotted"];
		"numpy._core" -> "numpy._core.intp" [style="dotted"];
		"numpy._core" -> "numpy._core.isfinite" [style="dotted"];
		"numpy._core" -> "numpy._core.isnan" [style="dotted"];
		"numpy._core" -> "numpy._core.moveaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.multiply" [style="dotted"];
		"numpy._core" -> "numpy._core.newaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.object_" [style="dotted"];
		"numpy._core" -> "numpy._core.prod" [style="dotted"];
		"numpy._core" -> "numpy._core.reciprocal" [style="dotted"];
		"numpy._core" -> "numpy._core.sign" [style="dotted"];
		"numpy._core" -> "numpy._core.single" [style="dotted"];
		"numpy._core" -> "numpy._core.sort" [style="dotted"];
		"numpy._core" -> "numpy._core.sqrt" [style="dotted"];
		"numpy._core" -> "numpy._core.sum" [style="dotted"];
		"numpy._core" -> "numpy._core.swapaxes" [style="dotted"];
		"numpy._core" -> "numpy._core.zeros" [style="dotted"];
		"numpy._core" -> "numpy._core.cross" [style="dotted"];
		"numpy._core" -> "numpy._core.diagonal" [style="dotted"];
		"numpy._core" -> "numpy._core.matmul" [style="dotted"];
		"numpy._core" -> "numpy._core.matrix_transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.outer" [style="dotted"];
		"numpy._core" -> "numpy._core.tensordot" [style="dotted"];
		"numpy._core" -> "numpy._core.trace" [style="dotted"];
		"numpy._core" -> "numpy._core.transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.vecdot" [style="dotted"];
		"numpy._core" -> "numpy._core.iinfo" [style="dotted"];
		"numpy._core" -> "numpy._core.arange" [style="dotted"];
		"numpy._core" -> "numpy._core.array_repr" [style="dotted"];
		"numpy._core" -> "numpy._core.float32" [style="dotted"];
		"numpy._core" -> "numpy._core.isnat" [style="dotted"];
		"numpy._core" -> "numpy._core.ndarray" [style="dotted"];
		"numpy._core" -> "numpy._core.isscalar" [style="dotted"];
		"numpy._core" -> "numpy._core.signbit" [style="dotted"];
		"numpy._core" -> "numpy._core.array2string" [style="dotted"];
		"numpy._core" -> "numpy._core.max" [style="dotted"];
		"numpy._core" -> "numpy._core.number" [style="dotted"];
		"numpy._core" -> "numpy._core.result_type" [style="dotted"];
		"numpy._core" -> "numpy._core.linspace" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_1d" [style="dotted"];
		"numpy._core" -> "numpy._core.hstack" [style="dotted"];
		"numpy._core" -> "numpy._core.ones" [style="dotted"];
		"numpy._core" -> "numpy._core.getlimits" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_3d" [style="dotted"];
		"numpy._core" -> "numpy._core.vstack" [style="dotted"];
		"numpy._core" -> "numpy._core._methods" [style="dotted"];
		"numpy._core" -> "numpy._core._machar" [style="dotted"];
		"numpy._core" -> "numpy._core.einsumfunc" [style="dotted"];
		"numpy._core" -> "numpy._core.function_base" [style="dotted"];
		"numpy._core" -> "numpy._core.memmap" [style="dotted"];
		"numpy._core" -> "numpy._core.records" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs_scalars" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype_ctypes" [style="dotted"];
		"numpy._core" -> "numpy._core._internal" [style="dotted"];
		"numpy._core" -> "numpy._core.arccos" [style="dotted"];
		"numpy._core" -> "numpy._core.arccosh" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsin" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsinh" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan2" [style="dotted"];
		"numpy._core" -> "numpy._core.arctanh" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_and" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_count" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_or" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.bool_" [style="dotted"];
		"numpy._core" -> "numpy._core.byte" [style="dotted"];
		"numpy._core" -> "numpy._core.bytes_" [style="dotted"];
		"numpy._core" -> "numpy._core.cbrt" [style="dotted"];
		"numpy._core" -> "numpy._core.ceil" [style="dotted"];
		"numpy._core" -> "numpy._core.character" [style="dotted"];
		"numpy._core" -> "numpy._core.clongdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.complex64" [style="dotted"];
		"numpy._core" -> "numpy._core.conj" [style="dotted"];
		"numpy._core" -> "numpy._core.conjugate" [style="dotted"];
		"numpy._core" -> "numpy._core.copysign" [style="dotted"];
		"numpy._core" -> "numpy._core.cos" [style="dotted"];
		"numpy._core" -> "numpy._core.cosh" [style="dotted"];
		"numpy._core" -> "numpy._core.datetime64" [style="dotted"];
		"numpy._core" -> "numpy._core.deg2rad" [style="dotted"];
		"numpy._core" -> "numpy._core.degrees" [style="dotted"];
		"numpy._core" -> "numpy._core.divmod" [style="dotted"];
		"numpy._core" -> "numpy._core.e" [style="dotted"];
		"numpy._core" -> "numpy._core.equal" [style="dotted"];
		"numpy._core" -> "numpy._core.euler_gamma" [style="dotted"];
		"numpy._core" -> "numpy._core.exp" [style="dotted"];
		"numpy._core" -> "numpy._core.expm1" [style="dotted"];
		"numpy._core" -> "numpy._core.fabs" [style="dotted"];
		"numpy._core" -> "numpy._core.float16" [style="dotted"];
		"numpy._core" -> "numpy._core.float_power" [style="dotted"];
		"numpy._core" -> "numpy._core.floating" [style="dotted"];
		"numpy._core" -> "numpy._core.floor" [style="dotted"];
		"numpy._core" -> "numpy._core.floor_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.fmax" [style="dotted"];
		"numpy._core" -> "numpy._core.fmin" [style="dotted"];
		"numpy._core" -> "numpy._core.fmod" [style="dotted"];
		"numpy._core" -> "numpy._core.frexp" [style="dotted"];
		"numpy._core" -> "numpy._core.frompyfunc" [style="dotted"];
		"numpy._core" -> "numpy._core.gcd" [style="dotted"];
		"numpy._core" -> "numpy._core.greater" [style="dotted"];
		"numpy._core" -> "numpy._core.greater_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.half" [style="dotted"];
		"numpy._core" -> "numpy._core.heaviside" [style="dotted"];
		"numpy._core" -> "numpy._core.hypot" [style="dotted"];
		"numpy._core" -> "numpy._core.int8" [style="dotted"];
		"numpy._core" -> "numpy._core.int16" [style="dotted"];
		"numpy._core" -> "numpy._core.int32" [style="dotted"];
		"numpy._core" -> "numpy._core.int64" [style="dotted"];
		"numpy._core" -> "numpy._core.integer" [style="dotted"];
		"numpy._core" -> "numpy._core.lcm" [style="dotted"];
		"numpy._core" -> "numpy._core.ldexp" [style="dotted"];
		"numpy._core" -> "numpy._core.left_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.less" [style="dotted"];
		"numpy._core" -> "numpy._core.less_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.log" [style="dotted"];
		"numpy._core" -> "numpy._core.log1p" [style="dotted"];
		"numpy._core" -> "numpy._core.log2" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp2" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_and" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_not" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_or" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.long" [style="dotted"];
		"numpy._core" -> "numpy._core.longdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.longlong" [style="dotted"];
		"numpy._core" -> "numpy._core.matvec" [style="dotted"];
		"numpy._core" -> "numpy._core.maximum" [style="dotted"];
		"numpy._core" -> "numpy._core.minimum" [style="dotted"];
		"numpy._core" -> "numpy._core.mod" [style="dotted"];
		"numpy._core" -> "numpy._core.modf" [style="dotted"];
		"numpy._core" -> "numpy._core.negative" [style="dotted"];
		"numpy._core" -> "numpy._core.not_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.pi" [style="dotted"];
		"numpy._core" -> "numpy._core.positive" [style="dotted"];
		"numpy._core" -> "numpy._core.power" [style="dotted"];
		"numpy._core" -> "numpy._core.rad2deg" [style="dotted"];
		"numpy._core" -> "numpy._core.radians" [style="dotted"];
		"numpy._core" -> "numpy._core.remainder" [style="dotted"];
		"numpy._core" -> "numpy._core.right_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.rint" [style="dotted"];
		"numpy._core" -> "numpy._core.short" [style="dotted"];
		"numpy._core" -> "numpy._core.signedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.sinh" [style="dotted"];
		"numpy._core" -> "numpy._core.spacing" [style="dotted"];
		"numpy._core" -> "numpy._core.square" [style="dotted"];
		"numpy._core" -> "numpy._core.str_" [style="dotted"];
		"numpy._core" -> "numpy._core.subtract" [style="dotted"];
		"numpy._core" -> "numpy._core.tan" [style="dotted"];
		"numpy._core" -> "numpy._core.tanh" [style="dotted"];
		"numpy._core" -> "numpy._core.timedelta64" [style="dotted"];
		"numpy._core" -> "numpy._core.true_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.trunc" [style="dotted"];
		"numpy._core" -> "numpy._core.ubyte" [style="dotted"];
		"numpy._core" -> "numpy._core.uint" [style="dotted"];
		"numpy._core" -> "numpy._core.uint16" [style="dotted"];
		"numpy._core" -> "numpy._core.uint32" [style="dotted"];
		"numpy._core" -> "numpy._core.uint64" [style="dotted"];
		"numpy._core" -> "numpy._core.uintc" [style="dotted"];
		"numpy._core" -> "numpy._core.uintp" [style="dotted"];
		"numpy._core" -> "numpy._core.ulong" [style="dotted"];
		"numpy._core" -> "numpy._core.ulonglong" [style="dotted"];
		"numpy._core" -> "numpy._core.unsignedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.ushort" [style="dotted"];
		"numpy._core" -> "numpy._core.vecmat" [style="dotted"];
		"numpy._core" -> "numpy._core.void" [style="dotted"];
		"numpy._core" -> "numpy._core._exceptions" [style="dotted"];
		"numpy._core" -> "numpy._core._multiarray_tests" [style="dotted"];
		"numpy._core" -> "numpy._core._operand_flag_tests" [style="dotted"];
		"numpy._core" -> "numpy._core._rational_tests" [style="dotted"];
		"numpy._core" -> "numpy._core._simd" [style="dotted"];
		"numpy._core" -> "numpy._core._struct_ufunc_tests" [style="dotted"];
		"numpy._core" -> "numpy._core._umath_tests" [style="dotted"];
		"numpy._core" -> "numpy._core.cversions" [style="dotted"];
		"numpy._core" -> "numpy._core.printoptions" [style="dotted"];
		"numpy._core" -> "numpy._core.strings" [style="dotted"];
		"numpy._core" -> "numpy._core.defchararray" [style="dotted"];
		"numpy._core" -> "numpy._core._string_helpers" [style="dotted"];
		"numpy._core" -> "numpy._core._type_aliases" [style="dotted"];
		"numpy._core" -> "numpy._core._ufunc_config" [style="dotted"];
		"numpy._core" -> "numpy._core.lib" [style="dotted"];
		"numpy._core" -> "numpy._core.include" [style="dotted"];
		"numpy._core" -> "numpy._core.tests" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.copy_view" {
		label="pandas.tests.copy_view";
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_array" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_astype" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_chained_assignment_deprecation" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_clip" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_constructors" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_core_functionalities" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_functions" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_indexing" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_internals" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_interp_fillna" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_methods" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_replace" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_setitem" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.test_util" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.util" [style="dotted"];
		"pandas.tests.copy_view" -> "pandas.tests.copy_view.index" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.io.formats.style" {
		label="pandas.tests.io.formats.style";
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_bar" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_exceptions" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_format" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_highlight" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_html" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_matplotlib" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_non_unique" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_style" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_to_latex" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_to_string" [style="dotted"];
		"pandas.tests.io.formats.style" -> "pandas.tests.io.formats.style.test_tooltip" [style="dotted"];
	}
	subgraph "cluster_openpyxl.utils" {
		label="openpyxl.utils";
		"openpyxl.utils" -> "openpyxl.utils.cell" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.formulas" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.dataframe" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.inference" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.exceptions" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.indexed_list" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.datetime" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.protection" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.units" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.bound_dictionary" [style="dotted"];
		"openpyxl.utils" -> "openpyxl.utils.escape" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.scalar.timestamp.methods" {
		label="pandas.tests.scalar.timestamp.methods";
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_as_unit" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_normalize" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_replace" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_round" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_timestamp_method" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_to_julian_date" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_to_pydatetime" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_tz_convert" [style="dotted"];
		"pandas.tests.scalar.timestamp.methods" -> "pandas.tests.scalar.timestamp.methods.test_tz_localize" [style="dotted"];
	}
	subgraph "cluster_openpyxl.reader" {
		label="openpyxl.reader";
		"openpyxl.reader" -> "openpyxl.reader.excel" [style="dotted"];
		"openpyxl.reader" -> "openpyxl.reader.strings" [style="dotted"];
		"openpyxl.reader" -> "openpyxl.reader.workbook" [style="dotted"];
		"openpyxl.reader" -> "openpyxl.reader.drawings" [style="dotted"];
	}
	subgraph "cluster_PyInstaller.utils" {
		label="PyInstaller.utils";
		"PyInstaller.utils" -> "PyInstaller.utils.misc" [style="dotted"];
		"PyInstaller.utils" -> "PyInstaller.utils.hooks" [style="dotted"];
		"PyInstaller.utils" -> "PyInstaller.utils.win32" [style="dotted"];
		"PyInstaller.utils" -> "PyInstaller.utils.osx" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.strings" {
		label="pandas.tests.strings";
		"pandas.tests.strings" -> "pandas.tests.strings.conftest" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_api" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_case_justify" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_cat" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_extract" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_find_replace" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_get_dummies" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_split_partition" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_string_array" [style="dotted"];
		"pandas.tests.strings" -> "pandas.tests.strings.test_strings" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.libs" {
		label="pandas.tests.libs";
		"pandas.tests.libs" -> "pandas.tests.libs.test_hashtable" [style="dotted"];
		"pandas.tests.libs" -> "pandas.tests.libs.test_join" [style="dotted"];
		"pandas.tests.libs" -> "pandas.tests.libs.test_lib" [style="dotted"];
		"pandas.tests.libs" -> "pandas.tests.libs.test_libalgos" [style="dotted"];
	}
	subgraph "cluster_http" {
		label="http";
		"http" -> "http.client" [style="dotted"];
		"http" -> "http.cookiejar" [style="dotted"];
		"http" -> "http.server" [style="dotted"];
		"http" -> "http.cookies" [style="dotted"];
	}
	subgraph "cluster_numpy.polynomial.tests" {
		label="numpy.polynomial.tests";
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_chebyshev" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_classes" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_hermite" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_hermite_e" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_laguerre" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_legendre" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_polynomial" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_polyutils" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_printing" [style="dotted"];
		"numpy.polynomial.tests" -> "numpy.polynomial.tests.test_symbol" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.ranges" {
		label="pandas.tests.indexes.ranges";
		"pandas.tests.indexes.ranges" -> "pandas.tests.indexes.ranges.test_constructors" [style="dotted"];
		"pandas.tests.indexes.ranges" -> "pandas.tests.indexes.ranges.test_indexing" [style="dotted"];
		"pandas.tests.indexes.ranges" -> "pandas.tests.indexes.ranges.test_join" [style="dotted"];
		"pandas.tests.indexes.ranges" -> "pandas.tests.indexes.ranges.test_range" [style="dotted"];
		"pandas.tests.indexes.ranges" -> "pandas.tests.indexes.ranges.test_setops" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.window" {
		label="pandas.tests.window";
		"pandas.tests.window" -> "pandas.tests.window.conftest" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_api" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_apply" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_base_indexer" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_cython_aggregations" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_dtypes" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_ewm" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_expanding" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_groupby" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_numba" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_online" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_pairwise" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_rolling" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_rolling_functions" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_rolling_quantile" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_rolling_skew_kurt" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_timeseries_window" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.test_win_type" [style="dotted"];
		"pandas.tests.window" -> "pandas.tests.window.moments" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils.compat" {
		label="setuptools._distutils.compat";
		"setuptools._distutils.compat" -> "setuptools._distutils.compat.py39" [style="dotted"];
		"setuptools._distutils.compat" -> "setuptools._distutils.compat.numpy" [style="dotted"];
	}
	subgraph "cluster_pandas.api.extensions" {
		label="pandas.api.extensions";
	}
	subgraph "cluster_numpy.random._examples" {
		label="numpy.random._examples";
		"numpy.random._examples" -> "numpy.random._examples.cffi" [style="dotted"];
		"numpy.random._examples" -> "numpy.random._examples.numba" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.reshape" {
		label="pandas.tests.reshape";
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_crosstab" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_cut" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_from_dummies" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_get_dummies" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_melt" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_pivot" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_pivot_multilevel" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_qcut" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_union_categoricals" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.test_util" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.merge" [style="dotted"];
		"pandas.tests.reshape" -> "pandas.tests.reshape.concat" [style="dotted"];
	}
	subgraph "cluster_openpyxl.styles" {
		label="openpyxl.styles";
		"openpyxl.styles" -> "openpyxl.styles.alignment" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.borders" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.colors" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.fills" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.fonts" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.numbers" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.protection" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.named_styles" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.stylesheet" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.cell_style" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.styleable" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.proxy" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.builtins" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.differential" [style="dotted"];
		"openpyxl.styles" -> "openpyxl.styles.table" [style="dotted"];
	}
	subgraph "cluster_pandas.io.json" {
		label="pandas.io.json";
		"pandas.io.json" -> "pandas.io.json._json" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._table_schema" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._normalize" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco.functools" {
		label="setuptools._vendor.jaraco.functools";
	}
	subgraph "cluster_pandas.tests.extension" {
		label="pandas.tests.extension";
		"pandas.tests.extension" -> "pandas.tests.extension.conftest" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_arrow" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_categorical" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_common" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_datetime" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_extension" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_interval" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_masked" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_numpy" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_period" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_sparse" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.test_string" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.decimal" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.base" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.list" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.json" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.date" [style="dotted"];
		"pandas.tests.extension" -> "pandas.tests.extension.array_with_attr" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.construction" {
		label="pandas.tests.construction";
		"pandas.tests.construction" -> "pandas.tests.construction.test_extract_array" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.plotting.frame" {
		label="pandas.tests.plotting.frame";
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_frame" [style="dotted"];
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_frame_color" [style="dotted"];
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_frame_groupby" [style="dotted"];
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_frame_legend" [style="dotted"];
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_frame_subplots" [style="dotted"];
		"pandas.tests.plotting.frame" -> "pandas.tests.plotting.frame.test_hist_box_by" [style="dotted"];
	}
	subgraph "cluster_pandas.core.groupby" {
		label="pandas.core.groupby";
		"pandas.core.groupby" -> "pandas.core.groupby.ops" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.grouper" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.base" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.numba_" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.groupby" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.generic" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.categorical" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.indexing" [style="dotted"];
	}
	subgraph "cluster_numpy.random" {
		label="numpy.random";
		"numpy.random" -> "numpy.random._bounded_integers" [style="dotted"];
		"numpy.random" -> "numpy.random._common" [style="dotted"];
		"numpy.random" -> "numpy.random.RandomState" [style="dotted"];
		"numpy.random" -> "numpy.random._pickle" [style="dotted"];
		"numpy.random" -> "numpy.random._generator" [style="dotted"];
		"numpy.random" -> "numpy.random._mt19937" [style="dotted"];
		"numpy.random" -> "numpy.random._pcg64" [style="dotted"];
		"numpy.random" -> "numpy.random._philox" [style="dotted"];
		"numpy.random" -> "numpy.random._sfc64" [style="dotted"];
		"numpy.random" -> "numpy.random.bit_generator" [style="dotted"];
		"numpy.random" -> "numpy.random.mtrand" [style="dotted"];
		"numpy.random" -> "numpy.random._examples" [style="dotted"];
		"numpy.random" -> "numpy.random.tests" [style="dotted"];
	}
	subgraph "cluster_json" {
		label="json";
		"json" -> "json.scanner" [style="dotted"];
		"json" -> "json.decoder" [style="dotted"];
		"json" -> "json.encoder" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexing.interval" {
		label="pandas.tests.indexing.interval";
		"pandas.tests.indexing.interval" -> "pandas.tests.indexing.interval.test_interval" [style="dotted"];
		"pandas.tests.indexing.interval" -> "pandas.tests.indexing.interval.test_interval_new" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.indexes.period.methods" {
		label="pandas.tests.indexes.period.methods";
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_asfreq" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_astype" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_factorize" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_fillna" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_insert" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_is_full" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_repeat" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_shift" [style="dotted"];
		"pandas.tests.indexes.period.methods" -> "pandas.tests.indexes.period.methods.test_to_timestamp" [style="dotted"];
	}
	subgraph "cluster_urllib3.util" {
		label="urllib3.util";
		"urllib3.util" -> "urllib3.util.connection" [style="dotted"];
		"urllib3.util" -> "urllib3.util.request" [style="dotted"];
		"urllib3.util" -> "urllib3.util.response" [style="dotted"];
		"urllib3.util" -> "urllib3.util.retry" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_" [style="dotted"];
		"urllib3.util" -> "urllib3.util.timeout" [style="dotted"];
		"urllib3.util" -> "urllib3.util.url" [style="dotted"];
		"urllib3.util" -> "urllib3.util.wait" [style="dotted"];
		"urllib3.util" -> "urllib3.util.util" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssltransport" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_match_hostname" [style="dotted"];
		"urllib3.util" -> "urllib3.util.proxy" [style="dotted"];
	}
	subgraph "cluster_pandas.tests.series" {
		label="pandas.tests.series";
		"pandas.tests.series" -> "pandas.tests.series.test_api" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_arithmetic" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_constructors" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_cumulative" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_formats" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_iteration" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_logical_ops" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_missing" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_npfuncs" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_reductions" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_subclass" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_ufunc" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_unary" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.test_validate" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.methods" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.indexing" [style="dotted"];
		"pandas.tests.series" -> "pandas.tests.series.accessors" [style="dotted"];
	}
	subgraph "cluster_sqlite3" {
		label="sqlite3";
		"sqlite3" -> "sqlite3.dbapi2" [style="dotted"];
		"sqlite3" -> "sqlite3.__main__" [style="dotted"];
		"sqlite3" -> "sqlite3.dump" [style="dotted"];
	}
	subgraph "cluster_pandas._config" {
		label="pandas._config";
		"pandas._config" -> "pandas._config.config" [style="dotted"];
		"pandas._config" -> "pandas._config.dates" [style="dotted"];
		"pandas._config" -> "pandas._config.display" [style="dotted"];
		"pandas._config" -> "pandas._config.localization" [style="dotted"];
	}
	subgraph "cluster_tzdata.zoneinfo.Australia" {
		label="tzdata.zoneinfo.Australia";
	}
	"<PyiModuleGraph>" -> "gc" [];
	"<PyiModuleGraph>" -> "time" [];
	"<PyiModuleGraph>" -> "codecs" [];
	"<PyiModuleGraph>" -> "_sre" [];
	"<PyiModuleGraph>" -> "posix" [];
	"<PyiModuleGraph>" -> "ntpath" [];
	"<PyiModuleGraph>" -> "_pickle" [];
	"<PyiModuleGraph>" -> "_datetime" [];
	"<PyiModuleGraph>" -> "datetime" [];
	"<PyiModuleGraph>" -> "_posixsubprocess" [];
	"<PyiModuleGraph>" -> "sre_compile" [];
	"<PyiModuleGraph>" -> "re" [];
	"<PyiModuleGraph>" -> "os" [];
	"<PyiModuleGraph>" -> "weakref" [];
	"<PyiModuleGraph>" -> "heapq" [];
	"<PyiModuleGraph>" -> "sre_parse" [];
	"<PyiModuleGraph>" -> "functools" [];
	"<PyiModuleGraph>" -> "keyword" [];
	"<PyiModuleGraph>" -> "abc" [];
	"<PyiModuleGraph>" -> "warnings" [];
	"<PyiModuleGraph>" -> "operator" [];
	"<PyiModuleGraph>" -> "posixpath" [];
	"<PyiModuleGraph>" -> "sre_constants" [];
	"<PyiModuleGraph>" -> "traceback" [];
	"<PyiModuleGraph>" -> "stat" [];
	"<PyiModuleGraph>" -> "types" [];
	"<PyiModuleGraph>" -> "genericpath" [];
	"<PyiModuleGraph>" -> "reprlib" [];
	"<PyiModuleGraph>" -> "encodings" [];
	"<PyiModuleGraph>" -> "io" [];
	"<PyiModuleGraph>" -> "enum" [];
	"<PyiModuleGraph>" -> "linecache" [];
	"<PyiModuleGraph>" -> "copyreg" [];
	"<PyiModuleGraph>" -> "_collections_abc" [];
	"<PyiModuleGraph>" -> "_weakrefset" [];
	"<PyiModuleGraph>" -> "locale" [];
	"<PyiModuleGraph>" -> "collections" [];
	"<PyiModuleGraph>" -> "D:\JAVA\code\pdd_project_final\main.py" [];
	"<PyiModuleGraph>" -> "_ssl" [];
	"<PyiModuleGraph>" -> "_json" [];
	"<PyiModuleGraph>" -> "zipimport" [];
	"<PyiModuleGraph>" -> "_elementtree" [];
	"<PyiModuleGraph>" -> "_thread" [];
	"<PyiModuleGraph>" -> "winreg" [];
	"setuptools._distutils.util" -> "__future__" [];
	"setuptools._distutils.util" -> "functools" [];
	"setuptools._distutils.util" -> "os" [];
	"setuptools._distutils.util" -> "pathlib" [];
	"setuptools._distutils.util" -> "re" [];
	"setuptools._distutils.util" -> "string" [];
	"setuptools._distutils.util" -> "subprocess" [];
	"setuptools._distutils.util" -> "sys" [];
	"setuptools._distutils.util" -> "sysconfig" [];
	"setuptools._distutils.util" -> "tempfile" [];
	"setuptools._distutils.util" -> "typing" [];
	"setuptools._distutils.util" -> "typing_extensions" [];
	"setuptools._distutils.util" -> "typing_extensions.TypeVarTuple" [];
	"setuptools._distutils.util" -> "typing_extensions.Unpack" [];
	"setuptools._distutils.util" -> "distutils" [];
	"setuptools._distutils.util" -> "pwd" [];
	"setuptools._distutils.util" -> "warnings" [];
	"setuptools._distutils.util" -> "py_compile" [];
	"py_compile" -> "enum" [];
	"py_compile" -> "os" [];
	"py_compile" -> "os.path" [];
	"py_compile" -> "sys" [];
	"py_compile" -> "traceback" [];
	"py_compile" -> "argparse" [];
	"argparse" -> "os" [];
	"argparse" -> "re" [];
	"argparse" -> "sys" [];
	"argparse" -> "warnings" [];
	"argparse" -> "gettext" [];
	"argparse" -> "copy" [];
	"argparse" -> "shutil" [];
	"argparse" -> "textwrap" [];
	"textwrap" -> "re" [];
	"shutil" -> "os" [];
	"shutil" -> "sys" [];
	"shutil" -> "stat" [];
	"shutil" -> "fnmatch" [];
	"shutil" -> "collections" [];
	"shutil" -> "errno" [];
	"shutil" -> "warnings" [];
	"shutil" -> "zlib" [];
	"shutil" -> "bz2" [];
	"shutil" -> "lzma" [];
	"shutil" -> "posix" [];
	"shutil" -> "nt" [];
	"shutil" -> "_winapi" [];
	"shutil" -> "grp" [];
	"shutil" -> "pwd" [];
	"shutil" -> "tarfile" [];
	"shutil" -> "zipfile" [];
	"zipfile" -> "binascii" [];
	"zipfile" -> "io" [];
	"zipfile" -> "os" [];
	"zipfile" -> "shutil" [];
	"zipfile" -> "stat" [];
	"zipfile" -> "struct" [];
	"zipfile" -> "sys" [];
	"zipfile" -> "threading" [];
	"zipfile" -> "time" [];
	"zipfile" -> "zlib" [];
	"zipfile" -> "bz2" [];
	"zipfile" -> "lzma" [];
	"zipfile" -> "warnings" [];
	"zipfile" -> "py_compile" [];
	"zipfile" -> "argparse" [];
	"zipfile._path" -> "io" [];
	"zipfile._path" -> "posixpath" [];
	"zipfile._path" -> "itertools" [];
	"zipfile._path" -> "contextlib" [];
	"zipfile._path" -> "pathlib" [];
	"zipfile._path" -> "re" [];
	"zipfile._path.glob" -> "re" [];
	"contextlib" -> "abc" [];
	"contextlib" -> "os" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "_collections_abc" [];
	"contextlib" -> "collections" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "types" [];
	"threading" -> "os" [];
	"threading" -> "sys" [];
	"threading" -> "_thread" [];
	"threading" -> "functools" [];
	"threading" -> "time" [];
	"threading" -> "_weakrefset" [];
	"threading" -> "itertools" [];
	"threading" -> "_collections" [];
	"threading" -> "collections" [];
	"threading" -> "warnings" [];
	"threading" -> "traceback" [];
	"threading" -> "_threading_local" [];
	"_threading_local" -> "weakref" [];
	"_threading_local" -> "contextlib" [];
	"_threading_local" -> "threading" [];
	"struct" -> "_struct" [];
	"tarfile" -> "builtins" [];
	"tarfile" -> "sys" [];
	"tarfile" -> "os" [];
	"tarfile" -> "io" [];
	"tarfile" -> "shutil" [];
	"tarfile" -> "stat" [];
	"tarfile" -> "time" [];
	"tarfile" -> "struct" [];
	"tarfile" -> "copy" [];
	"tarfile" -> "re" [];
	"tarfile" -> "warnings" [];
	"tarfile" -> "pwd" [];
	"tarfile" -> "grp" [];
	"tarfile" -> "zlib" [];
	"tarfile" -> "bz2" [];
	"tarfile" -> "lzma" [];
	"tarfile" -> "gzip" [];
	"tarfile" -> "argparse" [];
	"gzip" -> "struct" [];
	"gzip" -> "sys" [];
	"gzip" -> "time" [];
	"gzip" -> "os" [];
	"gzip" -> "zlib" [];
	"gzip" -> "builtins" [];
	"gzip" -> "io" [];
	"gzip" -> "_compression" [];
	"gzip" -> "warnings" [];
	"gzip" -> "errno" [];
	"gzip" -> "argparse" [];
	"_compression" -> "io" [];
	"_compression" -> "sys" [];
	"lzma" -> "builtins" [];
	"lzma" -> "io" [];
	"lzma" -> "os" [];
	"lzma" -> "_lzma" [];
	"lzma" -> "_compression" [];
	"bz2" -> "builtins" [];
	"bz2" -> "io" [];
	"bz2" -> "os" [];
	"bz2" -> "_compression" [];
	"bz2" -> "_bz2" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "functools" [];
	"copy" -> "types" [];
	"copy" -> "weakref" [];
	"copy" -> "copyreg" [];
	"gettext" -> "operator" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "sys" [];
	"gettext" -> "warnings" [];
	"gettext" -> "locale" [];
	"gettext" -> "builtins" [];
	"gettext" -> "struct" [];
	"gettext" -> "errno" [];
	"gettext" -> "copy" [];
	"os.path" -> "ntpath" [];
	"os.path" -> "os" [];
	"importlib" -> "_imp" [];
	"importlib" -> "sys" [];
	"importlib" -> "_frozen_importlib" [];
	"importlib" -> "_frozen_importlib_external" [];
	"importlib" -> "warnings" [];
	"importlib._bootstrap" -> "_frozen_importlib_external" [];
	"importlib._bootstrap_external" -> "_imp" [];
	"importlib._bootstrap_external" -> "_io" [];
	"importlib._bootstrap_external" -> "sys" [];
	"importlib._bootstrap_external" -> "_warnings" [];
	"importlib._bootstrap_external" -> "marshal" [];
	"importlib._bootstrap_external" -> "nt" [];
	"importlib._bootstrap_external" -> "winreg" [];
	"importlib._bootstrap_external" -> "posix" [];
	"importlib._bootstrap_external" -> "tokenize" [];
	"importlib.metadata" -> "os" [];
	"importlib.metadata" -> "re" [];
	"importlib.metadata" -> "abc" [];
	"importlib.metadata" -> "csv" [];
	"importlib.metadata" -> "sys" [];
	"importlib.metadata" -> "email" [];
	"importlib.metadata" -> "pathlib" [];
	"importlib.metadata" -> "zipfile" [];
	"importlib.metadata" -> "operator" [];
	"importlib.metadata" -> "textwrap" [];
	"importlib.metadata" -> "warnings" [];
	"importlib.metadata" -> "functools" [];
	"importlib.metadata" -> "itertools" [];
	"importlib.metadata" -> "posixpath" [];
	"importlib.metadata" -> "contextlib" [];
	"importlib.metadata" -> "collections" [];
	"importlib.metadata" -> "inspect" [];
	"importlib.metadata" -> "typing" [];
	"importlib.abc" -> "_frozen_importlib" [];
	"importlib.abc" -> "_frozen_importlib_external" [];
	"importlib.abc" -> "abc" [];
	"importlib.abc" -> "warnings" [];
	"importlib.resources.abc" -> "abc" [];
	"importlib.resources.abc" -> "io" [];
	"importlib.resources.abc" -> "itertools" [];
	"importlib.resources.abc" -> "os" [];
	"importlib.resources.abc" -> "pathlib" [];
	"importlib.resources.abc" -> "typing" [];
	"importlib.resources._legacy" -> "functools" [];
	"importlib.resources._legacy" -> "os" [];
	"importlib.resources._legacy" -> "pathlib" [];
	"importlib.resources._legacy" -> "types" [];
	"importlib.resources._legacy" -> "warnings" [];
	"importlib.resources._legacy" -> "typing" [];
	"importlib.resources._common" -> "os" [];
	"importlib.resources._common" -> "pathlib" [];
	"importlib.resources._common" -> "tempfile" [];
	"importlib.resources._common" -> "functools" [];
	"importlib.resources._common" -> "contextlib" [];
	"importlib.resources._common" -> "types" [];
	"importlib.resources._common" -> "importlib" [];
	"importlib.resources._common" -> "inspect" [];
	"importlib.resources._common" -> "warnings" [];
	"importlib.resources._common" -> "itertools" [];
	"importlib.resources._common" -> "typing" [];
	"importlib.resources._adapters" -> "contextlib" [];
	"importlib.resources._adapters" -> "io" [];
	"importlib._abc" -> "abc" [];
	"importlib.metadata._itertools" -> "itertools" [];
	"importlib.metadata._functools" -> "types" [];
	"importlib.metadata._functools" -> "functools" [];
	"importlib.metadata._collections" -> "collections" [];
	"importlib.metadata._meta" -> "typing" [];
	"importlib.metadata._adapters" -> "functools" [];
	"importlib.metadata._adapters" -> "warnings" [];
	"importlib.metadata._adapters" -> "re" [];
	"importlib.metadata._adapters" -> "textwrap" [];
	"importlib.metadata._text" -> "re" [];
	"email.message" -> "binascii" [];
	"email.message" -> "re" [];
	"email.message" -> "quopri" [];
	"email.message" -> "io" [];
	"email.policy" -> "re" [];
	"email.policy" -> "sys" [];
	"email.contentmanager" -> "binascii" [];
	"email.quoprimime" -> "re" [];
	"email.quoprimime" -> "string" [];
	"email.headerregistry" -> "types" [];
	"email._header_value_parser" -> "re" [];
	"email._header_value_parser" -> "sys" [];
	"email._header_value_parser" -> "urllib" [];
	"email._header_value_parser" -> "string" [];
	"email._header_value_parser" -> "operator" [];
	"email.iterators" -> "sys" [];
	"email.iterators" -> "io" [];
	"email.generator" -> "re" [];
	"email.generator" -> "sys" [];
	"email.generator" -> "time" [];
	"email.generator" -> "random" [];
	"email.generator" -> "copy" [];
	"email.generator" -> "io" [];
	"random" -> "warnings" [];
	"random" -> "math" [];
	"random" -> "os" [];
	"random" -> "_collections_abc" [];
	"random" -> "operator" [];
	"random" -> "itertools" [];
	"random" -> "bisect" [];
	"random" -> "_random" [];
	"random" -> "_sha2" [];
	"random" -> "hashlib" [];
	"random" -> "statistics" [];
	"random" -> "time" [];
	"statistics" -> "math" [];
	"statistics" -> "numbers" [];
	"statistics" -> "random" [];
	"statistics" -> "sys" [];
	"statistics" -> "fractions" [];
	"statistics" -> "decimal" [];
	"statistics" -> "itertools" [];
	"statistics" -> "bisect" [];
	"statistics" -> "functools" [];
	"statistics" -> "operator" [];
	"statistics" -> "collections" [];
	"statistics" -> "_statistics" [];
	"decimal" -> "_decimal" [];
	"decimal" -> "_pydecimal" [];
	"_pydecimal" -> "math" [];
	"_pydecimal" -> "numbers" [];
	"_pydecimal" -> "sys" [];
	"_pydecimal" -> "collections" [];
	"_pydecimal" -> "contextvars" [];
	"_pydecimal" -> "re" [];
	"_pydecimal" -> "locale" [];
	"_pydecimal" -> "itertools" [];
	"contextvars" -> "_contextvars" [];
	"fractions" -> "decimal" [];
	"fractions" -> "functools" [];
	"fractions" -> "math" [];
	"fractions" -> "numbers" [];
	"fractions" -> "operator" [];
	"fractions" -> "re" [];
	"fractions" -> "sys" [];
	"numbers" -> "abc" [];
	"hashlib" -> "_sha1" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha2" [];
	"hashlib" -> "_blake2" [];
	"hashlib" -> "_sha3" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "logging" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "io" [];
	"logging" -> "re" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "types" [];
	"logging" -> "string" [];
	"logging" -> "threading" [];
	"logging" -> "pickle" [];
	"logging" -> "atexit" [];
	"pickle" -> "types" [];
	"pickle" -> "copyreg" [];
	"pickle" -> "itertools" [];
	"pickle" -> "functools" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "io" [];
	"pickle" -> "codecs" [];
	"pickle" -> "_compat_pickle" [];
	"pickle" -> "_pickle" [];
	"pickle" -> "pprint" [];
	"pprint" -> "collections" [];
	"pprint" -> "dataclasses" [];
	"pprint" -> "re" [];
	"pprint" -> "sys" [];
	"pprint" -> "types" [];
	"pprint" -> "io" [];
	"dataclasses" -> "re" [];
	"dataclasses" -> "sys" [];
	"dataclasses" -> "copy" [];
	"dataclasses" -> "types" [];
	"dataclasses" -> "inspect" [];
	"dataclasses" -> "keyword" [];
	"dataclasses" -> "functools" [];
	"dataclasses" -> "itertools" [];
	"dataclasses" -> "abc" [];
	"dataclasses" -> "_thread" [];
	"bisect" -> "_bisect" [];
	"email._encoded_words" -> "re" [];
	"email._encoded_words" -> "base64" [];
	"email._encoded_words" -> "binascii" [];
	"email._encoded_words" -> "functools" [];
	"email._encoded_words" -> "string" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"getopt" -> "os" [];
	"getopt" -> "gettext" [];
	"getopt" -> "sys" [];
	"email.charset" -> "functools" [];
	"email.encoders" -> "base64" [];
	"email.encoders" -> "quopri" [];
	"email.base64mime" -> "base64" [];
	"email.base64mime" -> "binascii" [];
	"email._policybase" -> "abc" [];
	"email.header" -> "re" [];
	"email.header" -> "binascii" [];
	"email.utils" -> "os" [];
	"email.utils" -> "re" [];
	"email.utils" -> "time" [];
	"email.utils" -> "random" [];
	"email.utils" -> "socket" [];
	"email.utils" -> "datetime" [];
	"email.utils" -> "warnings" [];
	"email._parseaddr" -> "time" [];
	"email._parseaddr" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "enum" [];
	"calendar" -> "locale" [];
	"calendar" -> "itertools" [];
	"calendar" -> "warnings" [];
	"calendar" -> "argparse" [];
	"urllib.parse" -> "collections" [];
	"urllib.parse" -> "functools" [];
	"urllib.parse" -> "math" [];
	"urllib.parse" -> "re" [];
	"urllib.parse" -> "types" [];
	"urllib.parse" -> "warnings" [];
	"urllib.parse" -> "ipaddress" [];
	"urllib.parse" -> "unicodedata" [];
	"ipaddress" -> "functools" [];
	"ipaddress" -> "re" [];
	"socket" -> "_socket" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "io" [];
	"socket" -> "selectors" [];
	"socket" -> "enum" [];
	"socket" -> "errno" [];
	"socket" -> "array" [];
	"selectors" -> "abc" [];
	"selectors" -> "collections" [];
	"selectors" -> "math" [];
	"selectors" -> "select" [];
	"selectors" -> "sys" [];
	"quopri" -> "binascii" [];
	"quopri" -> "io" [];
	"quopri" -> "sys" [];
	"quopri" -> "getopt" [];
	"inspect" -> "abc" [];
	"inspect" -> "ast" [];
	"inspect" -> "dis" [];
	"inspect" -> "enum" [];
	"inspect" -> "itertools" [];
	"inspect" -> "linecache" [];
	"inspect" -> "os" [];
	"inspect" -> "re" [];
	"inspect" -> "sys" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "token" [];
	"inspect" -> "types" [];
	"inspect" -> "functools" [];
	"inspect" -> "builtins" [];
	"inspect" -> "keyword" [];
	"inspect" -> "operator" [];
	"inspect" -> "collections" [];
	"inspect" -> "argparse" [];
	"inspect" -> "importlib" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "collections" [];
	"dis" -> "io" [];
	"dis" -> "opcode" [];
	"dis" -> "argparse" [];
	"opcode" -> "_opcode" [];
	"ast" -> "sys" [];
	"ast" -> "re" [];
	"ast" -> "_ast" [];
	"ast" -> "contextlib" [];
	"ast" -> "enum" [];
	"ast" -> "inspect" [];
	"ast" -> "collections" [];
	"ast" -> "warnings" [];
	"ast" -> "argparse" [];
	"email.parser" -> "io" [];
	"email.feedparser" -> "re" [];
	"email.feedparser" -> "collections" [];
	"email.feedparser" -> "io" [];
	"csv" -> "re" [];
	"csv" -> "types" [];
	"csv" -> "_csv" [];
	"csv" -> "io" [];
	"importlib.resources.readers" -> "collections" [];
	"importlib.resources.readers" -> "itertools" [];
	"importlib.resources.readers" -> "pathlib" [];
	"importlib.resources.readers" -> "operator" [];
	"importlib.resources.readers" -> "zipfile" [];
	"tokenize" -> "builtins" [];
	"tokenize" -> "codecs" [];
	"tokenize" -> "collections" [];
	"tokenize" -> "functools" [];
	"tokenize" -> "io" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "re" [];
	"tokenize" -> "sys" [];
	"tokenize" -> "token" [];
	"tokenize" -> "_tokenize" [];
	"tokenize" -> "argparse" [];
	"setuptools._distutils.sysconfig" -> "__future__" [];
	"setuptools._distutils.sysconfig" -> "functools" [];
	"setuptools._distutils.sysconfig" -> "os" [];
	"setuptools._distutils.sysconfig" -> "pathlib" [];
	"setuptools._distutils.sysconfig" -> "re" [];
	"setuptools._distutils.sysconfig" -> "sys" [];
	"setuptools._distutils.sysconfig" -> "sysconfig" [];
	"setuptools._distutils.sysconfig" -> "typing" [];
	"setuptools._distutils.sysconfig" -> "typing_extensions" [];
	"setuptools._distutils.sysconfig" -> "typing_extensions.deprecated" [];
	"setuptools._distutils.sysconfig" -> "warnings" [];
	"setuptools._distutils.sysconfig" -> "distutils" [];
	"setuptools._distutils.text_file" -> "sys" [];
	"setuptools._distutils.text_file" -> "distutils" [];
	"setuptools._distutils.compat.py39" -> "functools" [];
	"setuptools._distutils.compat.py39" -> "itertools" [];
	"setuptools._distutils.compat.py39" -> "platform" [];
	"setuptools._distutils.compat.py39" -> "sys" [];
	"setuptools._distutils.compat.py39" -> "_imp" [];
	"platform" -> "collections" [];
	"platform" -> "os" [];
	"platform" -> "re" [];
	"platform" -> "sys" [];
	"platform" -> "functools" [];
	"platform" -> "itertools" [];
	"platform" -> "subprocess" [];
	"platform" -> "_wmi" [];
	"platform" -> "winreg" [];
	"platform" -> "_winreg" [];
	"platform" -> "java" [];
	"platform" -> "'java.lang'" [];
	"platform" -> "socket" [];
	"platform" -> "struct" [];
	"platform" -> "vms_lib" [];
	"setuptools._distutils.compat" -> "__future__" [];
	"setuptools._distutils.compat" -> "typing" [];
	"setuptools._distutils.compilers.C.base" -> "__future__" [];
	"setuptools._distutils.compilers.C.base" -> "os" [];
	"setuptools._distutils.compilers.C.base" -> "pathlib" [];
	"setuptools._distutils.compilers.C.base" -> "re" [];
	"setuptools._distutils.compilers.C.base" -> "sys" [];
	"setuptools._distutils.compilers.C.base" -> "warnings" [];
	"setuptools._distutils.compilers.C.base" -> "typing" [];
	"setuptools._distutils.compilers.C.base" -> "more_itertools" [];
	"setuptools._distutils.compilers.C.base" -> "typing_extensions" [];
	"setuptools._distutils.compilers.C.base" -> "typing_extensions.TypeAlias" [];
	"setuptools._distutils.compilers.C.base" -> "typing_extensions.TypeVarTuple" [];
	"setuptools._distutils.compilers.C.base" -> "typing_extensions.Unpack" [];
	"setuptools._distutils.compilers.C.base" -> "tempfile" [];
	"setuptools._distutils.fancy_getopt" -> "__future__" [];
	"setuptools._distutils.fancy_getopt" -> "getopt" [];
	"setuptools._distutils.fancy_getopt" -> "re" [];
	"setuptools._distutils.fancy_getopt" -> "string" [];
	"setuptools._distutils.fancy_getopt" -> "sys" [];
	"setuptools._distutils.fancy_getopt" -> "typing" [];
	"setuptools._distutils.fancy_getopt" -> "distutils" [];
	"setuptools._distutils.debug" -> "os" [];
	"setuptools._distutils.debug" -> "distutils" [];
	"setuptools._distutils.file_util" -> "os" [];
	"setuptools._distutils.file_util" -> "stat" [];
	"setuptools._distutils.file_util" -> "errno" [];
	"setuptools._distutils.file_util" -> "os.path" [];
	"setuptools._distutils.dir_util" -> "functools" [];
	"setuptools._distutils.dir_util" -> "itertools" [];
	"setuptools._distutils.dir_util" -> "os" [];
	"setuptools._distutils.dir_util" -> "pathlib" [];
	"setuptools._distutils.dir_util" -> "distutils" [];
	"setuptools._distutils.compilers.C.msvc" -> "__future__" [];
	"setuptools._distutils.compilers.C.msvc" -> "contextlib" [];
	"setuptools._distutils.compilers.C.msvc" -> "os" [];
	"setuptools._distutils.compilers.C.msvc" -> "subprocess" [];
	"setuptools._distutils.compilers.C.msvc" -> "warnings" [];
	"setuptools._distutils.compilers.C.msvc" -> "winreg" [];
	"setuptools._distutils.compilers.C.msvc" -> "itertools" [];
	"unittest.mock" -> "asyncio" [];
	"unittest.mock" -> "contextlib" [];
	"unittest.mock" -> "io" [];
	"unittest.mock" -> "inspect" [];
	"unittest.mock" -> "pprint" [];
	"unittest.mock" -> "sys" [];
	"unittest.mock" -> "builtins" [];
	"unittest.mock" -> "pkgutil" [];
	"unittest.mock" -> "types" [];
	"unittest.mock" -> "functools" [];
	"unittest.mock" -> "threading" [];
	"unittest.mock" -> "_io" [];
	"unittest.async_case" -> "asyncio" [];
	"unittest.async_case" -> "contextvars" [];
	"unittest.async_case" -> "inspect" [];
	"unittest.async_case" -> "warnings" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"signal" -> "_signal" [];
	"signal" -> "enum" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "argparse" [];
	"unittest.main" -> "os" [];
	"unittest.main" -> "warnings" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.runner" -> "warnings" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "fnmatch" [];
	"unittest.loader" -> "warnings" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "warnings" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "contextlib" [];
	"unittest.case" -> "traceback" [];
	"unittest.case" -> "time" [];
	"unittest.case" -> "types" [];
	"unittest._log" -> "logging" [];
	"unittest._log" -> "collections" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "types" [];
	"difflib" -> "re" [];
	"difflib" -> "difflib" [];
	"unittest.result" -> "io" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "os.path" [];
	"pkgutil" -> "collections" [];
	"pkgutil" -> "functools" [];
	"pkgutil" -> "importlib" [];
	"pkgutil" -> "os" [];
	"pkgutil" -> "os.path" [];
	"pkgutil" -> "sys" [];
	"pkgutil" -> "types" [];
	"pkgutil" -> "warnings" [];
	"pkgutil" -> "marshal" [];
	"pkgutil" -> "inspect" [];
	"pkgutil" -> "zipimport" [];
	"pkgutil" -> "re" [];
	"asyncio" -> "sys" [];
	"asyncio.unix_events" -> "errno" [];
	"asyncio.unix_events" -> "io" [];
	"asyncio.unix_events" -> "itertools" [];
	"asyncio.unix_events" -> "os" [];
	"asyncio.unix_events" -> "selectors" [];
	"asyncio.unix_events" -> "signal" [];
	"asyncio.unix_events" -> "socket" [];
	"asyncio.unix_events" -> "stat" [];
	"asyncio.unix_events" -> "subprocess" [];
	"asyncio.unix_events" -> "sys" [];
	"asyncio.unix_events" -> "threading" [];
	"asyncio.unix_events" -> "warnings" [];
	"asyncio.log" -> "logging" [];
	"asyncio.windows_events" -> "sys" [];
	"asyncio.windows_events" -> "_overlapped" [];
	"asyncio.windows_events" -> "_winapi" [];
	"asyncio.windows_events" -> "errno" [];
	"asyncio.windows_events" -> "math" [];
	"asyncio.windows_events" -> "msvcrt" [];
	"asyncio.windows_events" -> "socket" [];
	"asyncio.windows_events" -> "struct" [];
	"asyncio.windows_events" -> "time" [];
	"asyncio.windows_events" -> "weakref" [];
	"asyncio.windows_utils" -> "sys" [];
	"asyncio.windows_utils" -> "_winapi" [];
	"asyncio.windows_utils" -> "itertools" [];
	"asyncio.windows_utils" -> "msvcrt" [];
	"asyncio.windows_utils" -> "os" [];
	"asyncio.windows_utils" -> "subprocess" [];
	"asyncio.windows_utils" -> "tempfile" [];
	"asyncio.windows_utils" -> "warnings" [];
	"asyncio.selector_events" -> "collections" [];
	"asyncio.selector_events" -> "errno" [];
	"asyncio.selector_events" -> "functools" [];
	"asyncio.selector_events" -> "itertools" [];
	"asyncio.selector_events" -> "os" [];
	"asyncio.selector_events" -> "selectors" [];
	"asyncio.selector_events" -> "socket" [];
	"asyncio.selector_events" -> "warnings" [];
	"asyncio.selector_events" -> "weakref" [];
	"asyncio.selector_events" -> "ssl" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "enum" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "socket" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "calendar" [];
	"asyncio.proactor_events" -> "io" [];
	"asyncio.proactor_events" -> "os" [];
	"asyncio.proactor_events" -> "socket" [];
	"asyncio.proactor_events" -> "warnings" [];
	"asyncio.proactor_events" -> "signal" [];
	"asyncio.proactor_events" -> "threading" [];
	"asyncio.proactor_events" -> "collections" [];
	"asyncio.base_subprocess" -> "collections" [];
	"asyncio.base_subprocess" -> "subprocess" [];
	"asyncio.base_subprocess" -> "warnings" [];
	"asyncio.threads" -> "functools" [];
	"asyncio.threads" -> "contextvars" [];
	"asyncio.subprocess" -> "subprocess" [];
	"asyncio.streams" -> "collections" [];
	"asyncio.streams" -> "socket" [];
	"asyncio.streams" -> "sys" [];
	"asyncio.streams" -> "warnings" [];
	"asyncio.streams" -> "weakref" [];
	"asyncio.queues" -> "collections" [];
	"asyncio.queues" -> "heapq" [];
	"asyncio.queues" -> "types" [];
	"asyncio.runners" -> "contextvars" [];
	"asyncio.runners" -> "enum" [];
	"asyncio.runners" -> "functools" [];
	"asyncio.runners" -> "threading" [];
	"asyncio.runners" -> "signal" [];
	"asyncio.base_events" -> "collections" [];
	"asyncio.base_events" -> "errno" [];
	"asyncio.base_events" -> "functools" [];
	"asyncio.base_events" -> "heapq" [];
	"asyncio.base_events" -> "itertools" [];
	"asyncio.base_events" -> "os" [];
	"asyncio.base_events" -> "socket" [];
	"asyncio.base_events" -> "stat" [];
	"asyncio.base_events" -> "subprocess" [];
	"asyncio.base_events" -> "threading" [];
	"asyncio.base_events" -> "time" [];
	"asyncio.base_events" -> "traceback" [];
	"asyncio.base_events" -> "sys" [];
	"asyncio.base_events" -> "warnings" [];
	"asyncio.base_events" -> "weakref" [];
	"asyncio.base_events" -> "ssl" [];
	"concurrent.futures.thread" -> "itertools" [];
	"concurrent.futures.thread" -> "queue" [];
	"concurrent.futures.thread" -> "threading" [];
	"concurrent.futures.thread" -> "types" [];
	"concurrent.futures.thread" -> "weakref" [];
	"concurrent.futures.thread" -> "os" [];
	"queue" -> "threading" [];
	"queue" -> "types" [];
	"queue" -> "collections" [];
	"queue" -> "heapq" [];
	"queue" -> "time" [];
	"queue" -> "_queue" [];
	"concurrent.futures.process" -> "os" [];
	"concurrent.futures.process" -> "queue" [];
	"concurrent.futures.process" -> "multiprocessing" [];
	"concurrent.futures.process" -> "threading" [];
	"concurrent.futures.process" -> "weakref" [];
	"concurrent.futures.process" -> "functools" [];
	"concurrent.futures.process" -> "itertools" [];
	"concurrent.futures.process" -> "sys" [];
	"concurrent.futures.process" -> "traceback" [];
	"multiprocessing.synchronize" -> "threading" [];
	"multiprocessing.synchronize" -> "sys" [];
	"multiprocessing.synchronize" -> "tempfile" [];
	"multiprocessing.synchronize" -> "_multiprocessing" [];
	"multiprocessing.synchronize" -> "time" [];
	"multiprocessing.synchronize" -> "struct" [];
	"multiprocessing.heap" -> "bisect" [];
	"multiprocessing.heap" -> "collections" [];
	"multiprocessing.heap" -> "mmap" [];
	"multiprocessing.heap" -> "os" [];
	"multiprocessing.heap" -> "sys" [];
	"multiprocessing.heap" -> "tempfile" [];
	"multiprocessing.heap" -> "threading" [];
	"multiprocessing.heap" -> "_winapi" [];
	"multiprocessing.resource_tracker" -> "os" [];
	"multiprocessing.resource_tracker" -> "signal" [];
	"multiprocessing.resource_tracker" -> "sys" [];
	"multiprocessing.resource_tracker" -> "threading" [];
	"multiprocessing.resource_tracker" -> "warnings" [];
	"multiprocessing.resource_tracker" -> "_multiprocessing" [];
	"multiprocessing.resource_tracker" -> "_posixshmem" [];
	"multiprocessing.spawn" -> "os" [];
	"multiprocessing.spawn" -> "sys" [];
	"multiprocessing.spawn" -> "runpy" [];
	"multiprocessing.spawn" -> "types" [];
	"multiprocessing.spawn" -> "msvcrt" [];
	"multiprocessing.spawn" -> "_winapi" [];
	"runpy" -> "sys" [];
	"runpy" -> "io" [];
	"runpy" -> "os" [];
	"runpy" -> "warnings" [];
	"runpy" -> "pkgutil" [];
	"multiprocessing.util" -> "os" [];
	"multiprocessing.util" -> "itertools" [];
	"multiprocessing.util" -> "sys" [];
	"multiprocessing.util" -> "weakref" [];
	"multiprocessing.util" -> "atexit" [];
	"multiprocessing.util" -> "threading" [];
	"multiprocessing.util" -> "subprocess" [];
	"multiprocessing.util" -> "logging" [];
	"multiprocessing.util" -> "shutil" [];
	"multiprocessing.util" -> "tempfile" [];
	"multiprocessing.util" -> "traceback" [];
	"multiprocessing.util" -> "_posixsubprocess" [];
	"multiprocessing.forkserver" -> "errno" [];
	"multiprocessing.forkserver" -> "os" [];
	"multiprocessing.forkserver" -> "selectors" [];
	"multiprocessing.forkserver" -> "signal" [];
	"multiprocessing.forkserver" -> "socket" [];
	"multiprocessing.forkserver" -> "struct" [];
	"multiprocessing.forkserver" -> "sys" [];
	"multiprocessing.forkserver" -> "threading" [];
	"multiprocessing.forkserver" -> "warnings" [];
	"multiprocessing.process" -> "os" [];
	"multiprocessing.process" -> "sys" [];
	"multiprocessing.process" -> "signal" [];
	"multiprocessing.process" -> "itertools" [];
	"multiprocessing.process" -> "threading" [];
	"multiprocessing.process" -> "_weakrefset" [];
	"multiprocessing.process" -> "traceback" [];
	"multiprocessing.context" -> "os" [];
	"multiprocessing.context" -> "sys" [];
	"multiprocessing.context" -> "threading" [];
	"multiprocessing.popen_spawn_win32" -> "os" [];
	"multiprocessing.popen_spawn_win32" -> "msvcrt" [];
	"multiprocessing.popen_spawn_win32" -> "signal" [];
	"multiprocessing.popen_spawn_win32" -> "sys" [];
	"multiprocessing.popen_spawn_win32" -> "_winapi" [];
	"multiprocessing.popen_forkserver" -> "io" [];
	"multiprocessing.popen_forkserver" -> "os" [];
	"multiprocessing.popen_spawn_posix" -> "io" [];
	"multiprocessing.popen_spawn_posix" -> "os" [];
	"multiprocessing.popen_fork" -> "os" [];
	"multiprocessing.popen_fork" -> "signal" [];
	"multiprocessing.sharedctypes" -> "ctypes" [];
	"multiprocessing.sharedctypes" -> "weakref" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "types" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "nt" [];
	"ctypes._endian" -> "sys" [];
	"multiprocessing.pool" -> "collections" [];
	"multiprocessing.pool" -> "itertools" [];
	"multiprocessing.pool" -> "os" [];
	"multiprocessing.pool" -> "queue" [];
	"multiprocessing.pool" -> "threading" [];
	"multiprocessing.pool" -> "time" [];
	"multiprocessing.pool" -> "traceback" [];
	"multiprocessing.pool" -> "types" [];
	"multiprocessing.pool" -> "warnings" [];
	"multiprocessing.dummy" -> "threading" [];
	"multiprocessing.dummy" -> "sys" [];
	"multiprocessing.dummy" -> "weakref" [];
	"multiprocessing.dummy" -> "array" [];
	"multiprocessing.dummy" -> "queue" [];
	"multiprocessing.dummy.connection" -> "queue" [];
	"multiprocessing.managers" -> "sys" [];
	"multiprocessing.managers" -> "threading" [];
	"multiprocessing.managers" -> "signal" [];
	"multiprocessing.managers" -> "array" [];
	"multiprocessing.managers" -> "queue" [];
	"multiprocessing.managers" -> "time" [];
	"multiprocessing.managers" -> "types" [];
	"multiprocessing.managers" -> "os" [];
	"multiprocessing.managers" -> "traceback" [];
	"multiprocessing.shared_memory" -> "functools" [];
	"multiprocessing.shared_memory" -> "mmap" [];
	"multiprocessing.shared_memory" -> "os" [];
	"multiprocessing.shared_memory" -> "errno" [];
	"multiprocessing.shared_memory" -> "struct" [];
	"multiprocessing.shared_memory" -> "secrets" [];
	"multiprocessing.shared_memory" -> "types" [];
	"multiprocessing.shared_memory" -> "_winapi" [];
	"multiprocessing.shared_memory" -> "_posixshmem" [];
	"secrets" -> "base64" [];
	"secrets" -> "hmac" [];
	"secrets" -> "random" [];
	"hmac" -> "warnings" [];
	"hmac" -> "_hashlib" [];
	"hmac" -> "_operator" [];
	"hmac" -> "hashlib" [];
	"multiprocessing.reduction" -> "abc" [];
	"multiprocessing.reduction" -> "copyreg" [];
	"multiprocessing.reduction" -> "functools" [];
	"multiprocessing.reduction" -> "io" [];
	"multiprocessing.reduction" -> "os" [];
	"multiprocessing.reduction" -> "pickle" [];
	"multiprocessing.reduction" -> "socket" [];
	"multiprocessing.reduction" -> "sys" [];
	"multiprocessing.reduction" -> "_winapi" [];
	"multiprocessing.reduction" -> "array" [];
	"multiprocessing.resource_sharer" -> "os" [];
	"multiprocessing.resource_sharer" -> "signal" [];
	"multiprocessing.resource_sharer" -> "socket" [];
	"multiprocessing.resource_sharer" -> "sys" [];
	"multiprocessing.resource_sharer" -> "threading" [];
	"multiprocessing.queues" -> "sys" [];
	"multiprocessing.queues" -> "os" [];
	"multiprocessing.queues" -> "threading" [];
	"multiprocessing.queues" -> "collections" [];
	"multiprocessing.queues" -> "time" [];
	"multiprocessing.queues" -> "types" [];
	"multiprocessing.queues" -> "weakref" [];
	"multiprocessing.queues" -> "errno" [];
	"multiprocessing.queues" -> "queue" [];
	"multiprocessing.queues" -> "_multiprocessing" [];
	"multiprocessing.queues" -> "traceback" [];
	"multiprocessing.connection" -> "errno" [];
	"multiprocessing.connection" -> "io" [];
	"multiprocessing.connection" -> "os" [];
	"multiprocessing.connection" -> "sys" [];
	"multiprocessing.connection" -> "socket" [];
	"multiprocessing.connection" -> "struct" [];
	"multiprocessing.connection" -> "time" [];
	"multiprocessing.connection" -> "tempfile" [];
	"multiprocessing.connection" -> "itertools" [];
	"multiprocessing.connection" -> "_multiprocessing" [];
	"multiprocessing.connection" -> "_winapi" [];
	"multiprocessing.connection" -> "hmac" [];
	"multiprocessing.connection" -> "selectors" [];
	"xmlrpc.client" -> "base64" [];
	"xmlrpc.client" -> "sys" [];
	"xmlrpc.client" -> "time" [];
	"xmlrpc.client" -> "datetime" [];
	"xmlrpc.client" -> "decimal" [];
	"xmlrpc.client" -> "errno" [];
	"xmlrpc.client" -> "io" [];
	"xmlrpc.client" -> "gzip" [];
	"xml.parsers.expat" -> "sys" [];
	"xml.parsers.expat" -> "pyexpat" [];
	"xml.sax.expatreader" -> "_weakref" [];
	"xml.sax.expatreader" -> "weakref" [];
	"xml.sax.saxutils" -> "os" [];
	"xml.sax.saxutils" -> "io" [];
	"xml.sax.saxutils" -> "codecs" [];
	"xml.sax.saxutils" -> "sys" [];
	"urllib.request" -> "base64" [];
	"urllib.request" -> "bisect" [];
	"urllib.request" -> "email" [];
	"urllib.request" -> "hashlib" [];
	"urllib.request" -> "io" [];
	"urllib.request" -> "os" [];
	"urllib.request" -> "re" [];
	"urllib.request" -> "socket" [];
	"urllib.request" -> "string" [];
	"urllib.request" -> "sys" [];
	"urllib.request" -> "time" [];
	"urllib.request" -> "tempfile" [];
	"urllib.request" -> "contextlib" [];
	"urllib.request" -> "warnings" [];
	"urllib.request" -> "ssl" [];
	"urllib.request" -> "mimetypes" [];
	"urllib.request" -> "ftplib" [];
	"urllib.request" -> "nturl2path" [];
	"urllib.request" -> "getpass" [];
	"urllib.request" -> "fnmatch" [];
	"urllib.request" -> "_scproxy" [];
	"urllib.request" -> "winreg" [];
	"getpass" -> "contextlib" [];
	"getpass" -> "io" [];
	"getpass" -> "os" [];
	"getpass" -> "sys" [];
	"getpass" -> "warnings" [];
	"getpass" -> "pwd" [];
	"getpass" -> "termios" [];
	"getpass" -> "msvcrt" [];
	"nturl2path" -> "string" [];
	"ftplib" -> "sys" [];
	"ftplib" -> "socket" [];
	"ftplib" -> "ssl" [];
	"ftplib" -> "re" [];
	"ftplib" -> "netrc" [];
	"netrc" -> "os" [];
	"netrc" -> "stat" [];
	"netrc" -> "pwd" [];
	"mimetypes" -> "os" [];
	"mimetypes" -> "sys" [];
	"mimetypes" -> "posixpath" [];
	"mimetypes" -> "_winapi" [];
	"mimetypes" -> "winreg" [];
	"mimetypes" -> "getopt" [];
	"http.cookiejar" -> "os" [];
	"http.cookiejar" -> "copy" [];
	"http.cookiejar" -> "datetime" [];
	"http.cookiejar" -> "re" [];
	"http.cookiejar" -> "time" [];
	"http.cookiejar" -> "threading" [];
	"http.cookiejar" -> "calendar" [];
	"http.cookiejar" -> "logging" [];
	"http.cookiejar" -> "io" [];
	"http.cookiejar" -> "warnings" [];
	"http.cookiejar" -> "traceback" [];
	"http" -> "enum" [];
	"urllib.response" -> "tempfile" [];
	"urllib.error" -> "io" [];
	"xml.sax" -> "io" [];
	"xml.sax" -> "os" [];
	"xml.sax" -> "sys" [];
	"http.client" -> "errno" [];
	"http.client" -> "io" [];
	"http.client" -> "re" [];
	"http.client" -> "socket" [];
	"http.client" -> "sys" [];
	"http.client" -> "ssl" [];
	"multiprocessing" -> "sys" [];
	"concurrent.futures._base" -> "collections" [];
	"concurrent.futures._base" -> "logging" [];
	"concurrent.futures._base" -> "threading" [];
	"concurrent.futures._base" -> "time" [];
	"concurrent.futures._base" -> "types" [];
	"asyncio.trsock" -> "socket" [];
	"asyncio.staggered" -> "contextlib" [];
	"asyncio.staggered" -> "typing" [];
	"asyncio.timeouts" -> "enum" [];
	"asyncio.timeouts" -> "types" [];
	"asyncio.timeouts" -> "typing" [];
	"asyncio.tasks" -> "contextvars" [];
	"asyncio.tasks" -> "functools" [];
	"asyncio.tasks" -> "inspect" [];
	"asyncio.tasks" -> "itertools" [];
	"asyncio.tasks" -> "types" [];
	"asyncio.tasks" -> "warnings" [];
	"asyncio.tasks" -> "weakref" [];
	"asyncio.tasks" -> "_asyncio" [];
	"asyncio.base_tasks" -> "linecache" [];
	"asyncio.base_tasks" -> "reprlib" [];
	"asyncio.base_tasks" -> "traceback" [];
	"asyncio.locks" -> "collections" [];
	"asyncio.locks" -> "enum" [];
	"asyncio.mixins" -> "threading" [];
	"asyncio.sslproto" -> "collections" [];
	"asyncio.sslproto" -> "enum" [];
	"asyncio.sslproto" -> "warnings" [];
	"asyncio.sslproto" -> "ssl" [];
	"asyncio.futures" -> "contextvars" [];
	"asyncio.futures" -> "logging" [];
	"asyncio.futures" -> "sys" [];
	"asyncio.futures" -> "types" [];
	"asyncio.futures" -> "_asyncio" [];
	"asyncio.base_futures" -> "reprlib" [];
	"asyncio.events" -> "contextvars" [];
	"asyncio.events" -> "os" [];
	"asyncio.events" -> "signal" [];
	"asyncio.events" -> "socket" [];
	"asyncio.events" -> "subprocess" [];
	"asyncio.events" -> "sys" [];
	"asyncio.events" -> "threading" [];
	"asyncio.events" -> "warnings" [];
	"asyncio.events" -> "_asyncio" [];
	"asyncio.format_helpers" -> "functools" [];
	"asyncio.format_helpers" -> "inspect" [];
	"asyncio.format_helpers" -> "reprlib" [];
	"asyncio.format_helpers" -> "sys" [];
	"asyncio.format_helpers" -> "traceback" [];
	"asyncio.coroutines" -> "inspect" [];
	"asyncio.coroutines" -> "os" [];
	"asyncio.coroutines" -> "sys" [];
	"asyncio.coroutines" -> "types" [];
	"asyncio.constants" -> "enum" [];
	"typing_extensions" -> "typing_extensions.TypeVarTuple" [];
	"typing_extensions" -> "typing_extensions.Unpack" [];
	"typing_extensions" -> "typing_extensions.TypeAlias" [];
	"typing_extensions" -> "typing_extensions.deprecated" [];
	"typing_extensions" -> "typing_extensions.Self" [];
	"typing_extensions" -> "typing_extensions.Literal" [];
	"typing_extensions" -> "typing_extensions.Buffer" [];
	"setuptools._distutils.spawn" -> "__future__" [];
	"setuptools._distutils.spawn" -> "os" [];
	"setuptools._distutils.spawn" -> "platform" [];
	"setuptools._distutils.spawn" -> "shutil" [];
	"setuptools._distutils.spawn" -> "subprocess" [];
	"setuptools._distutils.spawn" -> "sys" [];
	"setuptools._distutils.spawn" -> "warnings" [];
	"setuptools._distutils.spawn" -> "typing" [];
	"setuptools._distutils.spawn" -> "distutils" [];
	"setuptools._distutils.errors" -> "distutils" [];
	"setuptools._distutils._modified" -> "__future__" [];
	"setuptools._distutils._modified" -> "functools" [];
	"setuptools._distutils._modified" -> "os.path" [];
	"setuptools._distutils._modified" -> "typing" [];
	"setuptools._distutils._modified" -> "distutils" [];
	"setuptools._distutils._log" -> "logging" [];
	"setuptools._distutils._log" -> "distutils" [];
	"typing" -> "abc" [];
	"typing" -> "collections" [];
	"typing" -> "copyreg" [];
	"typing" -> "contextlib" [];
	"typing" -> "functools" [];
	"typing" -> "operator" [];
	"typing" -> "re" [];
	"typing" -> "sys" [];
	"typing" -> "types" [];
	"typing" -> "warnings" [];
	"typing" -> "_typing" [];
	"typing" -> "inspect" [];
	"tempfile" -> "functools" [];
	"tempfile" -> "warnings" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "shutil" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "sys" [];
	"tempfile" -> "types" [];
	"tempfile" -> "weakref" [];
	"tempfile" -> "_thread" [];
	"sysconfig" -> "os" [];
	"sysconfig" -> "sys" [];
	"sysconfig" -> "threading" [];
	"sysconfig" -> "os.path" [];
	"sysconfig" -> "warnings" [];
	"sysconfig" -> "re" [];
	"sysconfig" -> "pprint" [];
	"sysconfig" -> "types" [];
	"sysconfig" -> "_imp" [];
	"sysconfig" -> "_aix_support" [];
	"_aix_support" -> "sys" [];
	"_aix_support" -> "sysconfig" [];
	"_aix_support" -> "os" [];
	"_aix_support" -> "contextlib" [];
	"_aix_support" -> "subprocess" [];
	"subprocess" -> "builtins" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "io" [];
	"subprocess" -> "locale" [];
	"subprocess" -> "os" [];
	"subprocess" -> "time" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "warnings" [];
	"subprocess" -> "contextlib" [];
	"subprocess" -> "types" [];
	"subprocess" -> "fcntl" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_winapi" [];
	"subprocess" -> "_posixsubprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "selectors" [];
	"subprocess" -> "grp" [];
	"subprocess" -> "pwd" [];
	"string" -> "_string" [];
	"string" -> "re" [];
	"string" -> "collections" [];
	"pathlib" -> "fnmatch" [];
	"pathlib" -> "functools" [];
	"pathlib" -> "io" [];
	"pathlib" -> "ntpath" [];
	"pathlib" -> "os" [];
	"pathlib" -> "posixpath" [];
	"pathlib" -> "re" [];
	"pathlib" -> "sys" [];
	"pathlib" -> "warnings" [];
	"pathlib" -> "_collections_abc" [];
	"pathlib" -> "errno" [];
	"pathlib" -> "stat" [];
	"pathlib" -> "pwd" [];
	"pathlib" -> "grp" [];
	"importlib.util" -> "_imp" [];
	"importlib.util" -> "sys" [];
	"importlib.util" -> "types" [];
	"setuptools._distutils.command.check" -> "contextlib" [];
	"setuptools._distutils.command.check" -> "typing" [];
	"setuptools._distutils.command" -> "distutils" [];
	"setuptools._distutils.core" -> "__future__" [];
	"setuptools._distutils.core" -> "os" [];
	"setuptools._distutils.core" -> "sys" [];
	"setuptools._distutils.core" -> "tokenize" [];
	"setuptools._distutils.core" -> "distutils" [];
	"setuptools._distutils.extension" -> "__future__" [];
	"setuptools._distutils.extension" -> "os" [];
	"setuptools._distutils.extension" -> "warnings" [];
	"setuptools._distutils.extension" -> "distutils" [];
	"setuptools._distutils.dist" -> "__future__" [];
	"setuptools._distutils.dist" -> "contextlib" [];
	"setuptools._distutils.dist" -> "logging" [];
	"setuptools._distutils.dist" -> "os" [];
	"setuptools._distutils.dist" -> "pathlib" [];
	"setuptools._distutils.dist" -> "re" [];
	"setuptools._distutils.dist" -> "sys" [];
	"setuptools._distutils.dist" -> "warnings" [];
	"setuptools._distutils.dist" -> "email" [];
	"setuptools._distutils.dist" -> "typing" [];
	"setuptools._distutils.dist" -> "_typeshed" [];
	"setuptools._distutils.dist" -> "typing_extensions" [];
	"setuptools._distutils.dist" -> "typing_extensions.TypeAlias" [];
	"setuptools._distutils.dist" -> "pprint" [];
	"setuptools._distutils.dist" -> "configparser" [];
	"setuptools._distutils.dist" -> "distutils" [];
	"setuptools._distutils.versionpredicate" -> "operator" [];
	"setuptools._distutils.versionpredicate" -> "re" [];
	"setuptools._distutils.versionpredicate" -> "distutils" [];
	"setuptools._distutils.version" -> "contextlib" [];
	"setuptools._distutils.version" -> "re" [];
	"setuptools._distutils.version" -> "warnings" [];
	"configparser" -> "collections" [];
	"configparser" -> "functools" [];
	"configparser" -> "io" [];
	"configparser" -> "itertools" [];
	"configparser" -> "os" [];
	"configparser" -> "re" [];
	"configparser" -> "sys" [];
	"configparser" -> "warnings" [];
	"packaging.utils" -> "__future__" [];
	"packaging.utils" -> "functools" [];
	"packaging.utils" -> "re" [];
	"packaging.utils" -> "typing" [];
	"packaging._musllinux" -> "__future__" [];
	"packaging._musllinux" -> "functools" [];
	"packaging._musllinux" -> "re" [];
	"packaging._musllinux" -> "subprocess" [];
	"packaging._musllinux" -> "sys" [];
	"packaging._musllinux" -> "typing" [];
	"packaging._musllinux" -> "sysconfig" [];
	"packaging._elffile" -> "__future__" [];
	"packaging._elffile" -> "enum" [];
	"packaging._elffile" -> "os" [];
	"packaging._elffile" -> "struct" [];
	"packaging._elffile" -> "typing" [];
	"packaging._manylinux" -> "__future__" [];
	"packaging._manylinux" -> "collections" [];
	"packaging._manylinux" -> "contextlib" [];
	"packaging._manylinux" -> "functools" [];
	"packaging._manylinux" -> "os" [];
	"packaging._manylinux" -> "re" [];
	"packaging._manylinux" -> "sys" [];
	"packaging._manylinux" -> "warnings" [];
	"packaging._manylinux" -> "typing" [];
	"packaging._manylinux" -> "ctypes" [];
	"packaging._manylinux" -> "_manylinux" [];
	"packaging.version" -> "__future__" [];
	"packaging.version" -> "itertools" [];
	"packaging.version" -> "re" [];
	"packaging.version" -> "typing" [];
	"packaging.tags" -> "__future__" [];
	"packaging.tags" -> "logging" [];
	"packaging.tags" -> "platform" [];
	"packaging.tags" -> "re" [];
	"packaging.tags" -> "struct" [];
	"packaging.tags" -> "subprocess" [];
	"packaging.tags" -> "sys" [];
	"packaging.tags" -> "sysconfig" [];
	"packaging.tags" -> "typing" [];
	"setuptools._distutils.cmd" -> "__future__" [];
	"setuptools._distutils.cmd" -> "logging" [];
	"setuptools._distutils.cmd" -> "os" [];
	"setuptools._distutils.cmd" -> "re" [];
	"setuptools._distutils.cmd" -> "sys" [];
	"setuptools._distutils.cmd" -> "abc" [];
	"setuptools._distutils.cmd" -> "typing" [];
	"setuptools._distutils.cmd" -> "distutils" [];
	"setuptools._distutils.cmd" -> "typing_extensions" [];
	"setuptools._distutils.cmd" -> "typing_extensions.TypeVarTuple" [];
	"setuptools._distutils.cmd" -> "typing_extensions.Unpack" [];
	"setuptools._distutils.archive_util" -> "__future__" [];
	"setuptools._distutils.archive_util" -> "os" [];
	"setuptools._distutils.archive_util" -> "typing" [];
	"setuptools._distutils.archive_util" -> "zipfile" [];
	"setuptools._distutils.archive_util" -> "pwd" [];
	"setuptools._distutils.archive_util" -> "grp" [];
	"setuptools._distutils.archive_util" -> "tarfile" [];
	"openpyxl.reader.excel" -> "zipfile" [];
	"openpyxl.reader.excel" -> "io" [];
	"openpyxl.reader.excel" -> "os.path" [];
	"openpyxl.reader.excel" -> "warnings" [];
	"openpyxl.reader.drawings" -> "io" [];
	"openpyxl.reader.drawings" -> "warnings" [];
	"openpyxl.chart.reference" -> "itertools" [];
	"openpyxl.formula.tokenizer" -> "re" [];
	"openpyxl.utils.cell" -> "functools" [];
	"openpyxl.utils.cell" -> "itertools" [];
	"openpyxl.utils.cell" -> "string" [];
	"openpyxl.utils.cell" -> "re" [];
	"openpyxl.worksheet.worksheet" -> "itertools" [];
	"openpyxl.worksheet.worksheet" -> "operator" [];
	"openpyxl.worksheet.worksheet" -> "inspect" [];
	"openpyxl.worksheet.worksheet" -> "warnings" [];
	"openpyxl.worksheet.print_settings" -> "re" [];
	"openpyxl.styles.colors" -> "re" [];
	"openpyxl.styles.cell_style" -> "array" [];
	"openpyxl.styles.numbers" -> "re" [];
	"openpyxl.descriptors.base" -> "datetime" [];
	"openpyxl.descriptors.base" -> "re" [];
	"openpyxl.descriptors.base" -> "openpyxl" [];
	"openpyxl.utils.datetime" -> "datetime" [];
	"openpyxl.utils.datetime" -> "math" [];
	"openpyxl.utils.datetime" -> "re" [];
	"openpyxl.worksheet.merge" -> "copy" [];
	"openpyxl.cell.cell" -> "copy" [];
	"openpyxl.cell.cell" -> "datetime" [];
	"openpyxl.cell.cell" -> "re" [];
	"openpyxl.cell.rich_text" -> "copy" [];
	"openpyxl.styles.styleable" -> "copy" [];
	"openpyxl.styles.proxy" -> "copy" [];
	"openpyxl.worksheet.cell_range" -> "copy" [];
	"openpyxl.worksheet.cell_range" -> "operator" [];
	"openpyxl.worksheet.cell_range" -> "itertools" [];
	"openpyxl.worksheet.filters" -> "re" [];
	"openpyxl.worksheet.dimensions" -> "copy" [];
	"openpyxl.utils.bound_dictionary" -> "collections" [];
	"openpyxl.utils.units" -> "math" [];
	"openpyxl.worksheet.datavalidation" -> "collections" [];
	"openpyxl.worksheet.datavalidation" -> "itertools" [];
	"openpyxl.worksheet.datavalidation" -> "operator" [];
	"openpyxl.formula.translate" -> "re" [];
	"openpyxl.workbook.defined_name" -> "collections" [];
	"openpyxl.workbook.defined_name" -> "re" [];
	"openpyxl.workbook.child" -> "re" [];
	"openpyxl.workbook.child" -> "warnings" [];
	"openpyxl.worksheet.header_footer" -> "re" [];
	"openpyxl.worksheet.header_footer" -> "warnings" [];
	"openpyxl.utils.escape" -> "re" [];
	"openpyxl.formatting.formatting" -> "collections" [];
	"openpyxl.compat" -> "warnings" [];
	"openpyxl.compat" -> "functools" [];
	"openpyxl.compat" -> "inspect" [];
	"openpyxl.compat.strings" -> "datetime" [];
	"openpyxl.compat.strings" -> "math" [];
	"openpyxl.compat.strings" -> "sys" [];
	"openpyxl.drawing.drawing" -> "math" [];
	"openpyxl.chart._chart" -> "collections" [];
	"openpyxl.chart._chart" -> "operator" [];
	"openpyxl.drawing.image" -> "io" [];
	"openpyxl.drawing.image" -> "PIL" [];
	"openpyxl.xml.functions" -> "re" [];
	"openpyxl.xml.functions" -> "functools" [];
	"openpyxl.xml.functions" -> "openpyxl" [];
	"openpyxl.xml.functions" -> "'lxml.etree'" [];
	"openpyxl.xml.functions" -> "et_xmlfile" [];
	"openpyxl.xml.functions" -> "'defusedxml.ElementTree'" [];
	"et_xmlfile.xmlfile" -> "__future__" [];
	"et_xmlfile.xmlfile" -> "contextlib" [];
	"et_xmlfile.incremental_tree" -> "contextlib" [];
	"et_xmlfile.incremental_tree" -> "io" [];
	"xml.etree.ElementTree" -> "sys" [];
	"xml.etree.ElementTree" -> "re" [];
	"xml.etree.ElementTree" -> "warnings" [];
	"xml.etree.ElementTree" -> "io" [];
	"xml.etree.ElementTree" -> "collections" [];
	"xml.etree.ElementTree" -> "contextlib" [];
	"xml.etree.ElementTree" -> "weakref" [];
	"xml.etree.ElementTree" -> "pyexpat" [];
	"xml.etree.ElementTree" -> "_elementtree" [];
	"xml.etree.ElementPath" -> "re" [];
	"openpyxl.chartsheet.protection" -> "hashlib" [];
	"openpyxl.worksheet._reader" -> "copy" [];
	"openpyxl.worksheet._reader" -> "warnings" [];
	"openpyxl.packaging.relationship" -> "posixpath" [];
	"openpyxl.packaging.relationship" -> "warnings" [];
	"openpyxl.packaging.manifest" -> "mimetypes" [];
	"openpyxl.packaging.manifest" -> "os.path" [];
	"openpyxl.packaging.custom" -> "warnings" [];
	"openpyxl.packaging.core" -> "datetime" [];
	"openpyxl.styles.stylesheet" -> "warnings" [];
	"openpyxl.reader.workbook" -> "warnings" [];
	"openpyxl.pivot.table" -> "collections" [];
	"openpyxl.workbook.workbook" -> "copy" [];
	"openpyxl.writer.excel" -> "datetime" [];
	"openpyxl.writer.excel" -> "re" [];
	"openpyxl.writer.excel" -> "zipfile" [];
	"openpyxl.packaging.extended" -> "openpyxl" [];
	"openpyxl.worksheet._writer" -> "atexit" [];
	"openpyxl.worksheet._writer" -> "collections" [];
	"openpyxl.worksheet._writer" -> "io" [];
	"openpyxl.worksheet._writer" -> "os" [];
	"openpyxl.worksheet._writer" -> "tempfile" [];
	"openpyxl.worksheet._writer" -> "warnings" [];
	"openpyxl.cell._writer" -> "openpyxl" [];
	"openpyxl.cell._writer" -> "datetime" [];
	"openpyxl.worksheet.copier" -> "copy" [];
	"openpyxl.worksheet._write_only" -> "inspect" [];
	"openpyxl.xml" -> "os" [];
	"openpyxl.xml" -> "lxml" [];
	"openpyxl.xml" -> "warnings" [];
	"openpyxl.xml" -> "defusedxml" [];
	"openpyxl.compat.numbers" -> "decimal" [];
	"openpyxl.compat.numbers" -> "numpy" [];
	"numpy" -> "os" [];
	"numpy" -> "sys" [];
	"numpy" -> "warnings" [];
	"numpy" -> "pathlib" [];
	"numpy._core._dtype_ctypes" -> "numpy" [];
	"numpy._core._dtype_ctypes" -> "ctypes" [];
	"numpy._core._dtype_ctypes" -> "_ctypes" [];
	"numpy._pytesttester" -> "os" [];
	"numpy._pytesttester" -> "sys" [];
	"numpy._pytesttester" -> "warnings" [];
	"numpy._core.strings" -> "functools" [];
	"numpy._core.strings" -> "sys" [];
	"numpy._core.strings" -> "numpy" [];
	"numpy._core.umath" -> "numpy" [];
	"numpy._core.overrides" -> "collections" [];
	"numpy._core.overrides" -> "functools" [];
	"numpy._utils._inspect" -> "types" [];
	"numpy._utils" -> "functools" [];
	"numpy._utils" -> "warnings" [];
	"numpy._core.multiarray" -> "functools" [];
	"numpy.core._utils" -> "warnings" [];
	"numpy._core.defchararray" -> "functools" [];
	"numpy._core.defchararray" -> "numpy" [];
	"numpy._core.numerictypes" -> "numbers" [];
	"numpy._core.numerictypes" -> "warnings" [];
	"numpy._core.numerictypes" -> "builtins" [];
	"numpy._core._dtype" -> "numpy" [];
	"numpy._core.numeric" -> "builtins" [];
	"numpy._core.numeric" -> "functools" [];
	"numpy._core.numeric" -> "itertools" [];
	"numpy._core.numeric" -> "math" [];
	"numpy._core.numeric" -> "numbers" [];
	"numpy._core.numeric" -> "operator" [];
	"numpy._core.numeric" -> "sys" [];
	"numpy._core.numeric" -> "warnings" [];
	"numpy._core.numeric" -> "numpy" [];
	"numpy._core.fromnumeric" -> "functools" [];
	"numpy._core.fromnumeric" -> "types" [];
	"numpy._core.fromnumeric" -> "warnings" [];
	"numpy._core.fromnumeric" -> "numpy" [];
	"numpy._core._methods" -> "os" [];
	"numpy._core._methods" -> "pickle" [];
	"numpy._core._methods" -> "warnings" [];
	"numpy._core._methods" -> "contextlib" [];
	"numpy._core._methods" -> "numpy" [];
	"numpy._core.arrayprint" -> "functools" [];
	"numpy._core.arrayprint" -> "numbers" [];
	"numpy._core.arrayprint" -> "sys" [];
	"numpy._core.arrayprint" -> "_thread" [];
	"numpy._core.arrayprint" -> "_dummy_thread" [];
	"numpy._core.arrayprint" -> "contextlib" [];
	"numpy._core.arrayprint" -> "operator" [];
	"numpy._core.arrayprint" -> "warnings" [];
	"numpy._core.arrayprint" -> "numpy" [];
	"numpy._core._ufunc_config" -> "functools" [];
	"numpy._core.shape_base" -> "functools" [];
	"numpy._core.shape_base" -> "itertools" [];
	"numpy._core.shape_base" -> "operator" [];
	"numpy._core.records" -> "os" [];
	"numpy._core.records" -> "warnings" [];
	"numpy._core.records" -> "collections" [];
	"numpy._core.records" -> "contextlib" [];
	"numpy.typing" -> "warnings" [];
	"numpy._typing._add_docstring" -> "re" [];
	"numpy._typing._add_docstring" -> "textwrap" [];
	"numpy._typing._array_like" -> "sys" [];
	"numpy._typing._array_like" -> "typing" [];
	"numpy._typing._array_like" -> "numpy" [];
	"numpy._typing._shape" -> "typing" [];
	"numpy._typing._nested_sequence" -> "typing" [];
	"numpy._typing._nbit_base" -> "typing" [];
	"numpy._typing._ufunc" -> "numpy" [];
	"numpy._typing._scalars" -> "typing" [];
	"numpy._typing._scalars" -> "numpy" [];
	"numpy._typing._nbit" -> "typing" [];
	"numpy._typing._dtype_like" -> "typing" [];
	"numpy._typing._dtype_like" -> "numpy" [];
	"numpy._typing._char_codes" -> "typing" [];
	"numpy.f2py" -> "os" [];
	"numpy.f2py" -> "subprocess" [];
	"numpy.f2py" -> "sys" [];
	"numpy.f2py" -> "warnings" [];
	"numpy.f2py.diagnose" -> "os" [];
	"numpy.f2py.diagnose" -> "sys" [];
	"numpy.f2py.diagnose" -> "tempfile" [];
	"numpy.f2py.diagnose" -> "numpy" [];
	"numpy.f2py.diagnose" -> "numpy_distutils" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.command'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.fcompiler'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.cpuinfo'" [];
	"numpy.f2py.f2py2e" -> "argparse" [];
	"numpy.f2py.f2py2e" -> "os" [];
	"numpy.f2py.f2py2e" -> "pprint" [];
	"numpy.f2py.f2py2e" -> "re" [];
	"numpy.f2py.f2py2e" -> "sys" [];
	"numpy.f2py.f2py2e" -> "tempfile" [];
	"numpy.f2py.crackfortran" -> "codecs" [];
	"numpy.f2py.crackfortran" -> "copy" [];
	"numpy.f2py.crackfortran" -> "fileinput" [];
	"numpy.f2py.crackfortran" -> "os" [];
	"numpy.f2py.crackfortran" -> "platform" [];
	"numpy.f2py.crackfortran" -> "re" [];
	"numpy.f2py.crackfortran" -> "string" [];
	"numpy.f2py.crackfortran" -> "sys" [];
	"numpy.f2py.crackfortran" -> "pathlib" [];
	"numpy.f2py.crackfortran" -> "charset_normalizer" [];
	"charset_normalizer" -> "__future__" [];
	"charset_normalizer" -> "logging" [];
	"charset_normalizer.version" -> "__future__" [];
	"charset_normalizer.utils" -> "__future__" [];
	"charset_normalizer.utils" -> "importlib" [];
	"charset_normalizer.utils" -> "logging" [];
	"charset_normalizer.utils" -> "unicodedata" [];
	"charset_normalizer.utils" -> "codecs" [];
	"charset_normalizer.utils" -> "functools" [];
	"charset_normalizer.utils" -> "re" [];
	"charset_normalizer.utils" -> "typing" [];
	"charset_normalizer.utils" -> "_multibytecodec" [];
	"charset_normalizer.constant" -> "__future__" [];
	"charset_normalizer.constant" -> "codecs" [];
	"charset_normalizer.constant" -> "re" [];
	"charset_normalizer.models" -> "__future__" [];
	"charset_normalizer.models" -> "hashlib" [];
	"charset_normalizer.models" -> "json" [];
	"charset_normalizer.models" -> "re" [];
	"charset_normalizer.models" -> "typing" [];
	"charset_normalizer.cd" -> "__future__" [];
	"charset_normalizer.cd" -> "importlib" [];
	"charset_normalizer.cd" -> "codecs" [];
	"charset_normalizer.cd" -> "collections" [];
	"charset_normalizer.cd" -> "functools" [];
	"charset_normalizer.cd" -> "typing" [];
	"charset_normalizer.md" -> "__future__" [];
	"charset_normalizer.md" -> "functools" [];
	"charset_normalizer.md" -> "logging" [];
	"json" -> "codecs" [];
	"json.encoder" -> "re" [];
	"json.encoder" -> "_json" [];
	"json.decoder" -> "re" [];
	"json.decoder" -> "_json" [];
	"json.scanner" -> "re" [];
	"json.scanner" -> "_json" [];
	"charset_normalizer.legacy" -> "__future__" [];
	"charset_normalizer.legacy" -> "typing" [];
	"charset_normalizer.legacy" -> "warnings" [];
	"charset_normalizer.legacy" -> "typing_extensions" [];
	"charset_normalizer.api" -> "__future__" [];
	"charset_normalizer.api" -> "logging" [];
	"charset_normalizer.api" -> "os" [];
	"charset_normalizer.api" -> "typing" [];
	"fileinput" -> "io" [];
	"fileinput" -> "sys" [];
	"fileinput" -> "os" [];
	"fileinput" -> "types" [];
	"fileinput" -> "warnings" [];
	"fileinput" -> "gzip" [];
	"fileinput" -> "bz2" [];
	"fileinput" -> "getopt" [];
	"numpy.f2py._backends._distutils" -> "os" [];
	"numpy.f2py._backends._distutils" -> "shutil" [];
	"numpy.f2py._backends._distutils" -> "sys" [];
	"numpy.f2py._backends._distutils" -> "warnings" [];
	"numpy.f2py._backends._backend" -> "abc" [];
	"numpy.f2py._backends._meson" -> "errno" [];
	"numpy.f2py._backends._meson" -> "os" [];
	"numpy.f2py._backends._meson" -> "re" [];
	"numpy.f2py._backends._meson" -> "shutil" [];
	"numpy.f2py._backends._meson" -> "subprocess" [];
	"numpy.f2py._backends._meson" -> "sys" [];
	"numpy.f2py._backends._meson" -> "itertools" [];
	"numpy.f2py._backends._meson" -> "pathlib" [];
	"numpy.f2py._backends._meson" -> "string" [];
	"numpy.f2py.rules" -> "copy" [];
	"numpy.f2py.rules" -> "os" [];
	"numpy.f2py.rules" -> "sys" [];
	"numpy.f2py.rules" -> "time" [];
	"numpy.f2py.rules" -> "pathlib" [];
	"numpy.f2py.f90mod_rules" -> "numpy" [];
	"numpy.f2py.func2subr" -> "copy" [];
	"numpy.f2py.auxfuncs" -> "pprint" [];
	"numpy.f2py.auxfuncs" -> "re" [];
	"numpy.f2py.auxfuncs" -> "sys" [];
	"numpy.f2py.auxfuncs" -> "types" [];
	"numpy.f2py.auxfuncs" -> "functools" [];
	"numpy.f2py.symbolic" -> "re" [];
	"numpy.f2py.symbolic" -> "warnings" [];
	"numpy.f2py.symbolic" -> "enum" [];
	"numpy.f2py.symbolic" -> "math" [];
	"numpy.f2py.capi_maps" -> "copy" [];
	"numpy.f2py.capi_maps" -> "os" [];
	"numpy.f2py.capi_maps" -> "re" [];
	"numpy.f2py.cfuncs" -> "copy" [];
	"numpy.f2py.cfuncs" -> "sys" [];
	"numpy.matlib" -> "warnings" [];
	"numpy.matrixlib.defmatrix" -> "ast" [];
	"numpy.matrixlib.defmatrix" -> "sys" [];
	"numpy.matrixlib.defmatrix" -> "warnings" [];
	"numpy.testing" -> "unittest" [];
	"numpy.testing._private.utils" -> "contextlib" [];
	"numpy.testing._private.utils" -> "gc" [];
	"numpy.testing._private.utils" -> "operator" [];
	"numpy.testing._private.utils" -> "os" [];
	"numpy.testing._private.utils" -> "pathlib" [];
	"numpy.testing._private.utils" -> "platform" [];
	"numpy.testing._private.utils" -> "pprint" [];
	"numpy.testing._private.utils" -> "re" [];
	"numpy.testing._private.utils" -> "shutil" [];
	"numpy.testing._private.utils" -> "sys" [];
	"numpy.testing._private.utils" -> "sysconfig" [];
	"numpy.testing._private.utils" -> "threading" [];
	"numpy.testing._private.utils" -> "warnings" [];
	"numpy.testing._private.utils" -> "functools" [];
	"numpy.testing._private.utils" -> "io" [];
	"numpy.testing._private.utils" -> "tempfile" [];
	"numpy.testing._private.utils" -> "numpy" [];
	"numpy.testing._private.utils" -> "json" [];
	"numpy.testing._private.utils" -> "types" [];
	"numpy.testing._private.utils" -> "win32pdh" [];
	"numpy.testing._private.utils" -> "time" [];
	"numpy.testing._private.utils" -> "traceback" [];
	"numpy.testing._private.utils" -> "difflib" [];
	"numpy.testing._private.utils" -> "doctest" [];
	"numpy.testing._private.utils" -> "subprocess" [];
	"numpy.testing._private.utils" -> "unittest" [];
	"numpy.testing._private.utils" -> "inspect" [];
	"numpy.testing._private.utils" -> "psutil" [];
	"doctest" -> "__future__" [];
	"doctest" -> "difflib" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "pdb" [];
	"doctest" -> "re" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "unittest" [];
	"doctest" -> "io" [];
	"doctest" -> "collections" [];
	"doctest" -> "builtins" [];
	"doctest" -> "argparse" [];
	"pdb" -> "os" [];
	"pdb" -> "io" [];
	"pdb" -> "re" [];
	"pdb" -> "sys" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "dis" [];
	"pdb" -> "code" [];
	"pdb" -> "glob" [];
	"pdb" -> "token" [];
	"pdb" -> "pprint" [];
	"pdb" -> "signal" [];
	"pdb" -> "inspect" [];
	"pdb" -> "tokenize" [];
	"pdb" -> "functools" [];
	"pdb" -> "traceback" [];
	"pdb" -> "linecache" [];
	"pdb" -> "typing" [];
	"pdb" -> "runpy" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "pydoc" [];
	"pdb" -> "getopt" [];
	"pdb" -> "pdb" [];
	"pydoc" -> "__future__" [];
	"pydoc" -> "builtins" [];
	"pydoc" -> "inspect" [];
	"pydoc" -> "io" [];
	"pydoc" -> "os" [];
	"pydoc" -> "pkgutil" [];
	"pydoc" -> "platform" [];
	"pydoc" -> "re" [];
	"pydoc" -> "sys" [];
	"pydoc" -> "sysconfig" [];
	"pydoc" -> "time" [];
	"pydoc" -> "tokenize" [];
	"pydoc" -> "warnings" [];
	"pydoc" -> "collections" [];
	"pydoc" -> "reprlib" [];
	"pydoc" -> "traceback" [];
	"pydoc" -> "tempfile" [];
	"pydoc" -> "subprocess" [];
	"pydoc" -> "tty" [];
	"pydoc" -> "textwrap" [];
	"pydoc" -> "select" [];
	"pydoc" -> "threading" [];
	"pydoc" -> "webbrowser" [];
	"pydoc" -> "getopt" [];
	"webbrowser" -> "os" [];
	"webbrowser" -> "shlex" [];
	"webbrowser" -> "shutil" [];
	"webbrowser" -> "sys" [];
	"webbrowser" -> "subprocess" [];
	"webbrowser" -> "threading" [];
	"webbrowser" -> "warnings" [];
	"webbrowser" -> "copy" [];
	"webbrowser" -> "getopt" [];
	"http.server" -> "copy" [];
	"http.server" -> "datetime" [];
	"http.server" -> "html" [];
	"http.server" -> "io" [];
	"http.server" -> "itertools" [];
	"http.server" -> "mimetypes" [];
	"http.server" -> "os" [];
	"http.server" -> "posixpath" [];
	"http.server" -> "select" [];
	"http.server" -> "shutil" [];
	"http.server" -> "socket" [];
	"http.server" -> "socketserver" [];
	"http.server" -> "sys" [];
	"http.server" -> "time" [];
	"http.server" -> "pwd" [];
	"http.server" -> "base64" [];
	"http.server" -> "binascii" [];
	"http.server" -> "subprocess" [];
	"http.server" -> "argparse" [];
	"http.server" -> "contextlib" [];
	"socketserver" -> "socket" [];
	"socketserver" -> "selectors" [];
	"socketserver" -> "os" [];
	"socketserver" -> "sys" [];
	"socketserver" -> "threading" [];
	"socketserver" -> "io" [];
	"socketserver" -> "time" [];
	"socketserver" -> "traceback" [];
	"html" -> "re" [];
	"tty" -> "termios" [];
	"shlex" -> "os" [];
	"shlex" -> "re" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "io" [];
	"glob" -> "contextlib" [];
	"glob" -> "os" [];
	"glob" -> "re" [];
	"glob" -> "fnmatch" [];
	"glob" -> "itertools" [];
	"glob" -> "stat" [];
	"glob" -> "sys" [];
	"code" -> "sys" [];
	"code" -> "traceback" [];
	"code" -> "codeop" [];
	"code" -> "readline" [];
	"code" -> "argparse" [];
	"codeop" -> "__future__" [];
	"codeop" -> "warnings" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "inspect" [];
	"bdb" -> "linecache" [];
	"bdb" -> "reprlib" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"numpy.linalg._umath_linalg" -> "typing" [];
	"numpy.linalg._umath_linalg" -> "numpy" [];
	"numpy.testing._private.extbuild" -> "os" [];
	"numpy.testing._private.extbuild" -> "pathlib" [];
	"numpy.testing._private.extbuild" -> "subprocess" [];
	"numpy.testing._private.extbuild" -> "sys" [];
	"numpy.testing._private.extbuild" -> "sysconfig" [];
	"numpy.testing._private.extbuild" -> "textwrap" [];
	"numpy.testing.overrides" -> "numpy" [];
	"numpy.lib.recfunctions" -> "itertools" [];
	"numpy.lib.recfunctions" -> "numpy" [];
	"numpy.lib._iotools" -> "itertools" [];
	"numpy.lib._iotools" -> "numpy" [];
	"numpy.ma.mrecords" -> "warnings" [];
	"numpy.ma.mrecords" -> "numpy" [];
	"numpy.ctypeslib._ctypeslib" -> "os" [];
	"numpy.ctypeslib._ctypeslib" -> "numpy" [];
	"numpy.ctypeslib._ctypeslib" -> "ctypes" [];
	"numpy.ctypeslib._ctypeslib" -> "sys" [];
	"numpy.ctypeslib._ctypeslib" -> "sysconfig" [];
	"numpy._core._internal" -> "ast" [];
	"numpy._core._internal" -> "math" [];
	"numpy._core._internal" -> "re" [];
	"numpy._core._internal" -> "sys" [];
	"numpy._core._internal" -> "warnings" [];
	"numpy._core._internal" -> "numpy" [];
	"numpy._core._internal" -> "ctypes" [];
	"numpy.ma.extras" -> "itertools" [];
	"numpy.ma.extras" -> "warnings" [];
	"numpy.ma.extras" -> "numpy" [];
	"numpy.ma.core" -> "builtins" [];
	"numpy.ma.core" -> "functools" [];
	"numpy.ma.core" -> "inspect" [];
	"numpy.ma.core" -> "operator" [];
	"numpy.ma.core" -> "re" [];
	"numpy.ma.core" -> "textwrap" [];
	"numpy.ma.core" -> "warnings" [];
	"numpy.ma.core" -> "numpy" [];
	"numpy.ma.core" -> "copy" [];
	"numpy.polynomial._polybase" -> "abc" [];
	"numpy.polynomial._polybase" -> "numbers" [];
	"numpy.polynomial._polybase" -> "os" [];
	"numpy.polynomial._polybase" -> "numpy" [];
	"numpy.polynomial.polynomial" -> "numpy" [];
	"numpy.polynomial.legendre" -> "numpy" [];
	"numpy.polynomial.laguerre" -> "numpy" [];
	"numpy.polynomial.hermite_e" -> "numpy" [];
	"numpy.polynomial.hermite" -> "numpy" [];
	"numpy.polynomial.chebyshev" -> "numpy" [];
	"numpy.polynomial.polyutils" -> "functools" [];
	"numpy.polynomial.polyutils" -> "operator" [];
	"numpy.polynomial.polyutils" -> "warnings" [];
	"numpy.polynomial.polyutils" -> "numpy" [];
	"numpy.random.mtrand" -> "builtins" [];
	"numpy.random.mtrand" -> "typing" [];
	"numpy.random.mtrand" -> "numpy" [];
	"numpy.random.bit_generator" -> "abc" [];
	"numpy.random.bit_generator" -> "threading" [];
	"numpy.random.bit_generator" -> "typing" [];
	"numpy.random.bit_generator" -> "_typeshed" [];
	"numpy.random.bit_generator" -> "typing_extensions" [];
	"numpy.random.bit_generator" -> "numpy" [];
	"numpy.random._sfc64" -> "typing" [];
	"numpy.random._sfc64" -> "numpy" [];
	"numpy.random._philox" -> "typing" [];
	"numpy.random._philox" -> "numpy" [];
	"numpy.random._pcg64" -> "typing" [];
	"numpy.random._mt19937" -> "typing" [];
	"numpy.random._mt19937" -> "numpy" [];
	"numpy.random._generator" -> "typing" [];
	"numpy.random._generator" -> "numpy" [];
	"numpy.random._common" -> "typing" [];
	"numpy.random._common" -> "numpy" [];
	"numpy.fft.helper" -> "warnings" [];
	"numpy.fft._pocketfft" -> "functools" [];
	"numpy.fft._pocketfft" -> "warnings" [];
	"numpy.linalg.linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "functools" [];
	"numpy.linalg._linalg" -> "operator" [];
	"numpy.linalg._linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "typing" [];
	"numpy.linalg._linalg" -> "numpy" [];
	"numpy.lib._utils_impl" -> "functools" [];
	"numpy.lib._utils_impl" -> "os" [];
	"numpy.lib._utils_impl" -> "platform" [];
	"numpy.lib._utils_impl" -> "sys" [];
	"numpy.lib._utils_impl" -> "textwrap" [];
	"numpy.lib._utils_impl" -> "types" [];
	"numpy.lib._utils_impl" -> "warnings" [];
	"numpy.lib._utils_impl" -> "numpy" [];
	"numpy.lib._utils_impl" -> "pprint" [];
	"numpy.lib._utils_impl" -> "threadpoolctl" [];
	"numpy.lib._utils_impl" -> "inspect" [];
	"numpy.lib._utils_impl" -> "pydoc" [];
	"numpy.lib._utils_impl" -> "ast" [];
	"numpy.lib._type_check_impl" -> "functools" [];
	"numpy._core.getlimits" -> "types" [];
	"numpy._core.getlimits" -> "warnings" [];
	"numpy._core._machar" -> "math" [];
	"numpy.lib._twodim_base_impl" -> "functools" [];
	"numpy.lib._twodim_base_impl" -> "operator" [];
	"numpy.lib._twodim_base_impl" -> "numpy" [];
	"numpy.lib._stride_tricks_impl" -> "numpy" [];
	"numpy.lib._shape_base_impl" -> "functools" [];
	"numpy.lib._shape_base_impl" -> "warnings" [];
	"numpy.lib._polynomial_impl" -> "functools" [];
	"numpy.lib._polynomial_impl" -> "re" [];
	"numpy.lib._polynomial_impl" -> "warnings" [];
	"numpy.lib._npyio_impl" -> "contextlib" [];
	"numpy.lib._npyio_impl" -> "functools" [];
	"numpy.lib._npyio_impl" -> "itertools" [];
	"numpy.lib._npyio_impl" -> "operator" [];
	"numpy.lib._npyio_impl" -> "os" [];
	"numpy.lib._npyio_impl" -> "pickle" [];
	"numpy.lib._npyio_impl" -> "re" [];
	"numpy.lib._npyio_impl" -> "warnings" [];
	"numpy.lib._npyio_impl" -> "weakref" [];
	"numpy.lib._npyio_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "zipfile" [];
	"numpy.lib._format_impl" -> "io" [];
	"numpy.lib._format_impl" -> "os" [];
	"numpy.lib._format_impl" -> "pickle" [];
	"numpy.lib._format_impl" -> "warnings" [];
	"numpy.lib._format_impl" -> "numpy" [];
	"numpy.lib._format_impl" -> "struct" [];
	"numpy.lib._format_impl" -> "tokenize" [];
	"numpy.lib._format_impl" -> "ast" [];
	"numpy.lib._datasource" -> "os" [];
	"numpy.lib._datasource" -> "bz2" [];
	"numpy.lib._datasource" -> "gzip" [];
	"numpy.lib._datasource" -> "lzma" [];
	"numpy.lib._datasource" -> "tempfile" [];
	"numpy.lib._datasource" -> "shutil" [];
	"numpy.lib._nanfunctions_impl" -> "functools" [];
	"numpy.lib._nanfunctions_impl" -> "warnings" [];
	"numpy.lib._nanfunctions_impl" -> "numpy" [];
	"numpy.lib._index_tricks_impl" -> "functools" [];
	"numpy.lib._index_tricks_impl" -> "math" [];
	"numpy.lib._index_tricks_impl" -> "sys" [];
	"numpy.lib._index_tricks_impl" -> "warnings" [];
	"numpy.lib._index_tricks_impl" -> "numpy" [];
	"numpy.lib._histograms_impl" -> "contextlib" [];
	"numpy.lib._histograms_impl" -> "functools" [];
	"numpy.lib._histograms_impl" -> "operator" [];
	"numpy.lib._histograms_impl" -> "warnings" [];
	"numpy.lib._histograms_impl" -> "numpy" [];
	"numpy.lib._function_base_impl" -> "builtins" [];
	"numpy.lib._function_base_impl" -> "functools" [];
	"numpy.lib._function_base_impl" -> "re" [];
	"numpy.lib._function_base_impl" -> "sys" [];
	"numpy.lib._function_base_impl" -> "warnings" [];
	"numpy.lib._function_base_impl" -> "numpy" [];
	"numpy.lib._arraysetops_impl" -> "functools" [];
	"numpy.lib._arraysetops_impl" -> "warnings" [];
	"numpy.lib._arraysetops_impl" -> "typing" [];
	"numpy.lib._arraysetops_impl" -> "numpy" [];
	"numpy.lib._arraypad_impl" -> "numpy" [];
	"numpy.lib" -> "math" [];
	"numpy.lib" -> "warnings" [];
	"numpy.lib.introspect" -> "re" [];
	"numpy.lib._version" -> "re" [];
	"numpy.lib._arrayterator_impl" -> "functools" [];
	"numpy.lib._arrayterator_impl" -> "operator" [];
	"numpy._core.function_base" -> "functools" [];
	"numpy._core.function_base" -> "operator" [];
	"numpy._core.function_base" -> "types" [];
	"numpy._core.function_base" -> "warnings" [];
	"numpy._core.function_base" -> "numpy" [];
	"numpy._core.printoptions" -> "sys" [];
	"numpy._core.printoptions" -> "contextvars" [];
	"numpy._core.memmap" -> "operator" [];
	"numpy._core.memmap" -> "contextlib" [];
	"numpy._core.memmap" -> "numpy" [];
	"numpy._core.memmap" -> "mmap" [];
	"numpy._core.memmap" -> "os.path" [];
	"numpy._core" -> "os" [];
	"numpy._core" -> "sys" [];
	"numpy._core" -> "warnings" [];
	"numpy._core" -> "copyreg" [];
	"numpy._core._add_newdocs_scalars" -> "os" [];
	"numpy._core._add_newdocs_scalars" -> "sys" [];
	"numpy._core.einsumfunc" -> "itertools" [];
	"numpy._core.einsumfunc" -> "operator" [];
	"numpy.__config__" -> "enum" [];
	"numpy.__config__" -> "yaml" [];
	"numpy.__config__" -> "warnings" [];
	"numpy.__config__" -> "json" [];
	"numpy._globals" -> "enum" [];
	"openpyxl.descriptors.serialisable" -> "copy" [];
	"openpyxl.descriptors.serialisable" -> "keyword" [];
	"openpyxl.utils.inference" -> "datetime" [];
	"openpyxl.utils.inference" -> "re" [];
	"openpyxl.utils.dataframe" -> "itertools" [];
	"openpyxl.utils.dataframe" -> "operator" [];
	"openpyxl.utils.dataframe" -> "numpy" [];
	"openpyxl.utils.dataframe" -> "pandas" [];
	"pandas" -> "__future__" [];
	"pandas" -> "os" [];
	"pandas" -> "warnings" [];
	"pandas" -> "cmath" [];
	"pandas._libs.writers" -> "numpy" [];
	"pandas._typing" -> "__future__" [];
	"pandas._typing" -> "datetime" [];
	"pandas._typing" -> "os" [];
	"pandas._typing" -> "sys" [];
	"pandas._typing" -> "typing" [];
	"pandas._typing" -> "numpy" [];
	"pandas._typing" -> "typing_extensions" [];
	"pandas.tseries.holiday" -> "__future__" [];
	"pandas.tseries.holiday" -> "datetime" [];
	"pandas.tseries.holiday" -> "warnings" [];
	"pandas.tseries.holiday" -> "numpy" [];
	"pandas.tseries.holiday" -> "pandas" [];
	"dateutil.relativedelta" -> "datetime" [];
	"dateutil.relativedelta" -> "calendar" [];
	"dateutil.relativedelta" -> "operator" [];
	"dateutil.relativedelta" -> "math" [];
	"dateutil.relativedelta" -> "six" [];
	"dateutil.relativedelta" -> "warnings" [];
	"dateutil" -> "sys" [];
	"dateutil" -> "importlib" [];
	"dateutil.rrule" -> "calendar" [];
	"dateutil.rrule" -> "datetime" [];
	"dateutil.rrule" -> "heapq" [];
	"dateutil.rrule" -> "itertools" [];
	"dateutil.rrule" -> "re" [];
	"dateutil.rrule" -> "sys" [];
	"dateutil.rrule" -> "functools" [];
	"dateutil.rrule" -> "warnings" [];
	"dateutil.rrule" -> "six" [];
	"dateutil.rrule" -> "six.moves" [];
	"dateutil.rrule" -> "math" [];
	"dateutil.rrule" -> "fractions" [];
	"dateutil.parser" -> "functools" [];
	"dateutil.parser" -> "warnings" [];
	"dateutil.parser.isoparser" -> "datetime" [];
	"dateutil.parser.isoparser" -> "calendar" [];
	"dateutil.parser.isoparser" -> "dateutil" [];
	"dateutil.parser.isoparser" -> "functools" [];
	"dateutil.parser.isoparser" -> "re" [];
	"dateutil.parser.isoparser" -> "six" [];
	"dateutil.parser._parser" -> "__future__" [];
	"dateutil.parser._parser" -> "datetime" [];
	"dateutil.parser._parser" -> "re" [];
	"dateutil.parser._parser" -> "string" [];
	"dateutil.parser._parser" -> "time" [];
	"dateutil.parser._parser" -> "warnings" [];
	"dateutil.parser._parser" -> "calendar" [];
	"dateutil.parser._parser" -> "io" [];
	"dateutil.parser._parser" -> "six" [];
	"dateutil.parser._parser" -> "decimal" [];
	"dateutil.parser._parser" -> "dateutil" [];
	"six.moves._thread" -> "_thread" [];
	"six.moves" -> "six" [];
	"six.moves.winreg" -> "winreg" [];
	"dateutil.tz.tz" -> "datetime" [];
	"dateutil.tz.tz" -> "struct" [];
	"dateutil.tz.tz" -> "time" [];
	"dateutil.tz.tz" -> "sys" [];
	"dateutil.tz.tz" -> "os" [];
	"dateutil.tz.tz" -> "bisect" [];
	"dateutil.tz.tz" -> "weakref" [];
	"dateutil.tz.tz" -> "collections" [];
	"dateutil.tz.tz" -> "six" [];
	"dateutil.tz.tz" -> "six.moves" [];
	"dateutil.tz.tz" -> "warnings" [];
	"dateutil.tz.tz" -> "dateutil" [];
	"dateutil.tz.tz" -> "contextlib" [];
	"dateutil.zoneinfo" -> "warnings" [];
	"dateutil.zoneinfo" -> "json" [];
	"dateutil.zoneinfo" -> "tarfile" [];
	"dateutil.zoneinfo" -> "pkgutil" [];
	"dateutil.zoneinfo" -> "io" [];
	"dateutil.tz.win" -> "datetime" [];
	"dateutil.tz.win" -> "struct" [];
	"dateutil.tz.win" -> "six.moves" [];
	"dateutil.tz.win" -> "six" [];
	"dateutil.tz.win" -> "ctypes" [];
	"dateutil.tz._factories" -> "datetime" [];
	"dateutil.tz._factories" -> "weakref" [];
	"dateutil.tz._factories" -> "collections" [];
	"dateutil.tz._factories" -> "six.moves" [];
	"dateutil.tz._common" -> "six" [];
	"dateutil.tz._common" -> "functools" [];
	"dateutil.tz._common" -> "datetime" [];
	"dateutil.easter" -> "datetime" [];
	"six" -> "__future__" [];
	"six" -> "functools" [];
	"six" -> "itertools" [];
	"six" -> "operator" [];
	"six" -> "sys" [];
	"six" -> "types" [];
	"six" -> "struct" [];
	"six" -> "io" [];
	"six" -> "StringIO" [];
	"pandas.io.formats.format" -> "__future__" [];
	"pandas.io.formats.format" -> "contextlib" [];
	"pandas.io.formats.format" -> "csv" [];
	"pandas.io.formats.format" -> "decimal" [];
	"pandas.io.formats.format" -> "functools" [];
	"pandas.io.formats.format" -> "io" [];
	"pandas.io.formats.format" -> "math" [];
	"pandas.io.formats.format" -> "re" [];
	"pandas.io.formats.format" -> "shutil" [];
	"pandas.io.formats.format" -> "typing" [];
	"pandas.io.formats.format" -> "numpy" [];
	"pandas.io.formats.format" -> "pandas" [];
	"pandas.io.formats.csvs" -> "__future__" [];
	"pandas.io.formats.csvs" -> "csv" [];
	"pandas.io.formats.csvs" -> "os" [];
	"pandas.io.formats.csvs" -> "typing" [];
	"pandas.io.formats.csvs" -> "numpy" [];
	"pandas.core.dtypes.generic" -> "__future__" [];
	"pandas.core.dtypes.generic" -> "typing" [];
	"pandas.core.dtypes.generic" -> "pandas" [];
	"pandas.core.arraylike" -> "__future__" [];
	"pandas.core.arraylike" -> "operator" [];
	"pandas.core.arraylike" -> "typing" [];
	"pandas.core.arraylike" -> "numpy" [];
	"pandas.core.ops.common" -> "__future__" [];
	"pandas.core.ops.common" -> "functools" [];
	"pandas.core.ops.common" -> "typing" [];
	"pandas.core.ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "numpy" [];
	"pandas.core.ops.invalid" -> "__future__" [];
	"pandas.core.ops.invalid" -> "operator" [];
	"pandas.core.ops.invalid" -> "typing" [];
	"pandas.core.ops.invalid" -> "numpy" [];
	"pandas.core.ops.docstrings" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "datetime" [];
	"pandas.core.ops.array_ops" -> "functools" [];
	"pandas.core.ops.array_ops" -> "operator" [];
	"pandas.core.ops.array_ops" -> "typing" [];
	"pandas.core.ops.array_ops" -> "warnings" [];
	"pandas.core.ops.array_ops" -> "numpy" [];
	"pandas.core.ops.dispatch" -> "__future__" [];
	"pandas.core.ops.dispatch" -> "typing" [];
	"pandas.core.computation.expressions" -> "__future__" [];
	"pandas.core.computation.expressions" -> "operator" [];
	"pandas.core.computation.expressions" -> "typing" [];
	"pandas.core.computation.expressions" -> "warnings" [];
	"pandas.core.computation.expressions" -> "numpy" [];
	"pandas.core.computation.expressions" -> "numexpr" [];
	"pandas.core.computation.check" -> "__future__" [];
	"pandas.compat._optional" -> "__future__" [];
	"pandas.compat._optional" -> "importlib" [];
	"pandas.compat._optional" -> "sys" [];
	"pandas.compat._optional" -> "typing" [];
	"pandas.compat._optional" -> "warnings" [];
	"pandas.compat._optional" -> "types" [];
	"pandas.util.version" -> "__future__" [];
	"pandas.util.version" -> "collections" [];
	"pandas.util.version" -> "itertools" [];
	"pandas.util.version" -> "re" [];
	"pandas.util.version" -> "typing" [];
	"pandas.util.version" -> "warnings" [];
	"pandas.core.util.hashing" -> "__future__" [];
	"pandas.core.util.hashing" -> "itertools" [];
	"pandas.core.util.hashing" -> "typing" [];
	"pandas.core.util.hashing" -> "numpy" [];
	"pandas.core.util.hashing" -> "pandas" [];
	"pandas.core.computation.expr" -> "__future__" [];
	"pandas.core.computation.expr" -> "ast" [];
	"pandas.core.computation.expr" -> "functools" [];
	"pandas.core.computation.expr" -> "keyword" [];
	"pandas.core.computation.expr" -> "tokenize" [];
	"pandas.core.computation.expr" -> "typing" [];
	"pandas.core.computation.expr" -> "numpy" [];
	"pandas.core.computation.expr" -> "pandas" [];
	"pandas.core.computation.scope" -> "__future__" [];
	"pandas.core.computation.scope" -> "collections" [];
	"pandas.core.computation.scope" -> "datetime" [];
	"pandas.core.computation.scope" -> "inspect" [];
	"pandas.core.computation.scope" -> "io" [];
	"pandas.core.computation.scope" -> "itertools" [];
	"pandas.core.computation.scope" -> "pprint" [];
	"pandas.core.computation.scope" -> "struct" [];
	"pandas.core.computation.scope" -> "sys" [];
	"pandas.core.computation.scope" -> "typing" [];
	"pandas.core.computation.scope" -> "numpy" [];
	"pandas.core.computation.parsing" -> "__future__" [];
	"pandas.core.computation.parsing" -> "io" [];
	"pandas.core.computation.parsing" -> "keyword" [];
	"pandas.core.computation.parsing" -> "token" [];
	"pandas.core.computation.parsing" -> "tokenize" [];
	"pandas.core.computation.parsing" -> "typing" [];
	"pandas.core.computation.ops" -> "__future__" [];
	"pandas.core.computation.ops" -> "datetime" [];
	"pandas.core.computation.ops" -> "functools" [];
	"pandas.core.computation.ops" -> "operator" [];
	"pandas.core.computation.ops" -> "typing" [];
	"pandas.core.computation.ops" -> "numpy" [];
	"pandas.core.computation.eval" -> "__future__" [];
	"pandas.core.computation.eval" -> "tokenize" [];
	"pandas.core.computation.eval" -> "typing" [];
	"pandas.core.computation.eval" -> "warnings" [];
	"pandas.core.computation.engines" -> "__future__" [];
	"pandas.core.computation.engines" -> "abc" [];
	"pandas.core.computation.engines" -> "typing" [];
	"pandas.core.computation.engines" -> "numexpr" [];
	"pandas.core.computation.align" -> "__future__" [];
	"pandas.core.computation.align" -> "functools" [];
	"pandas.core.computation.align" -> "typing" [];
	"pandas.core.computation.align" -> "warnings" [];
	"pandas.core.computation.align" -> "numpy" [];
	"pandas.core.computation.align" -> "pandas" [];
	"pandas.util._validators" -> "__future__" [];
	"pandas.util._validators" -> "typing" [];
	"pandas.util._validators" -> "numpy" [];
	"pandas.core.computation.common" -> "__future__" [];
	"pandas.core.computation.common" -> "functools" [];
	"pandas.core.computation.common" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "__future__" [];
	"pandas.core.dtypes.cast" -> "datetime" [];
	"pandas.core.dtypes.cast" -> "functools" [];
	"pandas.core.dtypes.cast" -> "typing" [];
	"pandas.core.dtypes.cast" -> "warnings" [];
	"pandas.core.dtypes.cast" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "pyarrow" [];
	"pandas.core.arrays.timedeltas" -> "__future__" [];
	"pandas.core.arrays.timedeltas" -> "datetime" [];
	"pandas.core.arrays.timedeltas" -> "operator" [];
	"pandas.core.arrays.timedeltas" -> "typing" [];
	"pandas.core.arrays.timedeltas" -> "numpy" [];
	"pandas.core.arrays.timedeltas" -> "pandas" [];
	"pandas.core.arrays.timedeltas" -> "textwrap" [];
	"pandas.core.arrays._ranges" -> "__future__" [];
	"pandas.core.arrays._ranges" -> "typing" [];
	"pandas.core.arrays._ranges" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "__future__" [];
	"pandas.core.arrays.datetimelike" -> "datetime" [];
	"pandas.core.arrays.datetimelike" -> "functools" [];
	"pandas.core.arrays.datetimelike" -> "operator" [];
	"pandas.core.arrays.datetimelike" -> "typing" [];
	"pandas.core.arrays.datetimelike" -> "warnings" [];
	"pandas.core.arrays.datetimelike" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "pandas" [];
	"pandas.core.groupby.ops" -> "__future__" [];
	"pandas.core.groupby.ops" -> "collections" [];
	"pandas.core.groupby.ops" -> "functools" [];
	"pandas.core.groupby.ops" -> "typing" [];
	"pandas.core.groupby.ops" -> "numpy" [];
	"pandas.core.sorting" -> "__future__" [];
	"pandas.core.sorting" -> "collections" [];
	"pandas.core.sorting" -> "typing" [];
	"pandas.core.sorting" -> "numpy" [];
	"pandas.core.sorting" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "__future__" [];
	"pandas.core.groupby.grouper" -> "typing" [];
	"pandas.core.groupby.grouper" -> "warnings" [];
	"pandas.core.groupby.grouper" -> "numpy" [];
	"pandas.core.groupby.categorical" -> "__future__" [];
	"pandas.core.groupby.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "__future__" [];
	"pandas.core.arrays.categorical" -> "csv" [];
	"pandas.core.arrays.categorical" -> "functools" [];
	"pandas.core.arrays.categorical" -> "operator" [];
	"pandas.core.arrays.categorical" -> "shutil" [];
	"pandas.core.arrays.categorical" -> "typing" [];
	"pandas.core.arrays.categorical" -> "warnings" [];
	"pandas.core.arrays.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "pandas" [];
	"pandas.core.dtypes.concat" -> "__future__" [];
	"pandas.core.dtypes.concat" -> "typing" [];
	"pandas.core.dtypes.concat" -> "warnings" [];
	"pandas.core.dtypes.concat" -> "numpy" [];
	"pandas.core.dtypes.concat" -> "pandas" [];
	"pandas.core.dtypes.astype" -> "__future__" [];
	"pandas.core.dtypes.astype" -> "inspect" [];
	"pandas.core.dtypes.astype" -> "typing" [];
	"pandas.core.dtypes.astype" -> "warnings" [];
	"pandas.core.dtypes.astype" -> "numpy" [];
	"pandas.core.strings.object_array" -> "__future__" [];
	"pandas.core.strings.object_array" -> "functools" [];
	"pandas.core.strings.object_array" -> "re" [];
	"pandas.core.strings.object_array" -> "textwrap" [];
	"pandas.core.strings.object_array" -> "typing" [];
	"pandas.core.strings.object_array" -> "unicodedata" [];
	"pandas.core.strings.object_array" -> "warnings" [];
	"pandas.core.strings.object_array" -> "numpy" [];
	"pandas.core.strings.object_array" -> "pandas" [];
	"pandas.core.strings.base" -> "__future__" [];
	"pandas.core.strings.base" -> "abc" [];
	"pandas.core.strings.base" -> "typing" [];
	"pandas.core.strings.base" -> "re" [];
	"pandas.core.strings.base" -> "pandas" [];
	"pandas.core.accessor" -> "__future__" [];
	"pandas.core.accessor" -> "typing" [];
	"pandas.core.accessor" -> "warnings" [];
	"pandas.core.accessor" -> "pandas" [];
	"pandas.core.groupby.groupby" -> "__future__" [];
	"pandas.core.groupby.groupby" -> "datetime" [];
	"pandas.core.groupby.groupby" -> "functools" [];
	"pandas.core.groupby.groupby" -> "inspect" [];
	"pandas.core.groupby.groupby" -> "textwrap" [];
	"pandas.core.groupby.groupby" -> "typing" [];
	"pandas.core.groupby.groupby" -> "warnings" [];
	"pandas.core.groupby.groupby" -> "numpy" [];
	"pandas.core._numba.kernels.var_" -> "__future__" [];
	"pandas.core._numba.kernels.var_" -> "typing" [];
	"pandas.core._numba.kernels.var_" -> "numba" [];
	"pandas.core._numba.kernels.var_" -> "numpy" [];
	"pandas.core._numba.kernels.shared" -> "__future__" [];
	"pandas.core._numba.kernels.shared" -> "typing" [];
	"pandas.core._numba.kernels.shared" -> "numba" [];
	"pandas.core._numba.kernels.shared" -> "numpy" [];
	"pandas.core._numba.kernels.sum_" -> "__future__" [];
	"pandas.core._numba.kernels.sum_" -> "typing" [];
	"pandas.core._numba.kernels.sum_" -> "numba" [];
	"pandas.core._numba.kernels.sum_" -> "'numba.extending'" [];
	"pandas.core._numba.kernels.sum_" -> "numpy" [];
	"pandas.core._numba.kernels.min_max_" -> "__future__" [];
	"pandas.core._numba.kernels.min_max_" -> "typing" [];
	"pandas.core._numba.kernels.min_max_" -> "numba" [];
	"pandas.core._numba.kernels.min_max_" -> "numpy" [];
	"pandas.core._numba.kernels.mean_" -> "__future__" [];
	"pandas.core._numba.kernels.mean_" -> "typing" [];
	"pandas.core._numba.kernels.mean_" -> "numba" [];
	"pandas.core._numba.kernels.mean_" -> "numpy" [];
	"pandas.core.window.expanding" -> "__future__" [];
	"pandas.core.window.expanding" -> "textwrap" [];
	"pandas.core.window.expanding" -> "typing" [];
	"pandas.core.window.expanding" -> "pandas" [];
	"pandas.core.window.doc" -> "__future__" [];
	"pandas.core.window.doc" -> "textwrap" [];
	"pandas.core.shared_docs" -> "__future__" [];
	"pandas.core.indexers.objects" -> "__future__" [];
	"pandas.core.indexers.objects" -> "datetime" [];
	"pandas.core.indexers.objects" -> "numpy" [];
	"pandas.core.window.ewm" -> "__future__" [];
	"pandas.core.window.ewm" -> "datetime" [];
	"pandas.core.window.ewm" -> "functools" [];
	"pandas.core.window.ewm" -> "textwrap" [];
	"pandas.core.window.ewm" -> "typing" [];
	"pandas.core.window.ewm" -> "numpy" [];
	"pandas.core.window.ewm" -> "pandas" [];
	"pandas.core.window.online" -> "__future__" [];
	"pandas.core.window.online" -> "typing" [];
	"pandas.core.window.online" -> "numpy" [];
	"pandas.core.window.online" -> "numba" [];
	"pandas.core.window.numba_" -> "__future__" [];
	"pandas.core.window.numba_" -> "functools" [];
	"pandas.core.window.numba_" -> "typing" [];
	"pandas.core.window.numba_" -> "numpy" [];
	"pandas.core.window.numba_" -> "numba" [];
	"pandas.core.window.common" -> "__future__" [];
	"pandas.core.window.common" -> "collections" [];
	"pandas.core.window.common" -> "typing" [];
	"pandas.core.window.common" -> "numpy" [];
	"pandas.core.window.common" -> "pandas" [];
	"pandas.core.util.numba_" -> "__future__" [];
	"pandas.core.util.numba_" -> "types" [];
	"pandas.core.util.numba_" -> "typing" [];
	"pandas.core.util.numba_" -> "numpy" [];
	"pandas.core.util.numba_" -> "numba" [];
	"pandas.core.internals.blocks" -> "__future__" [];
	"pandas.core.internals.blocks" -> "functools" [];
	"pandas.core.internals.blocks" -> "inspect" [];
	"pandas.core.internals.blocks" -> "re" [];
	"pandas.core.internals.blocks" -> "typing" [];
	"pandas.core.internals.blocks" -> "warnings" [];
	"pandas.core.internals.blocks" -> "weakref" [];
	"pandas.core.internals.blocks" -> "numpy" [];
	"pandas.core.array_algos.transforms" -> "__future__" [];
	"pandas.core.array_algos.transforms" -> "typing" [];
	"pandas.core.array_algos.transforms" -> "numpy" [];
	"pandas.core.array_algos.replace" -> "__future__" [];
	"pandas.core.array_algos.replace" -> "operator" [];
	"pandas.core.array_algos.replace" -> "re" [];
	"pandas.core.array_algos.replace" -> "typing" [];
	"pandas.core.array_algos.replace" -> "numpy" [];
	"pandas.core.array_algos.quantile" -> "__future__" [];
	"pandas.core.array_algos.quantile" -> "typing" [];
	"pandas.core.array_algos.quantile" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "__future__" [];
	"pandas.core.array_algos.putmask" -> "typing" [];
	"pandas.core.array_algos.putmask" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "__future__" [];
	"pandas.core.groupby.indexing" -> "typing" [];
	"pandas.core.groupby.indexing" -> "numpy" [];
	"pandas.core.groupby.indexing" -> "pandas" [];
	"pandas.core.arrays.string_arrow" -> "__future__" [];
	"pandas.core.arrays.string_arrow" -> "operator" [];
	"pandas.core.arrays.string_arrow" -> "re" [];
	"pandas.core.arrays.string_arrow" -> "typing" [];
	"pandas.core.arrays.string_arrow" -> "warnings" [];
	"pandas.core.arrays.string_arrow" -> "numpy" [];
	"pandas.core.arrays.string_arrow" -> "pyarrow" [];
	"pandas.core.arrays.string_arrow" -> "'pyarrow.compute'" [];
	"pandas.core.arrays.string_arrow" -> "pandas" [];
	"pandas.core.arrays.masked" -> "__future__" [];
	"pandas.core.arrays.masked" -> "typing" [];
	"pandas.core.arrays.masked" -> "warnings" [];
	"pandas.core.arrays.masked" -> "numpy" [];
	"pandas.core.arrays.masked" -> "pandas" [];
	"pandas.core.arrays.masked" -> "pyarrow" [];
	"pandas.core.arrays._utils" -> "__future__" [];
	"pandas.core.arrays._utils" -> "typing" [];
	"pandas.core.arrays._utils" -> "numpy" [];
	"pandas.core.array_algos.masked_reductions" -> "__future__" [];
	"pandas.core.array_algos.masked_reductions" -> "typing" [];
	"pandas.core.array_algos.masked_reductions" -> "warnings" [];
	"pandas.core.array_algos.masked_reductions" -> "numpy" [];
	"pandas.core.array_algos.masked_accumulations" -> "__future__" [];
	"pandas.core.array_algos.masked_accumulations" -> "typing" [];
	"pandas.core.array_algos.masked_accumulations" -> "numpy" [];
	"pandas.core.dtypes.base" -> "__future__" [];
	"pandas.core.dtypes.base" -> "typing" [];
	"pandas.core.dtypes.base" -> "numpy" [];
	"pandas.core.dtypes.base" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "__future__" [];
	"pandas.core.arrays.numeric" -> "numbers" [];
	"pandas.core.arrays.numeric" -> "typing" [];
	"pandas.core.arrays.numeric" -> "numpy" [];
	"pandas.core.arrays.numeric" -> "pyarrow" [];
	"pandas.core.tools.numeric" -> "__future__" [];
	"pandas.core.tools.numeric" -> "typing" [];
	"pandas.core.tools.numeric" -> "warnings" [];
	"pandas.core.tools.numeric" -> "numpy" [];
	"pandas.core.tools.numeric" -> "pandas" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "__future__" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "numpy" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "pyarrow" [];
	"pandas.core.arrays.boolean" -> "__future__" [];
	"pandas.core.arrays.boolean" -> "numbers" [];
	"pandas.core.arrays.boolean" -> "typing" [];
	"pandas.core.arrays.boolean" -> "numpy" [];
	"pandas.core.arrays.boolean" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "__future__" [];
	"pandas.core.arrays.arrow.accessors" -> "abc" [];
	"pandas.core.arrays.arrow.accessors" -> "typing" [];
	"pandas.core.arrays.arrow.accessors" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "'pyarrow.compute'" [];
	"pandas.core.arrays.arrow.accessors" -> "pandas" [];
	"pandas.core.arrays._arrow_string_mixins" -> "__future__" [];
	"pandas.core.arrays._arrow_string_mixins" -> "functools" [];
	"pandas.core.arrays._arrow_string_mixins" -> "re" [];
	"pandas.core.arrays._arrow_string_mixins" -> "typing" [];
	"pandas.core.arrays._arrow_string_mixins" -> "numpy" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pyarrow" [];
	"pandas.core.arrays._arrow_string_mixins" -> "'pyarrow.compute'" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pandas" [];
	"pandas.core.apply" -> "__future__" [];
	"pandas.core.apply" -> "abc" [];
	"pandas.core.apply" -> "collections" [];
	"pandas.core.apply" -> "functools" [];
	"pandas.core.apply" -> "inspect" [];
	"pandas.core.apply" -> "typing" [];
	"pandas.core.apply" -> "warnings" [];
	"pandas.core.apply" -> "numpy" [];
	"pandas.core.apply" -> "pandas" [];
	"pandas.core._numba.extensions" -> "__future__" [];
	"pandas.core._numba.extensions" -> "contextlib" [];
	"pandas.core._numba.extensions" -> "operator" [];
	"pandas.core._numba.extensions" -> "numba" [];
	"pandas.core._numba.extensions" -> "'numba.core'" [];
	"pandas.core._numba.extensions" -> "numpy" [];
	"pandas.core._numba.extensions" -> "'numba.typed'" [];
	"pandas.core._numba.executor" -> "__future__" [];
	"pandas.core._numba.executor" -> "functools" [];
	"pandas.core._numba.executor" -> "typing" [];
	"pandas.core._numba.executor" -> "numpy" [];
	"pandas.core._numba.executor" -> "numba" [];
	"pandas.core.groupby.numba_" -> "__future__" [];
	"pandas.core.groupby.numba_" -> "functools" [];
	"pandas.core.groupby.numba_" -> "inspect" [];
	"pandas.core.groupby.numba_" -> "typing" [];
	"pandas.core.groupby.numba_" -> "numpy" [];
	"pandas.core.groupby.numba_" -> "numba" [];
	"pandas.core.groupby.base" -> "__future__" [];
	"pandas.core.groupby.base" -> "dataclasses" [];
	"pandas.core.groupby.base" -> "typing" [];
	"pandas.core.arrays.period" -> "__future__" [];
	"pandas.core.arrays.period" -> "datetime" [];
	"pandas.core.arrays.period" -> "operator" [];
	"pandas.core.arrays.period" -> "typing" [];
	"pandas.core.arrays.period" -> "warnings" [];
	"pandas.core.arrays.period" -> "numpy" [];
	"pandas.core.arrays.period" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "__future__" [];
	"pandas.core.arrays.arrow.extension_types" -> "json" [];
	"pandas.core.arrays.arrow.extension_types" -> "typing" [];
	"pandas.core.arrays.arrow.extension_types" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "io" [];
	"pandas.core.arrays.arrow.extension_types" -> "pickletools" [];
	"pickletools" -> "codecs" [];
	"pickletools" -> "io" [];
	"pickletools" -> "pickle" [];
	"pickletools" -> "re" [];
	"pickletools" -> "sys" [];
	"pickletools" -> "struct" [];
	"pickletools" -> "doctest" [];
	"pickletools" -> "argparse" [];
	"pandas.core.arrays.interval" -> "__future__" [];
	"pandas.core.arrays.interval" -> "operator" [];
	"pandas.core.arrays.interval" -> "textwrap" [];
	"pandas.core.arrays.interval" -> "typing" [];
	"pandas.core.arrays.interval" -> "warnings" [];
	"pandas.core.arrays.interval" -> "numpy" [];
	"pandas.core.arrays.interval" -> "pandas" [];
	"pandas.core.arrays.interval" -> "pyarrow" [];
	"pandas.tseries.frequencies" -> "__future__" [];
	"pandas.tseries.frequencies" -> "typing" [];
	"pandas.tseries.frequencies" -> "numpy" [];
	"pandas.tseries.frequencies" -> "pandas" [];
	"pandas.core.indexers.utils" -> "__future__" [];
	"pandas.core.indexers.utils" -> "typing" [];
	"pandas.core.indexers.utils" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "__future__" [];
	"pandas.core.arrays._mixins" -> "functools" [];
	"pandas.core.arrays._mixins" -> "typing" [];
	"pandas.core.arrays._mixins" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "pandas" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "__future__" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "typing" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "numpy" [];
	"pandas.compat.numpy.function" -> "__future__" [];
	"pandas.compat.numpy.function" -> "typing" [];
	"pandas.compat.numpy.function" -> "numpy" [];
	"pandas.compat.numpy" -> "warnings" [];
	"pandas.compat.numpy" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "__future__" [];
	"pandas.core.arrays.datetimes" -> "datetime" [];
	"pandas.core.arrays.datetimes" -> "typing" [];
	"pandas.core.arrays.datetimes" -> "warnings" [];
	"pandas.core.arrays.datetimes" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "pandas" [];
	"pandas.core.arrays.arrow.array" -> "__future__" [];
	"pandas.core.arrays.arrow.array" -> "functools" [];
	"pandas.core.arrays.arrow.array" -> "operator" [];
	"pandas.core.arrays.arrow.array" -> "pathlib" [];
	"pandas.core.arrays.arrow.array" -> "re" [];
	"pandas.core.arrays.arrow.array" -> "textwrap" [];
	"pandas.core.arrays.arrow.array" -> "typing" [];
	"pandas.core.arrays.arrow.array" -> "unicodedata" [];
	"pandas.core.arrays.arrow.array" -> "warnings" [];
	"pandas.core.arrays.arrow.array" -> "numpy" [];
	"pandas.core.arrays.arrow.array" -> "pyarrow" [];
	"pandas.core.arrays.arrow.array" -> "'pyarrow.compute'" [];
	"pandas.core.arrays.arrow.array" -> "pandas" [];
	"pandas.core.tools.times" -> "__future__" [];
	"pandas.core.tools.times" -> "datetime" [];
	"pandas.core.tools.times" -> "typing" [];
	"pandas.core.tools.times" -> "warnings" [];
	"pandas.core.tools.times" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "__future__" [];
	"pandas.core.tools.timedeltas" -> "typing" [];
	"pandas.core.tools.timedeltas" -> "warnings" [];
	"pandas.core.tools.timedeltas" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "datetime" [];
	"pandas.core.tools.timedeltas" -> "pandas" [];
	"pandas.core.tools.datetimes" -> "__future__" [];
	"pandas.core.tools.datetimes" -> "collections" [];
	"pandas.core.tools.datetimes" -> "datetime" [];
	"pandas.core.tools.datetimes" -> "functools" [];
	"pandas.core.tools.datetimes" -> "itertools" [];
	"pandas.core.tools.datetimes" -> "typing" [];
	"pandas.core.tools.datetimes" -> "warnings" [];
	"pandas.core.tools.datetimes" -> "numpy" [];
	"pandas.core.tools.datetimes" -> "pandas" [];
	"pandas.core.arrays.floating" -> "__future__" [];
	"pandas.core.arrays.floating" -> "typing" [];
	"pandas.core.arrays.floating" -> "numpy" [];
	"pandas.core.arrays.integer" -> "__future__" [];
	"pandas.core.arrays.integer" -> "typing" [];
	"pandas.core.arrays.integer" -> "numpy" [];
	"pandas.io._util" -> "__future__" [];
	"pandas.io._util" -> "typing" [];
	"pandas.io._util" -> "numpy" [];
	"pandas.io._util" -> "pandas" [];
	"pandas.io._util" -> "pyarrow" [];
	"pandas.core.dtypes.inference" -> "__future__" [];
	"pandas.core.dtypes.inference" -> "collections" [];
	"pandas.core.dtypes.inference" -> "numbers" [];
	"pandas.core.dtypes.inference" -> "re" [];
	"pandas.core.dtypes.inference" -> "typing" [];
	"pandas.core.dtypes.inference" -> "numpy" [];
	"pandas.core.dtypes.inference" -> "dataclasses" [];
	"pandas.util._exceptions" -> "__future__" [];
	"pandas.util._exceptions" -> "contextlib" [];
	"pandas.util._exceptions" -> "inspect" [];
	"pandas.util._exceptions" -> "os" [];
	"pandas.util._exceptions" -> "re" [];
	"pandas.util._exceptions" -> "typing" [];
	"pandas.util._exceptions" -> "warnings" [];
	"pandas.util._exceptions" -> "types" [];
	"pandas.util._exceptions" -> "pandas" [];
	"pandas.core.ops.missing" -> "__future__" [];
	"pandas.core.ops.missing" -> "operator" [];
	"pandas.core.ops.missing" -> "numpy" [];
	"pandas.core.construction" -> "__future__" [];
	"pandas.core.construction" -> "typing" [];
	"pandas.core.construction" -> "warnings" [];
	"pandas.core.construction" -> "numpy" [];
	"pandas.core.construction" -> "pandas" [];
	"pandas.core.algorithms" -> "__future__" [];
	"pandas.core.algorithms" -> "decimal" [];
	"pandas.core.algorithms" -> "operator" [];
	"pandas.core.algorithms" -> "textwrap" [];
	"pandas.core.algorithms" -> "typing" [];
	"pandas.core.algorithms" -> "warnings" [];
	"pandas.core.algorithms" -> "numpy" [];
	"pandas.core.algorithms" -> "pandas" [];
	"pandas.core.internals.construction" -> "__future__" [];
	"pandas.core.internals.construction" -> "collections" [];
	"pandas.core.internals.construction" -> "typing" [];
	"pandas.core.internals.construction" -> "numpy" [];
	"pandas.core.internals.construction" -> "dataclasses" [];
	"pandas.core.internals.managers" -> "__future__" [];
	"pandas.core.internals.managers" -> "itertools" [];
	"pandas.core.internals.managers" -> "typing" [];
	"pandas.core.internals.managers" -> "warnings" [];
	"pandas.core.internals.managers" -> "numpy" [];
	"pandas.core.internals.ops" -> "__future__" [];
	"pandas.core.internals.ops" -> "typing" [];
	"pandas.core.internals.base" -> "__future__" [];
	"pandas.core.internals.base" -> "typing" [];
	"pandas.core.internals.base" -> "numpy" [];
	"pandas.core.internals.array_manager" -> "__future__" [];
	"pandas.core.internals.array_manager" -> "itertools" [];
	"pandas.core.internals.array_manager" -> "typing" [];
	"pandas.core.internals.array_manager" -> "numpy" [];
	"pandas.core.reshape.tile" -> "__future__" [];
	"pandas.core.reshape.tile" -> "typing" [];
	"pandas.core.reshape.tile" -> "numpy" [];
	"pandas.core.reshape.tile" -> "pandas" [];
	"pandas.core.array_algos.take" -> "__future__" [];
	"pandas.core.array_algos.take" -> "functools" [];
	"pandas.core.array_algos.take" -> "typing" [];
	"pandas.core.array_algos.take" -> "numpy" [];
	"pandas.core.sample" -> "__future__" [];
	"pandas.core.sample" -> "typing" [];
	"pandas.core.sample" -> "numpy" [];
	"pandas.core.indexing" -> "__future__" [];
	"pandas.core.indexing" -> "contextlib" [];
	"pandas.core.indexing" -> "sys" [];
	"pandas.core.indexing" -> "typing" [];
	"pandas.core.indexing" -> "warnings" [];
	"pandas.core.indexing" -> "numpy" [];
	"pandas.core.indexing" -> "pandas" [];
	"pandas.compat._constants" -> "__future__" [];
	"pandas.compat._constants" -> "platform" [];
	"pandas.compat._constants" -> "sys" [];
	"pandas.compat._constants" -> "sysconfig" [];
	"pandas.core.nanops" -> "__future__" [];
	"pandas.core.nanops" -> "functools" [];
	"pandas.core.nanops" -> "itertools" [];
	"pandas.core.nanops" -> "typing" [];
	"pandas.core.nanops" -> "warnings" [];
	"pandas.core.nanops" -> "numpy" [];
	"pandas.core.nanops" -> "'scipy.stats'" [];
	"pandas.core.missing" -> "__future__" [];
	"pandas.core.missing" -> "functools" [];
	"pandas.core.missing" -> "typing" [];
	"pandas.core.missing" -> "numpy" [];
	"pandas.core.missing" -> "pandas" [];
	"pandas.core.missing" -> "scipy" [];
	"pandas.core.roperator" -> "__future__" [];
	"pandas.core.roperator" -> "operator" [];
	"pandas.util._decorators" -> "__future__" [];
	"pandas.util._decorators" -> "functools" [];
	"pandas.util._decorators" -> "inspect" [];
	"pandas.util._decorators" -> "textwrap" [];
	"pandas.util._decorators" -> "typing" [];
	"pandas.util._decorators" -> "warnings" [];
	"pandas.io.formats.string" -> "__future__" [];
	"pandas.io.formats.string" -> "shutil" [];
	"pandas.io.formats.string" -> "typing" [];
	"pandas.io.formats.string" -> "numpy" [];
	"pandas.io.formats.string" -> "pandas" [];
	"pandas.io.formats.html" -> "__future__" [];
	"pandas.io.formats.html" -> "textwrap" [];
	"pandas.io.formats.html" -> "typing" [];
	"pandas.io.formats.html" -> "pandas" [];
	"pandas.core.indexes.multi" -> "__future__" [];
	"pandas.core.indexes.multi" -> "functools" [];
	"pandas.core.indexes.multi" -> "sys" [];
	"pandas.core.indexes.multi" -> "typing" [];
	"pandas.core.indexes.multi" -> "warnings" [];
	"pandas.core.indexes.multi" -> "numpy" [];
	"pandas.core.indexes.multi" -> "pandas" [];
	"pandas.core.indexes.multi" -> "copy" [];
	"pandas.core.reshape.util" -> "__future__" [];
	"pandas.core.reshape.util" -> "typing" [];
	"pandas.core.reshape.util" -> "numpy" [];
	"pandas.core.indexes.frozen" -> "__future__" [];
	"pandas.core.indexes.frozen" -> "typing" [];
	"pandas.io.formats.console" -> "__future__" [];
	"pandas.io.formats.console" -> "shutil" [];
	"pandas.io.formats.console" -> "pandas" [];
	"pandas.io.formats.printing" -> "__future__" [];
	"pandas.io.formats.printing" -> "sys" [];
	"pandas.io.formats.printing" -> "typing" [];
	"pandas.io.formats.printing" -> "unicodedata" [];
	"pandas.io.formats.printing" -> "IPython" [];
	"pandas.io.formats.printing" -> "'IPython.core'" [];
	"pandas.io.formats.printing" -> "traitlets" [];
	"pandas.io.formats" -> "typing" [];
	"pandas.io.formats.style" -> "__future__" [];
	"pandas.io.formats.style" -> "contextlib" [];
	"pandas.io.formats.style" -> "copy" [];
	"pandas.io.formats.style" -> "functools" [];
	"pandas.io.formats.style" -> "operator" [];
	"pandas.io.formats.style" -> "typing" [];
	"pandas.io.formats.style" -> "warnings" [];
	"pandas.io.formats.style" -> "numpy" [];
	"pandas.io.formats.style" -> "pandas" [];
	"pandas.io.formats.style" -> "'matplotlib.colors'" [];
	"pandas.io.formats.style" -> "matplotlib" [];
	"pandas.io.formats.style" -> "'matplotlib.pyplot'" [];
	"pandas.io.formats.excel" -> "__future__" [];
	"pandas.io.formats.excel" -> "functools" [];
	"pandas.io.formats.excel" -> "itertools" [];
	"pandas.io.formats.excel" -> "re" [];
	"pandas.io.formats.excel" -> "typing" [];
	"pandas.io.formats.excel" -> "warnings" [];
	"pandas.io.formats.excel" -> "numpy" [];
	"pandas.io.formats.excel" -> "pandas" [];
	"pandas.io.excel._xlsxwriter" -> "__future__" [];
	"pandas.io.excel._xlsxwriter" -> "json" [];
	"pandas.io.excel._xlsxwriter" -> "typing" [];
	"pandas.io.excel._xlsxwriter" -> "xlsxwriter" [];
	"pandas.io.excel._util" -> "__future__" [];
	"pandas.io.excel._util" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "__future__" [];
	"pandas.io.excel._openpyxl" -> "mmap" [];
	"pandas.io.excel._openpyxl" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "numpy" [];
	"pandas.io.excel._openpyxl" -> "openpyxl" [];
	"pandas.io.excel._odswriter" -> "__future__" [];
	"pandas.io.excel._odswriter" -> "collections" [];
	"pandas.io.excel._odswriter" -> "datetime" [];
	"pandas.io.excel._odswriter" -> "json" [];
	"pandas.io.excel._odswriter" -> "typing" [];
	"pandas.io.excel._odswriter" -> "'odf.opendocument'" [];
	"pandas.io.excel._odswriter" -> "'odf.table'" [];
	"pandas.io.excel._odswriter" -> "'odf.text'" [];
	"pandas.io.excel._odswriter" -> "'odf.style'" [];
	"pandas.io.excel._odswriter" -> "'odf.config'" [];
	"pandas.io.excel._base" -> "__future__" [];
	"pandas.io.excel._base" -> "datetime" [];
	"pandas.io.excel._base" -> "functools" [];
	"pandas.io.excel._base" -> "io" [];
	"pandas.io.excel._base" -> "os" [];
	"pandas.io.excel._base" -> "textwrap" [];
	"pandas.io.excel._base" -> "typing" [];
	"pandas.io.excel._base" -> "warnings" [];
	"pandas.io.excel._base" -> "zipfile" [];
	"pandas.io.excel._base" -> "types" [];
	"pandas.io.excel._base" -> "xlrd" [];
	"pandas.io.excel._xlrd" -> "__future__" [];
	"pandas.io.excel._xlrd" -> "datetime" [];
	"pandas.io.excel._xlrd" -> "math" [];
	"pandas.io.excel._xlrd" -> "typing" [];
	"pandas.io.excel._xlrd" -> "numpy" [];
	"pandas.io.excel._xlrd" -> "xlrd" [];
	"pandas.io.excel._pyxlsb" -> "__future__" [];
	"pandas.io.excel._pyxlsb" -> "typing" [];
	"pandas.io.excel._pyxlsb" -> "pyxlsb" [];
	"pandas.io.excel._odfreader" -> "__future__" [];
	"pandas.io.excel._odfreader" -> "typing" [];
	"pandas.io.excel._odfreader" -> "numpy" [];
	"pandas.io.excel._odfreader" -> "pandas" [];
	"pandas.io.excel._odfreader" -> "odf" [];
	"pandas.io.excel._odfreader" -> "'odf.opendocument'" [];
	"pandas.io.excel._odfreader" -> "'odf.table'" [];
	"pandas.io.excel._odfreader" -> "'odf.namespaces'" [];
	"pandas.io.excel._odfreader" -> "'odf.element'" [];
	"pandas.io.excel._odfreader" -> "'odf.office'" [];
	"pandas.io.excel._odfreader" -> "'odf.text'" [];
	"pandas.io.excel._calamine" -> "__future__" [];
	"pandas.io.excel._calamine" -> "datetime" [];
	"pandas.io.excel._calamine" -> "typing" [];
	"pandas.io.excel._calamine" -> "pandas" [];
	"pandas.io.excel._calamine" -> "python_calamine" [];
	"pandas.io.parsers.readers" -> "__future__" [];
	"pandas.io.parsers.readers" -> "collections" [];
	"pandas.io.parsers.readers" -> "csv" [];
	"pandas.io.parsers.readers" -> "sys" [];
	"pandas.io.parsers.readers" -> "textwrap" [];
	"pandas.io.parsers.readers" -> "typing" [];
	"pandas.io.parsers.readers" -> "warnings" [];
	"pandas.io.parsers.readers" -> "numpy" [];
	"pandas.io.parsers.readers" -> "pandas" [];
	"pandas.io.parsers.readers" -> "types" [];
	"pandas.io.parsers.python_parser" -> "__future__" [];
	"pandas.io.parsers.python_parser" -> "collections" [];
	"pandas.io.parsers.python_parser" -> "csv" [];
	"pandas.io.parsers.python_parser" -> "io" [];
	"pandas.io.parsers.python_parser" -> "re" [];
	"pandas.io.parsers.python_parser" -> "typing" [];
	"pandas.io.parsers.python_parser" -> "warnings" [];
	"pandas.io.parsers.python_parser" -> "numpy" [];
	"pandas.io.parsers.python_parser" -> "pandas" [];
	"pandas.io.parsers.c_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.c_parser_wrapper" -> "collections" [];
	"pandas.io.parsers.c_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.c_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.c_parser_wrapper" -> "numpy" [];
	"pandas.io.parsers.c_parser_wrapper" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "__future__" [];
	"pandas.io.parsers.base_parser" -> "collections" [];
	"pandas.io.parsers.base_parser" -> "copy" [];
	"pandas.io.parsers.base_parser" -> "csv" [];
	"pandas.io.parsers.base_parser" -> "datetime" [];
	"pandas.io.parsers.base_parser" -> "enum" [];
	"pandas.io.parsers.base_parser" -> "itertools" [];
	"pandas.io.parsers.base_parser" -> "typing" [];
	"pandas.io.parsers.base_parser" -> "warnings" [];
	"pandas.io.parsers.base_parser" -> "numpy" [];
	"pandas.io.parsers.base_parser" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "pyarrow" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "pandas" [];
	"pandas.io.formats.css" -> "__future__" [];
	"pandas.io.formats.css" -> "re" [];
	"pandas.io.formats.css" -> "typing" [];
	"pandas.io.formats.css" -> "warnings" [];
	"pandas.io.formats._color_data" -> "__future__" [];
	"pandas.io.formats.style_render" -> "__future__" [];
	"pandas.io.formats.style_render" -> "collections" [];
	"pandas.io.formats.style_render" -> "functools" [];
	"pandas.io.formats.style_render" -> "re" [];
	"pandas.io.formats.style_render" -> "typing" [];
	"pandas.io.formats.style_render" -> "uuid" [];
	"pandas.io.formats.style_render" -> "numpy" [];
	"pandas.io.formats.style_render" -> "pandas" [];
	"pandas.io.formats.style_render" -> "markupsafe" [];
	"uuid" -> "os" [];
	"uuid" -> "sys" [];
	"uuid" -> "enum" [];
	"uuid" -> "platform" [];
	"uuid" -> "io" [];
	"uuid" -> "shutil" [];
	"uuid" -> "subprocess" [];
	"uuid" -> "socket" [];
	"uuid" -> "_uuid" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"uuid" -> "argparse" [];
	"pandas.io.common" -> "__future__" [];
	"pandas.io.common" -> "abc" [];
	"pandas.io.common" -> "codecs" [];
	"pandas.io.common" -> "collections" [];
	"pandas.io.common" -> "dataclasses" [];
	"pandas.io.common" -> "functools" [];
	"pandas.io.common" -> "gzip" [];
	"pandas.io.common" -> "io" [];
	"pandas.io.common" -> "mmap" [];
	"pandas.io.common" -> "os" [];
	"pandas.io.common" -> "pathlib" [];
	"pandas.io.common" -> "re" [];
	"pandas.io.common" -> "tarfile" [];
	"pandas.io.common" -> "typing" [];
	"pandas.io.common" -> "warnings" [];
	"pandas.io.common" -> "zipfile" [];
	"pandas.io.common" -> "types" [];
	"pandas.io.common" -> "pandas" [];
	"pandas.io.common" -> "botocore" [];
	"pandas.core.reshape.concat" -> "__future__" [];
	"pandas.core.reshape.concat" -> "collections" [];
	"pandas.core.reshape.concat" -> "typing" [];
	"pandas.core.reshape.concat" -> "warnings" [];
	"pandas.core.reshape.concat" -> "numpy" [];
	"pandas.core.reshape.concat" -> "pandas" [];
	"pandas.core.indexes.timedeltas" -> "__future__" [];
	"pandas.core.indexes.timedeltas" -> "typing" [];
	"pandas.core.indexes.timedeltas" -> "warnings" [];
	"pandas.core.indexes.extension" -> "__future__" [];
	"pandas.core.indexes.extension" -> "typing" [];
	"pandas.core.indexes.extension" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "__future__" [];
	"pandas.core.indexes.datetimelike" -> "abc" [];
	"pandas.core.indexes.datetimelike" -> "typing" [];
	"pandas.core.indexes.datetimelike" -> "warnings" [];
	"pandas.core.indexes.datetimelike" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "datetime" [];
	"pandas.core.indexes.datetimelike" -> "pandas" [];
	"pandas.core.indexes.range" -> "__future__" [];
	"pandas.core.indexes.range" -> "datetime" [];
	"pandas.core.indexes.range" -> "operator" [];
	"pandas.core.indexes.range" -> "sys" [];
	"pandas.core.indexes.range" -> "typing" [];
	"pandas.core.indexes.range" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "__future__" [];
	"pandas.core.indexes.datetimes" -> "datetime" [];
	"pandas.core.indexes.datetimes" -> "operator" [];
	"pandas.core.indexes.datetimes" -> "typing" [];
	"pandas.core.indexes.datetimes" -> "warnings" [];
	"pandas.core.indexes.datetimes" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "pytz" [];
	"pytz" -> "sys" [];
	"pytz" -> "datetime" [];
	"pytz" -> "os.path" [];
	"pytz" -> "doctest" [];
	"pytz.tzfile" -> "datetime" [];
	"pytz.tzfile" -> "struct" [];
	"pytz.tzfile" -> "os.path" [];
	"pytz.tzfile" -> "pprint" [];
	"pytz.tzinfo" -> "datetime" [];
	"pytz.tzinfo" -> "bisect" [];
	"pytz.tzinfo" -> "sets" [];
	"pytz.lazy" -> "threading" [];
	"pytz.lazy" -> "UserDict" [];
	"pytz.lazy" -> "collections" [];
	"pandas.core.indexes.api" -> "__future__" [];
	"pandas.core.indexes.api" -> "textwrap" [];
	"pandas.core.indexes.api" -> "typing" [];
	"pandas.core.indexes.api" -> "numpy" [];
	"pandas.core.indexes.period" -> "__future__" [];
	"pandas.core.indexes.period" -> "datetime" [];
	"pandas.core.indexes.period" -> "typing" [];
	"pandas.core.indexes.period" -> "warnings" [];
	"pandas.core.indexes.period" -> "numpy" [];
	"pandas.core.indexes.interval" -> "__future__" [];
	"pandas.core.indexes.interval" -> "operator" [];
	"pandas.core.indexes.interval" -> "textwrap" [];
	"pandas.core.indexes.interval" -> "typing" [];
	"pandas.core.indexes.interval" -> "numpy" [];
	"pandas.core.indexes.category" -> "__future__" [];
	"pandas.core.indexes.category" -> "typing" [];
	"pandas.core.indexes.category" -> "numpy" [];
	"pandas.core.common" -> "__future__" [];
	"pandas.core.common" -> "builtins" [];
	"pandas.core.common" -> "collections" [];
	"pandas.core.common" -> "contextlib" [];
	"pandas.core.common" -> "functools" [];
	"pandas.core.common" -> "inspect" [];
	"pandas.core.common" -> "typing" [];
	"pandas.core.common" -> "warnings" [];
	"pandas.core.common" -> "numpy" [];
	"pandas.core.common" -> "pandas" [];
	"pandas.core.base" -> "__future__" [];
	"pandas.core.base" -> "textwrap" [];
	"pandas.core.base" -> "typing" [];
	"pandas.core.base" -> "warnings" [];
	"pandas.core.base" -> "numpy" [];
	"pandas.core.base" -> "pandas" [];
	"pandas.core.arrays.string_" -> "__future__" [];
	"pandas.core.arrays.string_" -> "functools" [];
	"pandas.core.arrays.string_" -> "operator" [];
	"pandas.core.arrays.string_" -> "pathlib" [];
	"pandas.core.arrays.string_" -> "typing" [];
	"pandas.core.arrays.string_" -> "warnings" [];
	"pandas.core.arrays.string_" -> "numpy" [];
	"pandas.core.arrays.string_" -> "pyarrow" [];
	"pandas.core.arrays.string_" -> "pandas" [];
	"pandas.core.arrays.numpy_" -> "__future__" [];
	"pandas.core.arrays.numpy_" -> "typing" [];
	"pandas.core.arrays.numpy_" -> "numpy" [];
	"pandas.core.arrays.numpy_" -> "pandas" [];
	"pandas.core.arrays.sparse.array" -> "__future__" [];
	"pandas.core.arrays.sparse.array" -> "collections" [];
	"pandas.core.arrays.sparse.array" -> "numbers" [];
	"pandas.core.arrays.sparse.array" -> "operator" [];
	"pandas.core.arrays.sparse.array" -> "typing" [];
	"pandas.core.arrays.sparse.array" -> "warnings" [];
	"pandas.core.arrays.sparse.array" -> "numpy" [];
	"pandas.core.arrays.sparse.array" -> "enum" [];
	"pandas.core.arrays.sparse.array" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.array" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "__future__" [];
	"pandas.core.arrays.sparse.accessor" -> "typing" [];
	"pandas.core.arrays.sparse.accessor" -> "numpy" [];
	"pandas.core.arrays.sparse.accessor" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "__future__" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "typing" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "numpy" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "pandas" [];
	"pandas.core.dtypes.missing" -> "__future__" [];
	"pandas.core.dtypes.missing" -> "decimal" [];
	"pandas.core.dtypes.missing" -> "functools" [];
	"pandas.core.dtypes.missing" -> "typing" [];
	"pandas.core.dtypes.missing" -> "warnings" [];
	"pandas.core.dtypes.missing" -> "numpy" [];
	"pandas.core.dtypes.missing" -> "re" [];
	"pandas.core.dtypes.missing" -> "pandas" [];
	"pandas.core.dtypes.common" -> "__future__" [];
	"pandas.core.dtypes.common" -> "typing" [];
	"pandas.core.dtypes.common" -> "warnings" [];
	"pandas.core.dtypes.common" -> "numpy" [];
	"pandas.core.dtypes.common" -> "scipy" [];
	"pandas._config.config" -> "__future__" [];
	"pandas._config.config" -> "contextlib" [];
	"pandas._config.config" -> "re" [];
	"pandas._config.config" -> "typing" [];
	"pandas._config.config" -> "warnings" [];
	"pandas._config.config" -> "keyword" [];
	"pandas._config.config" -> "tokenize" [];
	"pandas._config.config" -> "itertools" [];
	"pandas._config.config" -> "textwrap" [];
	"pandas.core.window.rolling" -> "__future__" [];
	"pandas.core.window.rolling" -> "copy" [];
	"pandas.core.window.rolling" -> "datetime" [];
	"pandas.core.window.rolling" -> "functools" [];
	"pandas.core.window.rolling" -> "inspect" [];
	"pandas.core.window.rolling" -> "textwrap" [];
	"pandas.core.window.rolling" -> "typing" [];
	"pandas.core.window.rolling" -> "numpy" [];
	"pandas.core.window.rolling" -> "pandas" [];
	"pandas.core.series" -> "__future__" [];
	"pandas.core.series" -> "operator" [];
	"pandas.core.series" -> "sys" [];
	"pandas.core.series" -> "textwrap" [];
	"pandas.core.series" -> "typing" [];
	"pandas.core.series" -> "warnings" [];
	"pandas.core.series" -> "weakref" [];
	"pandas.core.series" -> "numpy" [];
	"pandas.core.reshape.reshape" -> "__future__" [];
	"pandas.core.reshape.reshape" -> "itertools" [];
	"pandas.core.reshape.reshape" -> "typing" [];
	"pandas.core.reshape.reshape" -> "warnings" [];
	"pandas.core.reshape.reshape" -> "numpy" [];
	"pandas.io.formats.info" -> "__future__" [];
	"pandas.io.formats.info" -> "abc" [];
	"pandas.io.formats.info" -> "sys" [];
	"pandas.io.formats.info" -> "textwrap" [];
	"pandas.io.formats.info" -> "typing" [];
	"pandas.io.formats.info" -> "pandas" [];
	"pandas.core.strings.accessor" -> "__future__" [];
	"pandas.core.strings.accessor" -> "codecs" [];
	"pandas.core.strings.accessor" -> "functools" [];
	"pandas.core.strings.accessor" -> "re" [];
	"pandas.core.strings.accessor" -> "typing" [];
	"pandas.core.strings.accessor" -> "warnings" [];
	"pandas.core.strings.accessor" -> "numpy" [];
	"pandas.core.strings.accessor" -> "pandas" [];
	"pandas.core.strings.accessor" -> "pyarrow" [];
	"pandas.core.methods.selectn" -> "__future__" [];
	"pandas.core.methods.selectn" -> "typing" [];
	"pandas.core.methods.selectn" -> "numpy" [];
	"pandas.core.methods.selectn" -> "pandas" [];
	"pandas.core.indexes.accessors" -> "__future__" [];
	"pandas.core.indexes.accessors" -> "typing" [];
	"pandas.core.indexes.accessors" -> "warnings" [];
	"pandas.core.indexes.accessors" -> "numpy" [];
	"pandas.core.indexes.accessors" -> "pandas" [];
	"pandas.core.resample" -> "__future__" [];
	"pandas.core.resample" -> "copy" [];
	"pandas.core.resample" -> "textwrap" [];
	"pandas.core.resample" -> "typing" [];
	"pandas.core.resample" -> "warnings" [];
	"pandas.core.resample" -> "numpy" [];
	"pandas.core.resample" -> "pandas" [];
	"pandas.core.internals" -> "warnings" [];
	"pandas.core.internals.concat" -> "__future__" [];
	"pandas.core.internals.concat" -> "typing" [];
	"pandas.core.internals.concat" -> "warnings" [];
	"pandas.core.internals.concat" -> "numpy" [];
	"pandas.core.internals.concat" -> "pandas" [];
	"pandas.core.internals.api" -> "__future__" [];
	"pandas.core.internals.api" -> "typing" [];
	"pandas.core.internals.api" -> "numpy" [];
	"pandas.core.internals.api" -> "warnings" [];
	"pandas.core.indexes.base" -> "__future__" [];
	"pandas.core.indexes.base" -> "collections" [];
	"pandas.core.indexes.base" -> "datetime" [];
	"pandas.core.indexes.base" -> "functools" [];
	"pandas.core.indexes.base" -> "itertools" [];
	"pandas.core.indexes.base" -> "operator" [];
	"pandas.core.indexes.base" -> "typing" [];
	"pandas.core.indexes.base" -> "warnings" [];
	"pandas.core.indexes.base" -> "numpy" [];
	"pandas.core.indexes.base" -> "pandas" [];
	"pandas.core.indexes.base" -> "pyarrow" [];
	"pandas.core.indexes.base" -> "copy" [];
	"pandas.core.reshape.merge" -> "__future__" [];
	"pandas.core.reshape.merge" -> "datetime" [];
	"pandas.core.reshape.merge" -> "functools" [];
	"pandas.core.reshape.merge" -> "typing" [];
	"pandas.core.reshape.merge" -> "uuid" [];
	"pandas.core.reshape.merge" -> "warnings" [];
	"pandas.core.reshape.merge" -> "numpy" [];
	"pandas.core.reshape.merge" -> "pandas" [];
	"pandas.core.reshape.merge" -> "pyarrow" [];
	"pandas.core.reshape.merge" -> "'pyarrow.compute'" [];
	"pandas.core.groupby.generic" -> "__future__" [];
	"pandas.core.groupby.generic" -> "collections" [];
	"pandas.core.groupby.generic" -> "functools" [];
	"pandas.core.groupby.generic" -> "textwrap" [];
	"pandas.core.groupby.generic" -> "typing" [];
	"pandas.core.groupby.generic" -> "warnings" [];
	"pandas.core.groupby.generic" -> "numpy" [];
	"pandas.core.groupby.generic" -> "pandas" [];
	"pandas.core.generic" -> "__future__" [];
	"pandas.core.generic" -> "collections" [];
	"pandas.core.generic" -> "copy" [];
	"pandas.core.generic" -> "datetime" [];
	"pandas.core.generic" -> "functools" [];
	"pandas.core.generic" -> "gc" [];
	"pandas.core.generic" -> "json" [];
	"pandas.core.generic" -> "operator" [];
	"pandas.core.generic" -> "pickle" [];
	"pandas.core.generic" -> "re" [];
	"pandas.core.generic" -> "sys" [];
	"pandas.core.generic" -> "typing" [];
	"pandas.core.generic" -> "warnings" [];
	"pandas.core.generic" -> "weakref" [];
	"pandas.core.generic" -> "numpy" [];
	"pandas.core.generic" -> "pandas" [];
	"pandas.io.clipboards" -> "__future__" [];
	"pandas.io.clipboards" -> "io" [];
	"pandas.io.clipboards" -> "typing" [];
	"pandas.io.clipboards" -> "warnings" [];
	"pandas.io.clipboards" -> "pandas" [];
	"pandas.io.clipboard" -> "contextlib" [];
	"pandas.io.clipboard" -> "ctypes" [];
	"pandas.io.clipboard" -> "os" [];
	"pandas.io.clipboard" -> "platform" [];
	"pandas.io.clipboard" -> "shutil" [];
	"pandas.io.clipboard" -> "subprocess" [];
	"pandas.io.clipboard" -> "time" [];
	"pandas.io.clipboard" -> "warnings" [];
	"pandas.io.clipboard" -> "qtpy" [];
	"pandas.io.clipboard" -> "PyQt4" [];
	"pandas.io.clipboard" -> "AppKit" [];
	"pandas.io.clipboard" -> "Foundation" [];
	"pandas.io.pickle" -> "__future__" [];
	"pandas.io.pickle" -> "pickle" [];
	"pandas.io.pickle" -> "typing" [];
	"pandas.io.pickle" -> "warnings" [];
	"pandas.io.pickle" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "__future__" [];
	"pandas.compat.pickle_compat" -> "contextlib" [];
	"pandas.compat.pickle_compat" -> "copy" [];
	"pandas.compat.pickle_compat" -> "io" [];
	"pandas.compat.pickle_compat" -> "pickle" [];
	"pandas.compat.pickle_compat" -> "typing" [];
	"pandas.compat.pickle_compat" -> "numpy" [];
	"pandas.compat.pickle_compat" -> "pandas" [];
	"pandas.io.sql" -> "__future__" [];
	"pandas.io.sql" -> "abc" [];
	"pandas.io.sql" -> "contextlib" [];
	"pandas.io.sql" -> "datetime" [];
	"pandas.io.sql" -> "functools" [];
	"pandas.io.sql" -> "re" [];
	"pandas.io.sql" -> "typing" [];
	"pandas.io.sql" -> "warnings" [];
	"pandas.io.sql" -> "numpy" [];
	"pandas.io.sql" -> "pandas" [];
	"pandas.io.sql" -> "sqlalchemy" [];
	"pandas.io.sql" -> "'sqlalchemy.sql'" [];
	"pandas.io.sql" -> "sqlite3" [];
	"pandas.io.sql" -> "'sqlalchemy.schema'" [];
	"pandas.io.sql" -> "pyarrow" [];
	"pandas.io.sql" -> "'sqlalchemy.types'" [];
	"pandas.io.sql" -> "'sqlalchemy.engine'" [];
	"sqlite3" -> "warnings" [];
	"sqlite3.__main__" -> "sys" [];
	"sqlite3.__main__" -> "argparse" [];
	"sqlite3.__main__" -> "code" [];
	"sqlite3.__main__" -> "textwrap" [];
	"sqlite3.dbapi2" -> "datetime" [];
	"sqlite3.dbapi2" -> "time" [];
	"sqlite3.dbapi2" -> "_sqlite3" [];
	"sqlite3.dbapi2" -> "warnings" [];
	"pandas.io.pytables" -> "__future__" [];
	"pandas.io.pytables" -> "contextlib" [];
	"pandas.io.pytables" -> "copy" [];
	"pandas.io.pytables" -> "datetime" [];
	"pandas.io.pytables" -> "itertools" [];
	"pandas.io.pytables" -> "os" [];
	"pandas.io.pytables" -> "re" [];
	"pandas.io.pytables" -> "textwrap" [];
	"pandas.io.pytables" -> "typing" [];
	"pandas.io.pytables" -> "warnings" [];
	"pandas.io.pytables" -> "numpy" [];
	"pandas.io.pytables" -> "pandas" [];
	"pandas.io.pytables" -> "types" [];
	"pandas.io.pytables" -> "tables" [];
	"pandas.core.computation.pytables" -> "__future__" [];
	"pandas.core.computation.pytables" -> "ast" [];
	"pandas.core.computation.pytables" -> "decimal" [];
	"pandas.core.computation.pytables" -> "functools" [];
	"pandas.core.computation.pytables" -> "typing" [];
	"pandas.core.computation.pytables" -> "numpy" [];
	"pandas.io.json._table_schema" -> "__future__" [];
	"pandas.io.json._table_schema" -> "typing" [];
	"pandas.io.json._table_schema" -> "warnings" [];
	"pandas.io.json._table_schema" -> "pandas" [];
	"pandas.io.json._json" -> "__future__" [];
	"pandas.io.json._json" -> "abc" [];
	"pandas.io.json._json" -> "collections" [];
	"pandas.io.json._json" -> "io" [];
	"pandas.io.json._json" -> "itertools" [];
	"pandas.io.json._json" -> "typing" [];
	"pandas.io.json._json" -> "warnings" [];
	"pandas.io.json._json" -> "numpy" [];
	"pandas.io.json._json" -> "pandas" [];
	"pandas.io.json._json" -> "types" [];
	"pandas.core.methods.describe" -> "__future__" [];
	"pandas.core.methods.describe" -> "abc" [];
	"pandas.core.methods.describe" -> "typing" [];
	"pandas.core.methods.describe" -> "numpy" [];
	"pandas.core.methods.describe" -> "pandas" [];
	"pandas.core.methods.describe" -> "pyarrow" [];
	"pandas.core.flags" -> "__future__" [];
	"pandas.core.flags" -> "typing" [];
	"pandas.core.flags" -> "weakref" [];
	"pandas.core.frame" -> "__future__" [];
	"pandas.core.frame" -> "collections" [];
	"pandas.core.frame" -> "functools" [];
	"pandas.core.frame" -> "inspect" [];
	"pandas.core.frame" -> "io" [];
	"pandas.core.frame" -> "itertools" [];
	"pandas.core.frame" -> "operator" [];
	"pandas.core.frame" -> "sys" [];
	"pandas.core.frame" -> "textwrap" [];
	"pandas.core.frame" -> "typing" [];
	"pandas.core.frame" -> "warnings" [];
	"pandas.core.frame" -> "numpy" [];
	"pandas.core.frame" -> "datetime" [];
	"pandas.core.frame" -> "pandas" [];
	"pandas.core.reshape.pivot" -> "__future__" [];
	"pandas.core.reshape.pivot" -> "typing" [];
	"pandas.core.reshape.pivot" -> "warnings" [];
	"pandas.core.reshape.pivot" -> "numpy" [];
	"pandas.core.reshape.pivot" -> "pandas" [];
	"pandas.io.formats.xml" -> "__future__" [];
	"pandas.io.formats.xml" -> "codecs" [];
	"pandas.io.formats.xml" -> "io" [];
	"pandas.io.formats.xml" -> "typing" [];
	"pandas.io.formats.xml" -> "warnings" [];
	"pandas.io.formats.xml" -> "pandas" [];
	"pandas.io.formats.xml" -> "'lxml.etree'" [];
	"xml.dom.minidom" -> "io" [];
	"xml.dom.pulldom" -> "io" [];
	"xml.dom.xmlbuilder" -> "copy" [];
	"xml.dom.xmlbuilder" -> "posixpath" [];
	"xml.dom.domreg" -> "sys" [];
	"xml.dom.domreg" -> "os" [];
	"pandas.io.xml" -> "__future__" [];
	"pandas.io.xml" -> "io" [];
	"pandas.io.xml" -> "os" [];
	"pandas.io.xml" -> "typing" [];
	"pandas.io.xml" -> "warnings" [];
	"pandas.io.xml" -> "lxml" [];
	"pandas.io.xml" -> "pandas" [];
	"pandas.io.xml" -> "'lxml.etree'" [];
	"pandas.io.orc" -> "__future__" [];
	"pandas.io.orc" -> "io" [];
	"pandas.io.orc" -> "types" [];
	"pandas.io.orc" -> "typing" [];
	"pandas.io.orc" -> "fsspec" [];
	"pandas.io.orc" -> "'pyarrow.fs'" [];
	"pandas.io.parquet" -> "__future__" [];
	"pandas.io.parquet" -> "io" [];
	"pandas.io.parquet" -> "json" [];
	"pandas.io.parquet" -> "os" [];
	"pandas.io.parquet" -> "typing" [];
	"pandas.io.parquet" -> "warnings" [];
	"pandas.io.parquet" -> "pandas" [];
	"pandas.io.parquet" -> "'pyarrow.parquet'" [];
	"pandas.io.feather_format" -> "__future__" [];
	"pandas.io.feather_format" -> "typing" [];
	"pandas.io.feather_format" -> "pyarrow" [];
	"pandas.io.stata" -> "__future__" [];
	"pandas.io.stata" -> "collections" [];
	"pandas.io.stata" -> "datetime" [];
	"pandas.io.stata" -> "io" [];
	"pandas.io.stata" -> "os" [];
	"pandas.io.stata" -> "struct" [];
	"pandas.io.stata" -> "sys" [];
	"pandas.io.stata" -> "typing" [];
	"pandas.io.stata" -> "warnings" [];
	"pandas.io.stata" -> "numpy" [];
	"pandas.io.stata" -> "pandas" [];
	"pandas.io.stata" -> "types" [];
	"pandas.io.gbq" -> "__future__" [];
	"pandas.io.gbq" -> "typing" [];
	"pandas.io.gbq" -> "warnings" [];
	"pandas.io.gbq" -> "google" [];
	"pandas.io.gbq" -> "pandas" [];
	"pandas.core.methods.to_dict" -> "__future__" [];
	"pandas.core.methods.to_dict" -> "typing" [];
	"pandas.core.methods.to_dict" -> "warnings" [];
	"pandas.core.methods.to_dict" -> "numpy" [];
	"pandas.core.methods.to_dict" -> "pandas" [];
	"pandas.core.interchange.dataframe" -> "__future__" [];
	"pandas.core.interchange.dataframe" -> "collections" [];
	"pandas.core.interchange.dataframe" -> "typing" [];
	"pandas.core.interchange.dataframe" -> "pandas" [];
	"pandas.core.interchange.utils" -> "__future__" [];
	"pandas.core.interchange.utils" -> "typing" [];
	"pandas.core.interchange.utils" -> "numpy" [];
	"pandas.core.interchange.utils" -> "pandas" [];
	"pandas.core.interchange.utils" -> "pyarrow" [];
	"pandas.core.interchange.column" -> "__future__" [];
	"pandas.core.interchange.column" -> "typing" [];
	"pandas.core.interchange.column" -> "numpy" [];
	"pandas.core.interchange.column" -> "pandas" [];
	"pandas.core.interchange.buffer" -> "__future__" [];
	"pandas.core.interchange.buffer" -> "typing" [];
	"pandas.core.interchange.buffer" -> "numpy" [];
	"pandas.core.interchange.buffer" -> "pyarrow" [];
	"pandas.core.interchange.dataframe_protocol" -> "__future__" [];
	"pandas.core.interchange.dataframe_protocol" -> "abc" [];
	"pandas.core.interchange.dataframe_protocol" -> "enum" [];
	"pandas.core.interchange.dataframe_protocol" -> "typing" [];
	"pandas.core.reshape.melt" -> "__future__" [];
	"pandas.core.reshape.melt" -> "re" [];
	"pandas.core.reshape.melt" -> "typing" [];
	"pandas.core.reshape.melt" -> "numpy" [];
	"pandas.core.reshape.melt" -> "pandas" [];
	"pandas.core.arrays.base" -> "__future__" [];
	"pandas.core.arrays.base" -> "operator" [];
	"pandas.core.arrays.base" -> "typing" [];
	"pandas.core.arrays.base" -> "warnings" [];
	"pandas.core.arrays.base" -> "numpy" [];
	"pandas.core.arrays.base" -> "pandas" [];
	"pandas._libs.window.indexers" -> "numpy" [];
	"pandas._libs.window.aggregations" -> "typing" [];
	"pandas._libs.window.aggregations" -> "numpy" [];
	"pandas._libs.tslibs.vectorized" -> "datetime" [];
	"pandas._libs.tslibs.vectorized" -> "numpy" [];
	"pandas._libs.tslibs.tzconversion" -> "datetime" [];
	"pandas._libs.tslibs.tzconversion" -> "typing" [];
	"pandas._libs.tslibs.tzconversion" -> "numpy" [];
	"pandas._libs.tslibs.timezones" -> "datetime" [];
	"pandas._libs.tslibs.timezones" -> "typing" [];
	"pandas._libs.tslibs.timezones" -> "numpy" [];
	"pandas._libs.tslibs.timestamps" -> "datetime" [];
	"pandas._libs.tslibs.timestamps" -> "time" [];
	"pandas._libs.tslibs.timestamps" -> "typing" [];
	"pandas._libs.tslibs.timestamps" -> "numpy" [];
	"pandas._libs.tslibs.timedeltas" -> "datetime" [];
	"pandas._libs.tslibs.timedeltas" -> "typing" [];
	"pandas._libs.tslibs.timedeltas" -> "numpy" [];
	"pandas._libs.tslibs.strptime" -> "numpy" [];
	"pandas._libs.tslibs.period" -> "datetime" [];
	"pandas._libs.tslibs.period" -> "typing" [];
	"pandas._libs.tslibs.period" -> "numpy" [];
	"pandas._libs.tslibs.parsing" -> "datetime" [];
	"pandas._libs.tslibs.parsing" -> "numpy" [];
	"pandas._libs.tslibs.offsets" -> "datetime" [];
	"pandas._libs.tslibs.offsets" -> "typing" [];
	"pandas._libs.tslibs.offsets" -> "numpy" [];
	"pandas._libs.tslibs.np_datetime" -> "numpy" [];
	"pandas._libs.tslibs.nattype" -> "datetime" [];
	"pandas._libs.tslibs.nattype" -> "typing" [];
	"pandas._libs.tslibs.nattype" -> "numpy" [];
	"pandas._libs.tslibs.fields" -> "numpy" [];
	"pandas._libs.tslibs.dtypes" -> "enum" [];
	"pandas._libs.tslibs.conversion" -> "datetime" [];
	"pandas._libs.tslibs.conversion" -> "numpy" [];
	"pandas._libs.tslib" -> "datetime" [];
	"pandas._libs.tslib" -> "numpy" [];
	"pandas._libs.sparse" -> "typing" [];
	"pandas._libs.sparse" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "__future__" [];
	"pandas.io.sas.sas7bdat" -> "collections" [];
	"pandas.io.sas.sas7bdat" -> "datetime" [];
	"pandas.io.sas.sas7bdat" -> "sys" [];
	"pandas.io.sas.sas7bdat" -> "typing" [];
	"pandas.io.sas.sas7bdat" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "__future__" [];
	"pandas.io.sas.sasreader" -> "abc" [];
	"pandas.io.sas.sasreader" -> "typing" [];
	"pandas.io.sas.sasreader" -> "types" [];
	"pandas.io.sas.sasreader" -> "pandas" [];
	"pandas.io.sas.sas_xport" -> "__future__" [];
	"pandas.io.sas.sas_xport" -> "collections" [];
	"pandas.io.sas.sas_xport" -> "datetime" [];
	"pandas.io.sas.sas_xport" -> "struct" [];
	"pandas.io.sas.sas_xport" -> "typing" [];
	"pandas.io.sas.sas_xport" -> "warnings" [];
	"pandas.io.sas.sas_xport" -> "numpy" [];
	"pandas.io.sas.sas_xport" -> "pandas" [];
	"pandas.io.sas.sas_constants" -> "__future__" [];
	"pandas.io.sas.sas_constants" -> "typing" [];
	"pandas._libs.reshape" -> "numpy" [];
	"pandas._libs.properties" -> "typing" [];
	"pandas._libs.parsers" -> "typing" [];
	"pandas._libs.parsers" -> "numpy" [];
	"pandas._libs.ops_dispatch" -> "numpy" [];
	"pandas._libs.ops" -> "typing" [];
	"pandas._libs.ops" -> "numpy" [];
	"pandas._libs.missing" -> "numpy" [];
	"pandas._libs.lib" -> "decimal" [];
	"pandas._libs.lib" -> "typing" [];
	"pandas._libs.lib" -> "numpy" [];
	"pandas._libs.lib" -> "enum" [];
	"pandas._libs.json" -> "typing" [];
	"pandas._libs.join" -> "numpy" [];
	"pandas._libs.interval" -> "typing" [];
	"pandas._libs.interval" -> "numpy" [];
	"pandas._libs.internals" -> "typing" [];
	"pandas._libs.internals" -> "weakref" [];
	"pandas._libs.internals" -> "numpy" [];
	"pandas._libs.internals" -> "pandas" [];
	"pandas._libs.indexing" -> "typing" [];
	"pandas._libs.index" -> "numpy" [];
	"pandas._libs.index" -> "pandas" [];
	"pandas._libs.hashtable" -> "typing" [];
	"pandas._libs.hashtable" -> "numpy" [];
	"pandas._libs.hashing" -> "numpy" [];
	"pandas._libs.groupby" -> "typing" [];
	"pandas._libs.groupby" -> "numpy" [];
	"pandas._libs.arrays" -> "typing" [];
	"pandas._libs.arrays" -> "numpy" [];
	"pandas._libs.algos" -> "typing" [];
	"pandas._libs.algos" -> "numpy" [];
	"pandas._version" -> "errno" [];
	"pandas._version" -> "functools" [];
	"pandas._version" -> "os" [];
	"pandas._version" -> "re" [];
	"pandas._version" -> "subprocess" [];
	"pandas._version" -> "sys" [];
	"pandas._version" -> "typing" [];
	"pandas.util._tester" -> "__future__" [];
	"pandas.util._tester" -> "os" [];
	"pandas.util._tester" -> "sys" [];
	"pandas.io.json._normalize" -> "__future__" [];
	"pandas.io.json._normalize" -> "collections" [];
	"pandas.io.json._normalize" -> "copy" [];
	"pandas.io.json._normalize" -> "typing" [];
	"pandas.io.json._normalize" -> "numpy" [];
	"pandas.io.json._normalize" -> "pandas" [];
	"pandas.io.spss" -> "__future__" [];
	"pandas.io.spss" -> "typing" [];
	"pandas.io.spss" -> "pathlib" [];
	"pandas.io.spss" -> "pandas" [];
	"pandas.io.html" -> "__future__" [];
	"pandas.io.html" -> "collections" [];
	"pandas.io.html" -> "numbers" [];
	"pandas.io.html" -> "re" [];
	"pandas.io.html" -> "typing" [];
	"pandas.io.html" -> "warnings" [];
	"pandas.io.html" -> "pandas" [];
	"pandas.io.html" -> "bs4" [];
	"pandas.io.html" -> "'lxml.etree'" [];
	"pandas.io.html" -> "'lxml.html'" [];
	"pandas.util._print_versions" -> "__future__" [];
	"pandas.util._print_versions" -> "json" [];
	"pandas.util._print_versions" -> "locale" [];
	"pandas.util._print_versions" -> "os" [];
	"pandas.util._print_versions" -> "platform" [];
	"pandas.util._print_versions" -> "struct" [];
	"pandas.util._print_versions" -> "sys" [];
	"pandas.util._print_versions" -> "typing" [];
	"pandas._testing" -> "__future__" [];
	"pandas._testing" -> "decimal" [];
	"pandas._testing" -> "operator" [];
	"pandas._testing" -> "os" [];
	"pandas._testing" -> "sys" [];
	"pandas._testing" -> "typing" [];
	"pandas._testing" -> "warnings" [];
	"pandas._testing" -> "numpy" [];
	"pandas._testing" -> "pyarrow" [];
	"pandas._testing" -> "pytest" [];
	"pandas._testing.contexts" -> "__future__" [];
	"pandas._testing.contexts" -> "contextlib" [];
	"pandas._testing.contexts" -> "os" [];
	"pandas._testing.contexts" -> "pathlib" [];
	"pandas._testing.contexts" -> "tempfile" [];
	"pandas._testing.contexts" -> "typing" [];
	"pandas._testing.contexts" -> "uuid" [];
	"pandas._testing.contexts" -> "pandas" [];
	"pandas._testing.contexts" -> "time" [];
	"pandas._testing.contexts" -> "csv" [];
	"pandas._testing.compat" -> "__future__" [];
	"pandas._testing.compat" -> "typing" [];
	"pandas._testing.compat" -> "pandas" [];
	"pandas._testing.asserters" -> "__future__" [];
	"pandas._testing.asserters" -> "operator" [];
	"pandas._testing.asserters" -> "typing" [];
	"pandas._testing.asserters" -> "numpy" [];
	"pandas._testing.asserters" -> "pandas" [];
	"pandas._testing.asserters" -> "'matplotlib.artist'" [];
	"pandas._testing.asserters" -> "'matplotlib.axes'" [];
	"pandas._testing._warnings" -> "__future__" [];
	"pandas._testing._warnings" -> "contextlib" [];
	"pandas._testing._warnings" -> "inspect" [];
	"pandas._testing._warnings" -> "re" [];
	"pandas._testing._warnings" -> "sys" [];
	"pandas._testing._warnings" -> "typing" [];
	"pandas._testing._warnings" -> "warnings" [];
	"pandas._testing._io" -> "__future__" [];
	"pandas._testing._io" -> "gzip" [];
	"pandas._testing._io" -> "io" [];
	"pandas._testing._io" -> "pathlib" [];
	"pandas._testing._io" -> "tarfile" [];
	"pandas._testing._io" -> "typing" [];
	"pandas._testing._io" -> "uuid" [];
	"pandas._testing._io" -> "zipfile" [];
	"pandas._testing._io" -> "pandas" [];
	"pandas._testing._io" -> "pytest" [];
	"pandas._config.localization" -> "__future__" [];
	"pandas._config.localization" -> "contextlib" [];
	"pandas._config.localization" -> "locale" [];
	"pandas._config.localization" -> "platform" [];
	"pandas._config.localization" -> "re" [];
	"pandas._config.localization" -> "subprocess" [];
	"pandas._config.localization" -> "typing" [];
	"pandas.plotting._misc" -> "__future__" [];
	"pandas.plotting._misc" -> "contextlib" [];
	"pandas.plotting._misc" -> "typing" [];
	"pandas.plotting._misc" -> "'matplotlib.axes'" [];
	"pandas.plotting._misc" -> "'matplotlib.colors'" [];
	"pandas.plotting._misc" -> "'matplotlib.figure'" [];
	"pandas.plotting._misc" -> "'matplotlib.table'" [];
	"pandas.plotting._misc" -> "numpy" [];
	"pandas.plotting._misc" -> "pandas" [];
	"pandas.plotting._core" -> "__future__" [];
	"pandas.plotting._core" -> "importlib" [];
	"pandas.plotting._core" -> "typing" [];
	"pandas.plotting._core" -> "types" [];
	"pandas.plotting._core" -> "matplotlib" [];
	"pandas.plotting._core" -> "numpy" [];
	"pandas.plotting._core" -> "pandas" [];
	"pandas.io" -> "typing" [];
	"pandas.errors" -> "__future__" [];
	"pandas.errors" -> "ctypes" [];
	"pandas.arrays" -> "warnings" [];
	"pandas.core.interchange.from_dataframe" -> "__future__" [];
	"pandas.core.interchange.from_dataframe" -> "ctypes" [];
	"pandas.core.interchange.from_dataframe" -> "re" [];
	"pandas.core.interchange.from_dataframe" -> "typing" [];
	"pandas.core.interchange.from_dataframe" -> "numpy" [];
	"pandas.core.interchange.from_dataframe" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "__future__" [];
	"pandas.core.reshape.encoding" -> "collections" [];
	"pandas.core.reshape.encoding" -> "itertools" [];
	"pandas.core.reshape.encoding" -> "typing" [];
	"pandas.core.reshape.encoding" -> "numpy" [];
	"pandas.core.reshape.encoding" -> "pyarrow" [];
	"pandas.tseries.offsets" -> "__future__" [];
	"pandas.tseries" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "__future__" [];
	"pandas.core.dtypes.dtypes" -> "datetime" [];
	"pandas.core.dtypes.dtypes" -> "decimal" [];
	"pandas.core.dtypes.dtypes" -> "re" [];
	"pandas.core.dtypes.dtypes" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "warnings" [];
	"pandas.core.dtypes.dtypes" -> "numpy" [];
	"pandas.core.dtypes.dtypes" -> "pytz" [];
	"pandas.core.dtypes.dtypes" -> "pyarrow" [];
	"pandas.core.dtypes.dtypes" -> "pandas" [];
	"pandas.core.config_init" -> "__future__" [];
	"pandas.core.config_init" -> "os" [];
	"pandas.core.config_init" -> "typing" [];
	"pandas._config.display" -> "__future__" [];
	"pandas._config.display" -> "locale" [];
	"pandas._config.display" -> "sys" [];
	"pandas._config.dates" -> "__future__" [];
	"pandas.compat" -> "__future__" [];
	"pandas.compat" -> "os" [];
	"pandas.compat" -> "platform" [];
	"pandas.compat" -> "sys" [];
	"pandas.compat" -> "typing" [];
	"pandas.compat.pyarrow" -> "__future__" [];
	"pandas.compat.pyarrow" -> "pyarrow" [];
	"pandas.compat.compressors" -> "__future__" [];
	"pandas.compat.compressors" -> "pickle" [];
	"pandas.compat.compressors" -> "bz2" [];
	"pandas.compat.compressors" -> "lzma" [];
	"openpyxl.packaging.interface" -> "abc" [];
	"openpyxl.compat.singleton" -> "weakref" [];
	"openpyxl.compat.product" -> "functools" [];
	"openpyxl.compat.product" -> "operator" [];
	"openpyxl.compat.product" -> "math" [];
	"openpyxl.compat.abc" -> "abc" [];
	"numpy.typing.tests.test_typing" -> "os" [];
	"numpy.typing.tests.test_typing" -> "re" [];
	"numpy.typing.tests.test_typing" -> "shutil" [];
	"numpy.typing.tests.test_typing" -> "textwrap" [];
	"numpy.typing.tests.test_typing" -> "collections" [];
	"numpy.typing.tests.test_typing" -> "typing" [];
	"numpy.typing.tests.test_typing" -> "mypy" [];
	"numpy.typing.tests.test_typing" -> "_pytest" [];
	"numpy.typing.tests.test_runtime" -> "typing" [];
	"numpy.typing.tests.test_runtime" -> "numpy" [];
	"numpy.typing.tests.test_isfile" -> "os" [];
	"numpy.typing.tests.test_isfile" -> "sys" [];
	"numpy.typing.tests.test_isfile" -> "pathlib" [];
	"numpy.typing.tests.test_isfile" -> "numpy" [];
	"numpy.typing.mypy_plugin" -> "typing" [];
	"numpy.typing.mypy_plugin" -> "numpy" [];
	"numpy.typing.mypy_plugin" -> "mypy" [];
	"numpy.typing.mypy_plugin" -> "'mypy.types'" [];
	"numpy.typing.mypy_plugin" -> "'mypy.build'" [];
	"numpy.typing.mypy_plugin" -> "'mypy.nodes'" [];
	"numpy.typing.mypy_plugin" -> "'mypy.plugin'" [];
	"numpy.typing.mypy_plugin" -> "warnings" [];
	"numpy.tests.test_warnings" -> "ast" [];
	"numpy.tests.test_warnings" -> "tokenize" [];
	"numpy.tests.test_warnings" -> "pathlib" [];
	"numpy.tests.test_warnings" -> "numpy" [];
	"numpy.tests.test_scripts" -> "os" [];
	"numpy.tests.test_scripts" -> "subprocess" [];
	"numpy.tests.test_scripts" -> "sys" [];
	"numpy.tests.test_scripts" -> "os.path" [];
	"numpy.tests.test_scripts" -> "numpy" [];
	"numpy.tests.test_reloading" -> "pickle" [];
	"numpy.tests.test_reloading" -> "subprocess" [];
	"numpy.tests.test_reloading" -> "sys" [];
	"numpy.tests.test_reloading" -> "textwrap" [];
	"numpy.tests.test_reloading" -> "importlib" [];
	"numpy.tests.test_reloading" -> "numpy" [];
	"numpy.tests.test_public_api" -> "functools" [];
	"numpy.tests.test_public_api" -> "importlib" [];
	"numpy.tests.test_public_api" -> "inspect" [];
	"numpy.tests.test_public_api" -> "pkgutil" [];
	"numpy.tests.test_public_api" -> "subprocess" [];
	"numpy.tests.test_public_api" -> "sys" [];
	"numpy.tests.test_public_api" -> "sysconfig" [];
	"numpy.tests.test_public_api" -> "types" [];
	"numpy.tests.test_public_api" -> "warnings" [];
	"numpy.tests.test_public_api" -> "numpy" [];
	"numpy.tests.test_public_api" -> "ctypes" [];
	"numpy.tests.test_public_api" -> "typing" [];
	"numpy.tests.test_numpy_version" -> "re" [];
	"numpy.tests.test_numpy_version" -> "numpy" [];
	"numpy.tests.test_numpy_config" -> "numpy" [];
	"numpy.tests.test_matlib" -> "numpy" [];
	"numpy.tests.test_lazyloading" -> "sys" [];
	"numpy.tests.test_ctypeslib" -> "sys" [];
	"numpy.tests.test_ctypeslib" -> "sysconfig" [];
	"numpy.tests.test_ctypeslib" -> "weakref" [];
	"numpy.tests.test_ctypeslib" -> "pathlib" [];
	"numpy.tests.test_ctypeslib" -> "numpy" [];
	"numpy.tests.test_ctypeslib" -> "ctypes" [];
	"numpy.tests.test_configtool" -> "importlib" [];
	"numpy.tests.test_configtool" -> "os" [];
	"numpy.tests.test_configtool" -> "pathlib" [];
	"numpy.tests.test_configtool" -> "subprocess" [];
	"numpy.tests.test_configtool" -> "numpy" [];
	"numpy.tests.test__all__" -> "collections" [];
	"numpy.tests.test__all__" -> "numpy" [];
	"numpy.testing.tests.test_utils" -> "itertools" [];
	"numpy.testing.tests.test_utils" -> "os" [];
	"numpy.testing.tests.test_utils" -> "re" [];
	"numpy.testing.tests.test_utils" -> "sys" [];
	"numpy.testing.tests.test_utils" -> "warnings" [];
	"numpy.testing.tests.test_utils" -> "weakref" [];
	"numpy.testing.tests.test_utils" -> "numpy" [];
	"numpy.testing.tests.test_utils" -> "datetime" [];
	"numpy.testing.print_coercion_tables" -> "collections" [];
	"numpy.testing.print_coercion_tables" -> "numpy" [];
	"numpy.random.tests.test_smoke" -> "pickle" [];
	"numpy.random.tests.test_smoke" -> "functools" [];
	"numpy.random.tests.test_smoke" -> "numpy" [];
	"numpy.random.tests.test_seed_sequence" -> "numpy" [];
	"numpy.random.tests.test_regression" -> "sys" [];
	"numpy.random.tests.test_regression" -> "numpy" [];
	"numpy.random.tests.test_regression" -> "gc" [];
	"numpy.random.tests.test_randomstate_regression" -> "sys" [];
	"numpy.random.tests.test_randomstate_regression" -> "numpy" [];
	"numpy.random.tests.test_randomstate_regression" -> "gc" [];
	"numpy.random.tests.test_randomstate" -> "hashlib" [];
	"numpy.random.tests.test_randomstate" -> "pickle" [];
	"numpy.random.tests.test_randomstate" -> "sys" [];
	"numpy.random.tests.test_randomstate" -> "warnings" [];
	"numpy.random.tests.test_randomstate" -> "numpy" [];
	"numpy.random.tests.test_randomstate" -> "threading" [];
	"numpy.random.tests.test_random" -> "sys" [];
	"numpy.random.tests.test_random" -> "warnings" [];
	"numpy.random.tests.test_random" -> "numpy" [];
	"numpy.random.tests.test_random" -> "hashlib" [];
	"numpy.random.tests.test_random" -> "threading" [];
	"numpy.random.tests.test_generator_mt19937_regressions" -> "numpy" [];
	"numpy.random.tests.test_generator_mt19937_regressions" -> "gc" [];
	"numpy.random.tests.test_generator_mt19937" -> "hashlib" [];
	"numpy.random.tests.test_generator_mt19937" -> "os.path" [];
	"numpy.random.tests.test_generator_mt19937" -> "sys" [];
	"numpy.random.tests.test_generator_mt19937" -> "numpy" [];
	"numpy.random.tests.test_generator_mt19937" -> "threading" [];
	"numpy.random.tests.test_generator_mt19937" -> "pickle" [];
	"numpy.random.tests.test_generator_mt19937" -> "gzip" [];
	"numpy.random.tests.test_extending" -> "os" [];
	"numpy.random.tests.test_extending" -> "shutil" [];
	"numpy.random.tests.test_extending" -> "subprocess" [];
	"numpy.random.tests.test_extending" -> "sys" [];
	"numpy.random.tests.test_extending" -> "sysconfig" [];
	"numpy.random.tests.test_extending" -> "warnings" [];
	"numpy.random.tests.test_extending" -> "numpy" [];
	"numpy.random.tests.test_extending" -> "cffi" [];
	"numpy.random.tests.test_extending" -> "numba" [];
	"numpy.random.tests.test_extending" -> "cython" [];
	"numpy.random.tests.test_extending" -> "Cython" [];
	"numpy.random.tests.test_extending" -> "glob" [];
	"numpy.random._examples.cffi.extending" -> "os" [];
	"numpy.random._examples.cffi.extending" -> "cffi" [];
	"numpy.random._examples.cffi.extending" -> "numpy" [];
	"numpy.random._examples.cffi.parse" -> "os" [];
	"numpy.random._examples.numba.extending" -> "timeit" [];
	"numpy.random._examples.numba.extending" -> "numba" [];
	"numpy.random._examples.numba.extending" -> "numpy" [];
	"timeit" -> "gc" [];
	"timeit" -> "itertools" [];
	"timeit" -> "sys" [];
	"timeit" -> "time" [];
	"timeit" -> "linecache" [];
	"timeit" -> "traceback" [];
	"timeit" -> "getopt" [];
	"timeit" -> "os" [];
	"timeit" -> "warnings" [];
	"numpy.random.tests.test_direct" -> "os" [];
	"numpy.random.tests.test_direct" -> "sys" [];
	"numpy.random.tests.test_direct" -> "os.path" [];
	"numpy.random.tests.test_direct" -> "numpy" [];
	"numpy.random.tests.test_direct" -> "cffi" [];
	"numpy.random.tests.test_direct" -> "ctypes" [];
	"numpy.random.tests.test_direct" -> "pickle" [];
	"numpy.random.tests.test_direct" -> "gzip" [];
	"numpy.polynomial.tests.test_printing" -> "decimal" [];
	"numpy.polynomial.tests.test_printing" -> "fractions" [];
	"numpy.polynomial.tests.test_printing" -> "math" [];
	"numpy.polynomial.tests.test_polyutils" -> "numpy" [];
	"numpy.polynomial.tests.test_polynomial" -> "pickle" [];
	"numpy.polynomial.tests.test_polynomial" -> "copy" [];
	"numpy.polynomial.tests.test_polynomial" -> "fractions" [];
	"numpy.polynomial.tests.test_polynomial" -> "functools" [];
	"numpy.polynomial.tests.test_polynomial" -> "numpy" [];
	"numpy.polynomial.tests.test_legendre" -> "functools" [];
	"numpy.polynomial.tests.test_legendre" -> "numpy" [];
	"numpy.polynomial.tests.test_laguerre" -> "functools" [];
	"numpy.polynomial.tests.test_laguerre" -> "numpy" [];
	"numpy.polynomial.tests.test_hermite_e" -> "functools" [];
	"numpy.polynomial.tests.test_hermite_e" -> "numpy" [];
	"numpy.polynomial.tests.test_hermite" -> "functools" [];
	"numpy.polynomial.tests.test_hermite" -> "numpy" [];
	"numpy.polynomial.tests.test_classes" -> "operator" [];
	"numpy.polynomial.tests.test_classes" -> "numbers" [];
	"numpy.polynomial.tests.test_classes" -> "numpy" [];
	"numpy.polynomial.tests.test_chebyshev" -> "functools" [];
	"numpy.polynomial.tests.test_chebyshev" -> "numpy" [];
	"numpy.matrixlib.tests.test_regression" -> "numpy" [];
	"numpy.matrixlib.tests.test_numeric" -> "numpy" [];
	"numpy.matrixlib.tests.test_multiarray" -> "numpy" [];
	"numpy.matrixlib.tests.test_matrix_linalg" -> "numpy" [];
	"numpy.matrixlib.tests.test_masked_matrix" -> "pickle" [];
	"numpy.matrixlib.tests.test_masked_matrix" -> "numpy" [];
	"numpy.ma.testutils" -> "operator" [];
	"numpy.ma.testutils" -> "numpy" [];
	"numpy.ma.testutils" -> "unittest" [];
	"numpy.matrixlib.tests.test_interaction" -> "textwrap" [];
	"numpy.matrixlib.tests.test_interaction" -> "warnings" [];
	"numpy.matrixlib.tests.test_interaction" -> "numpy" [];
	"numpy.matrixlib.tests.test_defmatrix" -> "numpy" [];
	"numpy.ma.tests.test_subclassing" -> "numpy" [];
	"numpy.ma.tests.test_regression" -> "numpy" [];
	"numpy.ma.tests.test_old_ma" -> "pickle" [];
	"numpy.ma.tests.test_old_ma" -> "functools" [];
	"numpy.ma.tests.test_old_ma" -> "numpy" [];
	"numpy.ma.tests.test_mrecords" -> "pickle" [];
	"numpy.ma.tests.test_mrecords" -> "numpy" [];
	"numpy.ma.tests.test_extras" -> "itertools" [];
	"numpy.ma.tests.test_extras" -> "warnings" [];
	"numpy.ma.tests.test_extras" -> "numpy" [];
	"numpy.ma.tests.test_deprecations" -> "io" [];
	"numpy.ma.tests.test_deprecations" -> "textwrap" [];
	"numpy.ma.tests.test_deprecations" -> "numpy" [];
	"numpy.ma.tests.test_core" -> "copy" [];
	"numpy.ma.tests.test_core" -> "itertools" [];
	"numpy.ma.tests.test_core" -> "operator" [];
	"numpy.ma.tests.test_core" -> "pickle" [];
	"numpy.ma.tests.test_core" -> "sys" [];
	"numpy.ma.tests.test_core" -> "textwrap" [];
	"numpy.ma.tests.test_core" -> "warnings" [];
	"numpy.ma.tests.test_core" -> "functools" [];
	"numpy.ma.tests.test_core" -> "numpy" [];
	"numpy.ma.tests.test_core" -> "datetime" [];
	"numpy.ma.tests.test_core" -> "io" [];
	"numpy.ma.tests.test_arrayobject" -> "numpy" [];
	"numpy.linalg.tests.test_regression" -> "numpy" [];
	"numpy.linalg.tests.test_linalg" -> "itertools" [];
	"numpy.linalg.tests.test_linalg" -> "os" [];
	"numpy.linalg.tests.test_linalg" -> "subprocess" [];
	"numpy.linalg.tests.test_linalg" -> "sys" [];
	"numpy.linalg.tests.test_linalg" -> "textwrap" [];
	"numpy.linalg.tests.test_linalg" -> "threading" [];
	"numpy.linalg.tests.test_linalg" -> "traceback" [];
	"numpy.linalg.tests.test_linalg" -> "numpy" [];
	"numpy.linalg.tests.test_linalg" -> "resource" [];
	"numpy.linalg.tests.test_deprecations" -> "numpy" [];
	"numpy.linalg.lapack_lite" -> "typing" [];
	"numpy.linalg.lapack_lite" -> "numpy" [];
	"numpy.lib.tests.test_utils" -> "io" [];
	"numpy.lib.tests.test_utils" -> "numpy" [];
	"numpy.lib.tests.test_ufunclike" -> "numpy" [];
	"numpy.lib.tests.test_type_check" -> "numpy" [];
	"numpy.lib.tests.test_twodim_base" -> "numpy" [];
	"numpy.lib.tests.test_stride_tricks" -> "numpy" [];
	"numpy.lib.tests.test_shape_base" -> "functools" [];
	"numpy.lib.tests.test_shape_base" -> "sys" [];
	"numpy.lib.tests.test_shape_base" -> "numpy" [];
	"numpy.lib.tests.test_regression" -> "os" [];
	"numpy.lib.tests.test_regression" -> "numpy" [];
	"numpy.lib.tests.test_regression" -> "io" [];
	"numpy.lib.tests.test_recfunctions" -> "numpy" [];
	"numpy.lib.tests.test_recfunctions" -> "datetime" [];
	"numpy.lib.tests.test_polynomial" -> "numpy" [];
	"numpy.lib.tests.test_polynomial" -> "decimal" [];
	"numpy.lib.tests.test_packbits" -> "itertools" [];
	"numpy.lib.tests.test_packbits" -> "numpy" [];
	"numpy.lib.tests.test_nanfunctions" -> "inspect" [];
	"numpy.lib.tests.test_nanfunctions" -> "warnings" [];
	"numpy.lib.tests.test_nanfunctions" -> "functools" [];
	"numpy.lib.tests.test_nanfunctions" -> "numpy" [];
	"numpy.lib.tests.test_mixins" -> "numbers" [];
	"numpy.lib.tests.test_mixins" -> "operator" [];
	"numpy.lib.tests.test_mixins" -> "numpy" [];
	"numpy.lib.tests.test_loadtxt" -> "os" [];
	"numpy.lib.tests.test_loadtxt" -> "sys" [];
	"numpy.lib.tests.test_loadtxt" -> "io" [];
	"numpy.lib.tests.test_loadtxt" -> "tempfile" [];
	"numpy.lib.tests.test_loadtxt" -> "numpy" [];
	"numpy.lib.tests.test_io" -> "gc" [];
	"numpy.lib.tests.test_io" -> "gzip" [];
	"numpy.lib.tests.test_io" -> "locale" [];
	"numpy.lib.tests.test_io" -> "os" [];
	"numpy.lib.tests.test_io" -> "re" [];
	"numpy.lib.tests.test_io" -> "sys" [];
	"numpy.lib.tests.test_io" -> "threading" [];
	"numpy.lib.tests.test_io" -> "time" [];
	"numpy.lib.tests.test_io" -> "warnings" [];
	"numpy.lib.tests.test_io" -> "zipfile" [];
	"numpy.lib.tests.test_io" -> "ctypes" [];
	"numpy.lib.tests.test_io" -> "datetime" [];
	"numpy.lib.tests.test_io" -> "io" [];
	"numpy.lib.tests.test_io" -> "multiprocessing" [];
	"numpy.lib.tests.test_io" -> "pathlib" [];
	"numpy.lib.tests.test_io" -> "tempfile" [];
	"numpy.lib.tests.test_io" -> "numpy" [];
	"numpy.lib.tests.test_io" -> "bz2" [];
	"numpy.lib.tests.test_io" -> "lzma" [];
	"numpy.lib.tests.test_index_tricks" -> "numpy" [];
	"numpy.lib.tests.test_histograms" -> "numpy" [];
	"numpy.lib.tests.test_histograms" -> "decimal" [];
	"numpy.lib.tests.test_function_base" -> "decimal" [];
	"numpy.lib.tests.test_function_base" -> "math" [];
	"numpy.lib.tests.test_function_base" -> "operator" [];
	"numpy.lib.tests.test_function_base" -> "sys" [];
	"numpy.lib.tests.test_function_base" -> "warnings" [];
	"numpy.lib.tests.test_function_base" -> "fractions" [];
	"numpy.lib.tests.test_function_base" -> "functools" [];
	"numpy.lib.tests.test_function_base" -> "hypothesis" [];
	"numpy.lib.tests.test_function_base" -> "'hypothesis.strategies'" [];
	"numpy.lib.tests.test_function_base" -> "'hypothesis.extra'" [];
	"numpy.lib.tests.test_function_base" -> "numpy" [];
	"numpy.lib.tests.test_function_base" -> "random" [];
	"numpy.lib.tests.test_function_base" -> "gc" [];
	"numpy.lib.tests.test_format" -> "os" [];
	"numpy.lib.tests.test_format" -> "sys" [];
	"numpy.lib.tests.test_format" -> "warnings" [];
	"numpy.lib.tests.test_format" -> "io" [];
	"numpy.lib.tests.test_format" -> "numpy" [];
	"numpy.lib.tests.test_format" -> "random" [];
	"numpy.lib.tests.test_format" -> "subprocess" [];
	"numpy.lib.tests.test_arrayterator" -> "functools" [];
	"numpy.lib.tests.test_arrayterator" -> "operator" [];
	"numpy.lib.tests.test_arrayterator" -> "numpy" [];
	"numpy.lib.tests.test_arraysetops" -> "numpy" [];
	"numpy.lib.tests.test_arraypad" -> "numpy" [];
	"numpy.lib.tests.test_arraypad" -> "fractions" [];
	"numpy.lib.tests.test_array_utils" -> "numpy" [];
	"numpy.lib.tests.test__iotools" -> "time" [];
	"numpy.lib.tests.test__iotools" -> "datetime" [];
	"numpy.lib.tests.test__iotools" -> "numpy" [];
	"numpy.lib.tests.test__datasource" -> "os" [];
	"numpy.lib.tests.test__datasource" -> "shutil" [];
	"numpy.lib.tests.test__datasource" -> "tempfile" [];
	"numpy.lib.tests.test__datasource" -> "gzip" [];
	"numpy.lib.tests.test__datasource" -> "bz2" [];
	"numpy.fft.tests.test_pocketfft" -> "queue" [];
	"numpy.fft.tests.test_pocketfft" -> "threading" [];
	"numpy.fft.tests.test_pocketfft" -> "numpy" [];
	"numpy.fft.tests.test_helper" -> "numpy" [];
	"numpy.f2py._src_pyf" -> "os" [];
	"numpy.f2py._src_pyf" -> "re" [];
	"numpy.core._multiarray_umath" -> "numpy" [];
	"numpy.core._multiarray_umath" -> "sys" [];
	"numpy.core._multiarray_umath" -> "textwrap" [];
	"numpy.core._multiarray_umath" -> "traceback" [];
	"numpy.core._internal" -> "numpy" [];
	"numpy.conftest" -> "os" [];
	"numpy.conftest" -> "string" [];
	"numpy.conftest" -> "sys" [];
	"numpy.conftest" -> "tempfile" [];
	"numpy.conftest" -> "warnings" [];
	"numpy.conftest" -> "contextlib" [];
	"numpy.conftest" -> "hypothesis" [];
	"numpy.conftest" -> "scipy_doctest" [];
	"numpy.conftest" -> "doctest" [];
	"numpy._core.tests._natype" -> "numbers" [];
	"numpy._core.tests._natype" -> "numpy" [];
	"numpy._utils._pep440" -> "collections" [];
	"numpy._utils._pep440" -> "itertools" [];
	"numpy._utils._pep440" -> "re" [];
	"numpy._typing._extended_precision" -> "numpy" [];
	"PyInstaller.utils.hooks" -> "__future__" [];
	"PyInstaller.utils.hooks" -> "copy" [];
	"PyInstaller.utils.hooks" -> "os" [];
	"PyInstaller.utils.hooks" -> "textwrap" [];
	"PyInstaller.utils.hooks" -> "fnmatch" [];
	"PyInstaller.utils.hooks" -> "pathlib" [];
	"PyInstaller.utils.hooks" -> "collections" [];
	"PyInstaller.utils.hooks" -> "typing" [];
	"PyInstaller.utils.hooks" -> "PyInstaller" [];
	"PyInstaller.utils.hooks" -> "sys" [];
	"PyInstaller.utils.hooks" -> "importlib" [];
	"PyInstaller.utils.hooks" -> "subprocess" [];
	"PyInstaller.utils.hooks" -> "pkgutil" [];
	"PyInstaller.utils.hooks" -> "traceback" [];
	"PyInstaller.utils.hooks.conda" -> "__future__" [];
	"PyInstaller.utils.hooks.conda" -> "fnmatch" [];
	"PyInstaller.utils.hooks.conda" -> "json" [];
	"PyInstaller.utils.hooks.conda" -> "pathlib" [];
	"PyInstaller.utils.hooks.conda" -> "sys" [];
	"PyInstaller.utils.hooks.conda" -> "typing" [];
	"PyInstaller.utils.hooks.conda" -> "PyInstaller" [];
	"PyInstaller.utils.hooks.conda" -> "collections" [];
	"PyInstaller.utils.misc" -> "glob" [];
	"PyInstaller.utils.misc" -> "os" [];
	"PyInstaller.utils.misc" -> "pprint" [];
	"PyInstaller.utils.misc" -> "codecs" [];
	"PyInstaller.utils.misc" -> "re" [];
	"PyInstaller.utils.misc" -> "tokenize" [];
	"PyInstaller.utils.misc" -> "io" [];
	"PyInstaller.utils.misc" -> "pathlib" [];
	"PyInstaller.utils.misc" -> "PyInstaller" [];
	"PyInstaller.utils.win32.versioninfo" -> "struct" [];
	"PyInstaller.utils.win32.versioninfo" -> "pefile" [];
	"pefile" -> "collections" [];
	"pefile" -> "os" [];
	"pefile" -> "struct" [];
	"pefile" -> "codecs" [];
	"pefile" -> "time" [];
	"pefile" -> "math" [];
	"pefile" -> "string" [];
	"pefile" -> "mmap" [];
	"pefile" -> "uuid" [];
	"pefile" -> "typing" [];
	"pefile" -> "hashlib" [];
	"pefile" -> "functools" [];
	"pefile" -> "copy" [];
	"pefile" -> "ordlookup" [];
	"pefile" -> "sys" [];
	"PyInstaller.isolated._parent" -> "os" [];
	"PyInstaller.isolated._parent" -> "pathlib" [];
	"PyInstaller.isolated._parent" -> "marshal" [];
	"PyInstaller.isolated._parent" -> "base64" [];
	"PyInstaller.isolated._parent" -> "functools" [];
	"PyInstaller.isolated._parent" -> "subprocess" [];
	"PyInstaller.isolated._parent" -> "sys" [];
	"PyInstaller.isolated._parent" -> "PyInstaller" [];
	"PyInstaller.isolated._parent" -> "msvcrt" [];
	"PyInstaller.isolated._parent" -> "ctypes" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "ast" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "os" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "pkgutil" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "sys" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "re" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "collections" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "warnings" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "importlib_metadata" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "altgraph" [];
	"PyInstaller.lib.modulegraph.util" -> "dis" [];
	"PyInstaller.lib.modulegraph.util" -> "inspect" [];
	"altgraph" -> "pkg_resources" [];
	"pkg_resources" -> "__future__" [];
	"pkg_resources" -> "sys" [];
	"pkg_resources" -> "_imp" [];
	"pkg_resources" -> "collections" [];
	"pkg_resources" -> "errno" [];
	"pkg_resources" -> "functools" [];
	"pkg_resources" -> "importlib" [];
	"pkg_resources" -> "inspect" [];
	"pkg_resources" -> "io" [];
	"pkg_resources" -> "ntpath" [];
	"pkg_resources" -> "operator" [];
	"pkg_resources" -> "os" [];
	"pkg_resources" -> "pkgutil" [];
	"pkg_resources" -> "platform" [];
	"pkg_resources" -> "plistlib" [];
	"pkg_resources" -> "posixpath" [];
	"pkg_resources" -> "re" [];
	"pkg_resources" -> "stat" [];
	"pkg_resources" -> "tempfile" [];
	"pkg_resources" -> "textwrap" [];
	"pkg_resources" -> "time" [];
	"pkg_resources" -> "types" [];
	"pkg_resources" -> "warnings" [];
	"pkg_resources" -> "zipfile" [];
	"pkg_resources" -> "zipimport" [];
	"pkg_resources" -> "typing" [];
	"pkg_resources" -> "os.path" [];
	"pkg_resources" -> "platformdirs" [];
	"pkg_resources" -> "_typeshed" [];
	"pkg_resources" -> "'_typeshed.importlib'" [];
	"pkg_resources" -> "typing_extensions" [];
	"pkg_resources" -> "sysconfig" [];
	"pkg_resources" -> "linecache" [];
	"pkg_resources" -> "packaging" [];
	"packaging.metadata" -> "__future__" [];
	"packaging.metadata" -> "pathlib" [];
	"packaging.metadata" -> "sys" [];
	"packaging.metadata" -> "typing" [];
	"packaging.licenses._spdx" -> "__future__" [];
	"packaging.licenses._spdx" -> "typing" [];
	"packaging.licenses" -> "__future__" [];
	"packaging.licenses" -> "re" [];
	"packaging.licenses" -> "typing" [];
	"packaging._tokenizer" -> "__future__" [];
	"packaging._tokenizer" -> "contextlib" [];
	"packaging._tokenizer" -> "re" [];
	"packaging._tokenizer" -> "dataclasses" [];
	"packaging._tokenizer" -> "typing" [];
	"packaging._parser" -> "__future__" [];
	"packaging._parser" -> "ast" [];
	"packaging._parser" -> "typing" [];
	"packaging.specifiers" -> "__future__" [];
	"packaging.specifiers" -> "abc" [];
	"packaging.specifiers" -> "itertools" [];
	"packaging.specifiers" -> "re" [];
	"packaging.specifiers" -> "typing" [];
	"packaging.markers" -> "__future__" [];
	"packaging.markers" -> "operator" [];
	"packaging.markers" -> "os" [];
	"packaging.markers" -> "platform" [];
	"packaging.markers" -> "sys" [];
	"packaging.markers" -> "typing" [];
	"plistlib" -> "binascii" [];
	"plistlib" -> "codecs" [];
	"plistlib" -> "datetime" [];
	"plistlib" -> "enum" [];
	"plistlib" -> "io" [];
	"plistlib" -> "itertools" [];
	"plistlib" -> "os" [];
	"plistlib" -> "re" [];
	"plistlib" -> "struct" [];
	"altgraph.GraphUtil" -> "random" [];
	"altgraph.GraphUtil" -> "collections" [];
	"altgraph.Graph" -> "collections" [];
	"PyInstaller.building.utils" -> "fnmatch" [];
	"PyInstaller.building.utils" -> "glob" [];
	"PyInstaller.building.utils" -> "hashlib" [];
	"PyInstaller.building.utils" -> "io" [];
	"PyInstaller.building.utils" -> "marshal" [];
	"PyInstaller.building.utils" -> "os" [];
	"PyInstaller.building.utils" -> "pathlib" [];
	"PyInstaller.building.utils" -> "platform" [];
	"PyInstaller.building.utils" -> "shutil" [];
	"PyInstaller.building.utils" -> "struct" [];
	"PyInstaller.building.utils" -> "subprocess" [];
	"PyInstaller.building.utils" -> "sys" [];
	"PyInstaller.building.utils" -> "types" [];
	"PyInstaller.building.utils" -> "zipfile" [];
	"PyInstaller.building.utils" -> "PyInstaller" [];
	"PyInstaller.utils.osx" -> "math" [];
	"PyInstaller.utils.osx" -> "os" [];
	"PyInstaller.utils.osx" -> "pathlib" [];
	"PyInstaller.utils.osx" -> "subprocess" [];
	"PyInstaller.utils.osx" -> "shutil" [];
	"PyInstaller.utils.osx" -> "tempfile" [];
	"PyInstaller.utils.osx" -> "macholib" [];
	"PyInstaller.utils.osx" -> "'macholib.MachO'" [];
	"PyInstaller.utils.osx" -> "'macholib.util'" [];
	"PyInstaller.utils.osx" -> "PyInstaller" [];
	"PyInstaller.utils.osx" -> "'macholib.mach_o'" [];
	"PyInstaller.utils.osx" -> "hashlib" [];
	"PyInstaller.log" -> "os" [];
	"PyInstaller.log" -> "logging" [];
	"PyInstaller" -> "os" [];
	"packaging.requirements" -> "__future__" [];
	"packaging.requirements" -> "typing" [];
	"PyInstaller.compat" -> "__future__" [];
	"PyInstaller.compat" -> "errno" [];
	"PyInstaller.compat" -> "os" [];
	"PyInstaller.compat" -> "platform" [];
	"PyInstaller.compat" -> "site" [];
	"PyInstaller.compat" -> "subprocess" [];
	"PyInstaller.compat" -> "sys" [];
	"PyInstaller.compat" -> "sysconfig" [];
	"PyInstaller.compat" -> "shutil" [];
	"PyInstaller.compat" -> "types" [];
	"PyInstaller.compat" -> "importlib_metadata" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "shutil" [];
	"ctypes.util" -> "subprocess" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "struct" [];
	"ctypes._aix" -> "re" [];
	"ctypes._aix" -> "os" [];
	"ctypes._aix" -> "sys" [];
	"ctypes._aix" -> "subprocess" [];
	"ctypes.macholib.dyld" -> "os" [];
	"ctypes.macholib.dyld" -> "itertools" [];
	"ctypes.macholib.dyld" -> "_ctypes" [];
	"ctypes.macholib.dylib" -> "re" [];
	"ctypes.macholib.framework" -> "re" [];
	"win32ctypes.core" -> "sys" [];
	"win32ctypes.core" -> "importlib" [];
	"win32ctypes.core" -> "cffi" [];
	"win32ctypes.core.ctypes._util" -> "ctypes" [];
	"win32ctypes.core.ctypes._system_information" -> "ctypes" [];
	"win32ctypes.core.ctypes._resource" -> "ctypes" [];
	"win32ctypes.core.ctypes._common" -> "ctypes" [];
	"win32ctypes.core.ctypes._common" -> "sys" [];
	"win32ctypes.core.ctypes._authentication" -> "ctypes" [];
	"win32ctypes.core.ctypes" -> "logging" [];
	"win32ctypes.pywin32.pywintypes" -> "contextlib" [];
	"win32ctypes.pywin32.pywintypes" -> "collections" [];
	"win32ctypes.pywin32.pywintypes" -> "time" [];
	"win32ctypes.pywin32.pywintypes" -> "datetime" [];
	"win32ctypes.pywin32.win32cred" -> "ctypes" [];
	"PyInstaller._shared_with_waf" -> "platform" [];
	"PyInstaller._shared_with_waf" -> "re" [];
	"site" -> "sys" [];
	"site" -> "os" [];
	"site" -> "builtins" [];
	"site" -> "_sitebuiltins" [];
	"site" -> "io" [];
	"site" -> "stat" [];
	"site" -> "traceback" [];
	"site" -> "atexit" [];
	"site" -> "readline" [];
	"site" -> "rlcompleter" [];
	"site" -> "sitecustomize" [];
	"site" -> "usercustomize" [];
	"site" -> "textwrap" [];
	"rlcompleter" -> "atexit" [];
	"rlcompleter" -> "builtins" [];
	"rlcompleter" -> "inspect" [];
	"rlcompleter" -> "keyword" [];
	"rlcompleter" -> "re" [];
	"rlcompleter" -> "readline" [];
	"_sitebuiltins" -> "sys" [];
	"_sitebuiltins" -> "os" [];
	"_sitebuiltins" -> "pydoc" [];
	"setuptools._vendor.platformdirs" -> "__future__" [];
	"setuptools._vendor.platformdirs" -> "os" [];
	"setuptools._vendor.platformdirs" -> "sys" [];
	"setuptools._vendor.platformdirs" -> "typing" [];
	"setuptools._vendor.platformdirs" -> "pathlib" [];
	"setuptools._vendor.platformdirs" -> "platformdirs.windows" [];
	"setuptools._vendor.platformdirs" -> "platformdirs.macos" [];
	"setuptools._vendor.platformdirs" -> "platformdirs.unix" [];
	"setuptools._vendor.platformdirs" -> "platformdirs.android" [];
	"platformdirs.android" -> "platformdirs" [];
	"platformdirs.unix" -> "platformdirs" [];
	"platformdirs.macos" -> "platformdirs" [];
	"platformdirs.windows" -> "platformdirs" [];
	"setuptools" -> "__future__" [];
	"setuptools" -> "functools" [];
	"setuptools" -> "os" [];
	"setuptools" -> "sys" [];
	"setuptools" -> "abc" [];
	"setuptools" -> "typing" [];
	"setuptools.msvc" -> "__future__" [];
	"setuptools.msvc" -> "contextlib" [];
	"setuptools.msvc" -> "itertools" [];
	"setuptools.msvc" -> "json" [];
	"setuptools.msvc" -> "os" [];
	"setuptools.msvc" -> "os.path" [];
	"setuptools.msvc" -> "platform" [];
	"setuptools.msvc" -> "typing" [];
	"setuptools.msvc" -> "more_itertools" [];
	"setuptools.msvc" -> "typing_extensions" [];
	"setuptools.msvc" -> "winreg" [];
	"setuptools._distutils.command.build_ext" -> "__future__" [];
	"setuptools._distutils.command.build_ext" -> "contextlib" [];
	"setuptools._distutils.command.build_ext" -> "os" [];
	"setuptools._distutils.command.build_ext" -> "re" [];
	"setuptools._distutils.command.build_ext" -> "sys" [];
	"setuptools._distutils.command.build_ext" -> "site" [];
	"setuptools._distutils.command.build_ext" -> "typing" [];
	"setuptools._distutils.command.build_ext" -> "distutils" [];
	"setuptools._distutils._msvccompiler" -> "warnings" [];
	"setuptools.warnings" -> "__future__" [];
	"setuptools.warnings" -> "os" [];
	"setuptools.warnings" -> "warnings" [];
	"setuptools.warnings" -> "datetime" [];
	"setuptools.warnings" -> "inspect" [];
	"setuptools.warnings" -> "textwrap" [];
	"setuptools.warnings" -> "typing" [];
	"setuptools.warnings" -> "typing_extensions" [];
	"setuptools.warnings" -> "typing_extensions.TypeAlias" [];
	"setuptools._importlib" -> "sys" [];
	"setuptools._importlib" -> "importlib_metadata" [];
	"setuptools.extension" -> "__future__" [];
	"setuptools.extension" -> "functools" [];
	"setuptools.extension" -> "re" [];
	"setuptools.extension" -> "typing" [];
	"setuptools._path" -> "__future__" [];
	"setuptools._path" -> "contextlib" [];
	"setuptools._path" -> "os" [];
	"setuptools._path" -> "sys" [];
	"setuptools._path" -> "typing" [];
	"setuptools._path" -> "more_itertools" [];
	"setuptools._path" -> "typing_extensions" [];
	"setuptools._path" -> "typing_extensions.TypeAlias" [];
	"setuptools.dist" -> "__future__" [];
	"setuptools.dist" -> "functools" [];
	"setuptools.dist" -> "io" [];
	"setuptools.dist" -> "itertools" [];
	"setuptools.dist" -> "numbers" [];
	"setuptools.dist" -> "os" [];
	"setuptools.dist" -> "re" [];
	"setuptools.dist" -> "sys" [];
	"setuptools.dist" -> "glob" [];
	"setuptools.dist" -> "pathlib" [];
	"setuptools.dist" -> "typing" [];
	"setuptools.dist" -> "more_itertools" [];
	"setuptools.dist" -> "typing_extensions" [];
	"setuptools.dist" -> "typing_extensions.TypeAlias" [];
	"setuptools.dist" -> "configparser" [];
	"setuptools.dist" -> "shlex" [];
	"setuptools.command.bdist_wheel" -> "__future__" [];
	"setuptools.command.bdist_wheel" -> "os" [];
	"setuptools.command.bdist_wheel" -> "re" [];
	"setuptools.command.bdist_wheel" -> "shutil" [];
	"setuptools.command.bdist_wheel" -> "struct" [];
	"setuptools.command.bdist_wheel" -> "sys" [];
	"setuptools.command.bdist_wheel" -> "sysconfig" [];
	"setuptools.command.bdist_wheel" -> "warnings" [];
	"setuptools.command.bdist_wheel" -> "glob" [];
	"setuptools.command.bdist_wheel" -> "typing" [];
	"setuptools.command.bdist_wheel" -> "zipfile" [];
	"setuptools.command.bdist_wheel" -> "packaging" [];
	"setuptools.command.bdist_wheel" -> "setuptools" [];
	"setuptools.command.bdist_wheel" -> "distutils" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "__future__" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "ctypes" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "os" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "sys" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "io" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "typing" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "wheel" [];
	"setuptools.command.egg_info" -> "functools" [];
	"setuptools.command.egg_info" -> "os" [];
	"setuptools.command.egg_info" -> "re" [];
	"setuptools.command.egg_info" -> "sys" [];
	"setuptools.command.egg_info" -> "time" [];
	"setuptools.command.egg_info" -> "packaging" [];
	"setuptools.command.egg_info" -> "setuptools" [];
	"setuptools.command.egg_info" -> "distutils" [];
	"setuptools._distutils.filelist" -> "__future__" [];
	"setuptools._distutils.filelist" -> "fnmatch" [];
	"setuptools._distutils.filelist" -> "functools" [];
	"setuptools._distutils.filelist" -> "os" [];
	"setuptools._distutils.filelist" -> "re" [];
	"setuptools._distutils.filelist" -> "typing" [];
	"setuptools._distutils.filelist" -> "distutils" [];
	"setuptools.command._requirestxt" -> "__future__" [];
	"setuptools.command._requirestxt" -> "io" [];
	"setuptools.command._requirestxt" -> "collections" [];
	"setuptools.command._requirestxt" -> "itertools" [];
	"setuptools.command._requirestxt" -> "typing" [];
	"setuptools.command._requirestxt" -> "setuptools" [];
	"setuptools.glob" -> "__future__" [];
	"setuptools.glob" -> "fnmatch" [];
	"setuptools.glob" -> "os" [];
	"setuptools.glob" -> "re" [];
	"setuptools.glob" -> "typing" [];
	"setuptools.glob" -> "_typeshed" [];
	"setuptools.command.setopt" -> "configparser" [];
	"setuptools.command.setopt" -> "os" [];
	"setuptools.command.setopt" -> "setuptools" [];
	"setuptools.command.setopt" -> "distutils" [];
	"setuptools.command.sdist" -> "__future__" [];
	"setuptools.command.sdist" -> "contextlib" [];
	"setuptools.command.sdist" -> "os" [];
	"setuptools.command.sdist" -> "re" [];
	"setuptools.command.sdist" -> "itertools" [];
	"setuptools.command.sdist" -> "typing" [];
	"setuptools.command.sdist" -> "distutils" [];
	"setuptools._distutils.command.sdist" -> "__future__" [];
	"setuptools._distutils.command.sdist" -> "os" [];
	"setuptools._distutils.command.sdist" -> "sys" [];
	"setuptools._distutils.command.sdist" -> "distutils" [];
	"setuptools._distutils.command.sdist" -> "glob" [];
	"setuptools._distutils.command.sdist" -> "itertools" [];
	"setuptools._distutils.command.sdist" -> "typing" [];
	"setuptools.command.build" -> "__future__" [];
	"setuptools.command.build" -> "typing" [];
	"setuptools._distutils.command.build" -> "__future__" [];
	"setuptools._distutils.command.build" -> "os" [];
	"setuptools._distutils.command.build" -> "sys" [];
	"setuptools._distutils.command.build" -> "sysconfig" [];
	"setuptools._distutils.command.build" -> "typing" [];
	"setuptools.command.bdist_egg" -> "__future__" [];
	"setuptools.command.bdist_egg" -> "marshal" [];
	"setuptools.command.bdist_egg" -> "os" [];
	"setuptools.command.bdist_egg" -> "re" [];
	"setuptools.command.bdist_egg" -> "sys" [];
	"setuptools.command.bdist_egg" -> "textwrap" [];
	"setuptools.command.bdist_egg" -> "sysconfig" [];
	"setuptools.command.bdist_egg" -> "types" [];
	"setuptools.command.bdist_egg" -> "typing" [];
	"setuptools.command.bdist_egg" -> "setuptools" [];
	"setuptools.command.bdist_egg" -> "distutils" [];
	"setuptools.command.bdist_egg" -> "typing_extensions" [];
	"setuptools.command.bdist_egg" -> "typing_extensions.TypeAlias" [];
	"setuptools.command.bdist_egg" -> "zipfile" [];
	"setuptools.unicode_utils" -> "sys" [];
	"setuptools.unicode_utils" -> "unicodedata" [];
	"setuptools.unicode_utils" -> "configparser" [];
	"setuptools.compat.py39" -> "sys" [];
	"setuptools.compat.py311" -> "__future__" [];
	"setuptools.compat.py311" -> "shutil" [];
	"setuptools.compat.py311" -> "sys" [];
	"setuptools.compat.py311" -> "typing" [];
	"setuptools.compat.py311" -> "_typeshed" [];
	"setuptools.compat.py311" -> "typing_extensions" [];
	"setuptools.compat.py311" -> "typing_extensions.TypeAlias" [];
	"setuptools._vendor.wheel.wheelfile" -> "__future__" [];
	"setuptools._vendor.wheel.wheelfile" -> "csv" [];
	"setuptools._vendor.wheel.wheelfile" -> "hashlib" [];
	"setuptools._vendor.wheel.wheelfile" -> "os.path" [];
	"setuptools._vendor.wheel.wheelfile" -> "re" [];
	"setuptools._vendor.wheel.wheelfile" -> "stat" [];
	"setuptools._vendor.wheel.wheelfile" -> "time" [];
	"setuptools._vendor.wheel.wheelfile" -> "io" [];
	"setuptools._vendor.wheel.wheelfile" -> "typing" [];
	"setuptools._vendor.wheel.wheelfile" -> "zipfile" [];
	"setuptools._vendor.wheel.wheelfile" -> "wheel" [];
	"setuptools._vendor.wheel.wheelfile" -> "typing_extensions" [];
	"setuptools._vendor.wheel.wheelfile" -> "typing_extensions.Buffer" [];
	"setuptools._vendor.wheel.util" -> "__future__" [];
	"setuptools._vendor.wheel.util" -> "base64" [];
	"setuptools._vendor.wheel.util" -> "logging" [];
	"setuptools._vendor.wheel.util" -> "wheel" [];
	"setuptools._vendor.wheel.cli" -> "__future__" [];
	"setuptools._vendor.wheel.cli" -> "argparse" [];
	"setuptools._vendor.wheel.cli" -> "os" [];
	"setuptools._vendor.wheel.cli" -> "sys" [];
	"setuptools._vendor.wheel.cli" -> "wheel" [];
	"setuptools._vendor.wheel.cli.tags" -> "__future__" [];
	"setuptools._vendor.wheel.cli.tags" -> "itertools" [];
	"setuptools._vendor.wheel.cli.tags" -> "os" [];
	"setuptools._vendor.wheel.cli.convert" -> "__future__" [];
	"setuptools._vendor.wheel.cli.convert" -> "os.path" [];
	"setuptools._vendor.wheel.cli.convert" -> "re" [];
	"setuptools._vendor.wheel.cli.convert" -> "abc" [];
	"setuptools._vendor.wheel.cli.convert" -> "collections" [];
	"setuptools._vendor.wheel.cli.convert" -> "glob" [];
	"setuptools._vendor.wheel.cli.convert" -> "pathlib" [];
	"setuptools._vendor.wheel.cli.convert" -> "textwrap" [];
	"setuptools._vendor.wheel.cli.convert" -> "zipfile" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "logging" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "platform" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "struct" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "subprocess" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "functools" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "subprocess" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "sysconfig" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "enum" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "struct" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "collections" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "contextlib" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "functools" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "warnings" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "ctypes" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "_manylinux" [];
	"setuptools._vendor.wheel.metadata" -> "__future__" [];
	"setuptools._vendor.wheel.metadata" -> "functools" [];
	"setuptools._vendor.wheel.metadata" -> "itertools" [];
	"setuptools._vendor.wheel.metadata" -> "os.path" [];
	"setuptools._vendor.wheel.metadata" -> "re" [];
	"setuptools._vendor.wheel.metadata" -> "textwrap" [];
	"setuptools._vendor.wheel.metadata" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.requirements" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.utils" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.utils" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "itertools" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "operator" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "platform" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "contextlib" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "dataclasses" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._parser" -> "ast" [];
	"setuptools._vendor.wheel.vendored.packaging._parser" -> "typing" [];
	"setuptools._vendor.wheel.cli.pack" -> "__future__" [];
	"setuptools._vendor.wheel.cli.pack" -> "os.path" [];
	"setuptools._vendor.wheel.cli.pack" -> "re" [];
	"setuptools._vendor.wheel.cli.unpack" -> "__future__" [];
	"setuptools._vendor.wheel.cli.unpack" -> "pathlib" [];
	"setuptools.installer" -> "__future__" [];
	"setuptools.installer" -> "glob" [];
	"setuptools.installer" -> "itertools" [];
	"setuptools.installer" -> "os" [];
	"setuptools.installer" -> "subprocess" [];
	"setuptools.installer" -> "sys" [];
	"setuptools.installer" -> "tempfile" [];
	"setuptools.installer" -> "distutils" [];
	"setuptools.wheel" -> "contextlib" [];
	"setuptools.wheel" -> "email" [];
	"setuptools.wheel" -> "functools" [];
	"setuptools.wheel" -> "itertools" [];
	"setuptools.wheel" -> "os" [];
	"setuptools.wheel" -> "posixpath" [];
	"setuptools.wheel" -> "re" [];
	"setuptools.wheel" -> "zipfile" [];
	"setuptools.wheel" -> "distutils" [];
	"setuptools._discovery" -> "functools" [];
	"setuptools._discovery" -> "operator" [];
	"setuptools.archive_util" -> "contextlib" [];
	"setuptools.archive_util" -> "os" [];
	"setuptools.archive_util" -> "posixpath" [];
	"setuptools.archive_util" -> "shutil" [];
	"setuptools.archive_util" -> "tarfile" [];
	"setuptools.archive_util" -> "zipfile" [];
	"setuptools._distutils.log" -> "logging" [];
	"setuptools._distutils.log" -> "warnings" [];
	"setuptools._distutils.log" -> "distutils" [];
	"setuptools.errors" -> "__future__" [];
	"setuptools.errors" -> "distutils" [];
	"setuptools.config.setupcfg" -> "__future__" [];
	"setuptools.config.setupcfg" -> "contextlib" [];
	"setuptools.config.setupcfg" -> "functools" [];
	"setuptools.config.setupcfg" -> "os" [];
	"setuptools.config.setupcfg" -> "collections" [];
	"setuptools.config.setupcfg" -> "typing" [];
	"setuptools.config.setupcfg" -> "setuptools" [];
	"setuptools.config.setupcfg" -> "typing_extensions" [];
	"setuptools.config.setupcfg" -> "typing_extensions.TypeAlias" [];
	"setuptools.config.expand" -> "__future__" [];
	"setuptools.config.expand" -> "ast" [];
	"setuptools.config.expand" -> "importlib" [];
	"setuptools.config.expand" -> "os" [];
	"setuptools.config.expand" -> "pathlib" [];
	"setuptools.config.expand" -> "sys" [];
	"setuptools.config.expand" -> "configparser" [];
	"setuptools.config.expand" -> "glob" [];
	"setuptools.config.expand" -> "itertools" [];
	"setuptools.config.expand" -> "types" [];
	"setuptools.config.expand" -> "typing" [];
	"setuptools.config.expand" -> "setuptools" [];
	"setuptools.config.expand" -> "typing_extensions" [];
	"setuptools.config.expand" -> "typing_extensions.Self" [];
	"setuptools.config.expand" -> "more_itertools" [];
	"setuptools.config.pyprojecttoml" -> "__future__" [];
	"setuptools.config.pyprojecttoml" -> "logging" [];
	"setuptools.config.pyprojecttoml" -> "os" [];
	"setuptools.config.pyprojecttoml" -> "contextlib" [];
	"setuptools.config.pyprojecttoml" -> "functools" [];
	"setuptools.config.pyprojecttoml" -> "types" [];
	"setuptools.config.pyprojecttoml" -> "typing" [];
	"setuptools.config.pyprojecttoml" -> "typing_extensions" [];
	"setuptools.config.pyprojecttoml" -> "typing_extensions.Self" [];
	"setuptools.config.pyprojecttoml" -> "more_itertools" [];
	"setuptools.config._validate_pyproject" -> "functools" [];
	"setuptools.config._validate_pyproject" -> "typing" [];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" -> "decimal" [];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" -> "re" [];
	"setuptools.config._validate_pyproject.fastjsonschema_exceptions" -> "re" [];
	"setuptools.config._validate_pyproject.extra_validations" -> "inspect" [];
	"setuptools.config._validate_pyproject.extra_validations" -> "typing" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "io" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "json" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "logging" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "os" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "re" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "typing" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "contextlib" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "textwrap" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "sys" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "typing_extensions" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "typing_extensions.Self" [];
	"setuptools.config._validate_pyproject.formats" -> "builtins" [];
	"setuptools.config._validate_pyproject.formats" -> "logging" [];
	"setuptools.config._validate_pyproject.formats" -> "os" [];
	"setuptools.config._validate_pyproject.formats" -> "re" [];
	"setuptools.config._validate_pyproject.formats" -> "string" [];
	"setuptools.config._validate_pyproject.formats" -> "typing" [];
	"setuptools.config._validate_pyproject.formats" -> "itertools" [];
	"setuptools.config._validate_pyproject.formats" -> "typing_extensions" [];
	"setuptools.config._validate_pyproject.formats" -> "typing_extensions.Literal" [];
	"setuptools.config._validate_pyproject.formats" -> "packaging" [];
	"setuptools.config._validate_pyproject.formats" -> "ssl" [];
	"setuptools.config._validate_pyproject.formats" -> "trove_classifiers" [];
	"setuptools._vendor.packaging.requirements" -> "__future__" [];
	"setuptools._vendor.packaging.requirements" -> "typing" [];
	"setuptools._vendor.packaging.utils" -> "__future__" [];
	"setuptools._vendor.packaging.utils" -> "functools" [];
	"setuptools._vendor.packaging.utils" -> "re" [];
	"setuptools._vendor.packaging.utils" -> "typing" [];
	"setuptools._vendor.packaging.version" -> "__future__" [];
	"setuptools._vendor.packaging.version" -> "itertools" [];
	"setuptools._vendor.packaging.version" -> "re" [];
	"setuptools._vendor.packaging.version" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "__future__" [];
	"setuptools._vendor.packaging.tags" -> "logging" [];
	"setuptools._vendor.packaging.tags" -> "platform" [];
	"setuptools._vendor.packaging.tags" -> "re" [];
	"setuptools._vendor.packaging.tags" -> "struct" [];
	"setuptools._vendor.packaging.tags" -> "subprocess" [];
	"setuptools._vendor.packaging.tags" -> "sys" [];
	"setuptools._vendor.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.packaging.tags" -> "typing" [];
	"setuptools._vendor.packaging._musllinux" -> "__future__" [];
	"setuptools._vendor.packaging._musllinux" -> "functools" [];
	"setuptools._vendor.packaging._musllinux" -> "re" [];
	"setuptools._vendor.packaging._musllinux" -> "subprocess" [];
	"setuptools._vendor.packaging._musllinux" -> "sys" [];
	"setuptools._vendor.packaging._musllinux" -> "typing" [];
	"setuptools._vendor.packaging._musllinux" -> "sysconfig" [];
	"setuptools._vendor.packaging._elffile" -> "__future__" [];
	"setuptools._vendor.packaging._elffile" -> "enum" [];
	"setuptools._vendor.packaging._elffile" -> "os" [];
	"setuptools._vendor.packaging._elffile" -> "struct" [];
	"setuptools._vendor.packaging._elffile" -> "typing" [];
	"setuptools._vendor.packaging._manylinux" -> "__future__" [];
	"setuptools._vendor.packaging._manylinux" -> "collections" [];
	"setuptools._vendor.packaging._manylinux" -> "contextlib" [];
	"setuptools._vendor.packaging._manylinux" -> "functools" [];
	"setuptools._vendor.packaging._manylinux" -> "os" [];
	"setuptools._vendor.packaging._manylinux" -> "re" [];
	"setuptools._vendor.packaging._manylinux" -> "sys" [];
	"setuptools._vendor.packaging._manylinux" -> "warnings" [];
	"setuptools._vendor.packaging._manylinux" -> "typing" [];
	"setuptools._vendor.packaging._manylinux" -> "ctypes" [];
	"setuptools._vendor.packaging._manylinux" -> "_manylinux" [];
	"setuptools._vendor.packaging.specifiers" -> "__future__" [];
	"setuptools._vendor.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.packaging.specifiers" -> "re" [];
	"setuptools._vendor.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.packaging.markers" -> "__future__" [];
	"setuptools._vendor.packaging.markers" -> "operator" [];
	"setuptools._vendor.packaging.markers" -> "os" [];
	"setuptools._vendor.packaging.markers" -> "platform" [];
	"setuptools._vendor.packaging.markers" -> "sys" [];
	"setuptools._vendor.packaging.markers" -> "typing" [];
	"setuptools._vendor.packaging._tokenizer" -> "__future__" [];
	"setuptools._vendor.packaging._tokenizer" -> "contextlib" [];
	"setuptools._vendor.packaging._tokenizer" -> "re" [];
	"setuptools._vendor.packaging._tokenizer" -> "dataclasses" [];
	"setuptools._vendor.packaging._tokenizer" -> "typing" [];
	"setuptools._vendor.packaging._parser" -> "__future__" [];
	"setuptools._vendor.packaging._parser" -> "ast" [];
	"setuptools._vendor.packaging._parser" -> "typing" [];
	"setuptools.compat.py310" -> "sys" [];
	"setuptools.compat.py310" -> "tomllib" [];
	"setuptools.compat.py310" -> "tomli" [];
	"tomllib._parser" -> "__future__" [];
	"tomllib._parser" -> "string" [];
	"tomllib._parser" -> "types" [];
	"tomllib._parser" -> "typing" [];
	"tomllib._types" -> "typing" [];
	"tomllib._re" -> "__future__" [];
	"tomllib._re" -> "datetime" [];
	"tomllib._re" -> "functools" [];
	"tomllib._re" -> "re" [];
	"tomllib._re" -> "typing" [];
	"setuptools.config._apply_pyprojecttoml" -> "__future__" [];
	"setuptools.config._apply_pyprojecttoml" -> "logging" [];
	"setuptools.config._apply_pyprojecttoml" -> "os" [];
	"setuptools.config._apply_pyprojecttoml" -> "functools" [];
	"setuptools.config._apply_pyprojecttoml" -> "inspect" [];
	"setuptools.config._apply_pyprojecttoml" -> "itertools" [];
	"setuptools.config._apply_pyprojecttoml" -> "types" [];
	"setuptools.config._apply_pyprojecttoml" -> "typing" [];
	"setuptools.config._apply_pyprojecttoml" -> "setuptools" [];
	"setuptools.config._apply_pyprojecttoml" -> "typing_extensions" [];
	"setuptools.config._apply_pyprojecttoml" -> "typing_extensions.TypeAlias" [];
	"setuptools.config" -> "functools" [];
	"setuptools.config" -> "typing" [];
	"setuptools._static" -> "functools" [];
	"setuptools._static" -> "typing" [];
	"setuptools._shutil" -> "os" [];
	"setuptools._shutil" -> "stat" [];
	"setuptools._shutil" -> "typing" [];
	"setuptools._shutil" -> "distutils" [];
	"setuptools.windows_support" -> "platform" [];
	"setuptools.windows_support" -> "ctypes" [];
	"setuptools.command" -> "sys" [];
	"setuptools._distutils.command.bdist" -> "__future__" [];
	"setuptools._distutils.command.bdist" -> "os" [];
	"setuptools._distutils.command.bdist" -> "warnings" [];
	"setuptools._distutils.command.bdist" -> "typing" [];
	"setuptools._distutils.command.bdist" -> "typing_extensions" [];
	"setuptools._distutils.command.bdist" -> "typing_extensions.deprecated" [];
	"setuptools._entry_points" -> "functools" [];
	"setuptools._entry_points" -> "itertools" [];
	"setuptools._entry_points" -> "operator" [];
	"setuptools._entry_points" -> "more_itertools" [];
	"setuptools._itertools" -> "more_itertools" [];
	"setuptools.discovery" -> "__future__" [];
	"setuptools.discovery" -> "itertools" [];
	"setuptools.discovery" -> "os" [];
	"setuptools.discovery" -> "fnmatch" [];
	"setuptools.discovery" -> "glob" [];
	"setuptools.discovery" -> "pathlib" [];
	"setuptools.discovery" -> "typing" [];
	"setuptools.discovery" -> "distutils" [];
	"setuptools.discovery" -> "inspect" [];
	"setuptools.depends" -> "__future__" [];
	"setuptools.depends" -> "contextlib" [];
	"setuptools.depends" -> "dis" [];
	"setuptools.depends" -> "marshal" [];
	"setuptools.depends" -> "sys" [];
	"setuptools.depends" -> "types" [];
	"setuptools.depends" -> "typing" [];
	"setuptools._imp" -> "os" [];
	"setuptools._imp" -> "tokenize" [];
	"setuptools.logging" -> "inspect" [];
	"setuptools.logging" -> "logging" [];
	"setuptools.logging" -> "sys" [];
	"setuptools.monkey" -> "__future__" [];
	"setuptools.monkey" -> "inspect" [];
	"setuptools.monkey" -> "platform" [];
	"setuptools.monkey" -> "sys" [];
	"setuptools.monkey" -> "types" [];
	"setuptools.monkey" -> "typing" [];
	"setuptools._core_metadata" -> "__future__" [];
	"setuptools._core_metadata" -> "os" [];
	"setuptools._core_metadata" -> "stat" [];
	"setuptools._core_metadata" -> "textwrap" [];
	"setuptools._core_metadata" -> "email" [];
	"setuptools._core_metadata" -> "tempfile" [];
	"setuptools._reqs" -> "__future__" [];
	"setuptools._reqs" -> "functools" [];
	"setuptools._reqs" -> "typing" [];
	"setuptools._reqs" -> "typing_extensions" [];
	"setuptools._reqs" -> "typing_extensions.TypeAlias" [];
	"setuptools._normalization" -> "re" [];
	"setuptools._normalization" -> "typing" [];
	"setuptools._normalization" -> "packaging" [];
	"_distutils_hack" -> "os" [];
	"_distutils_hack" -> "sys" [];
	"_distutils_hack" -> "warnings" [];
	"_distutils_hack" -> "importlib" [];
	"_distutils_hack" -> "traceback" [];
	"setuptools._vendor.platformdirs.version" -> "typing" [];
	"setuptools._vendor.platformdirs.api" -> "__future__" [];
	"setuptools._vendor.platformdirs.api" -> "os" [];
	"setuptools._vendor.platformdirs.api" -> "abc" [];
	"setuptools._vendor.platformdirs.api" -> "pathlib" [];
	"setuptools._vendor.platformdirs.api" -> "typing" [];
	"setuptools._vendor.platformdirs.android" -> "__future__" [];
	"setuptools._vendor.platformdirs.android" -> "os" [];
	"setuptools._vendor.platformdirs.android" -> "re" [];
	"setuptools._vendor.platformdirs.android" -> "sys" [];
	"setuptools._vendor.platformdirs.android" -> "functools" [];
	"setuptools._vendor.platformdirs.android" -> "typing" [];
	"setuptools._vendor.platformdirs.android" -> "android" [];
	"setuptools._vendor.platformdirs.android" -> "jnius" [];
	"setuptools._vendor.platformdirs.unix" -> "__future__" [];
	"setuptools._vendor.platformdirs.unix" -> "os" [];
	"setuptools._vendor.platformdirs.unix" -> "sys" [];
	"setuptools._vendor.platformdirs.unix" -> "configparser" [];
	"setuptools._vendor.platformdirs.unix" -> "pathlib" [];
	"setuptools._vendor.platformdirs.unix" -> "typing" [];
	"setuptools._vendor.platformdirs.macos" -> "__future__" [];
	"setuptools._vendor.platformdirs.macos" -> "os.path" [];
	"setuptools._vendor.platformdirs.macos" -> "sys" [];
	"setuptools._vendor.platformdirs.windows" -> "__future__" [];
	"setuptools._vendor.platformdirs.windows" -> "os" [];
	"setuptools._vendor.platformdirs.windows" -> "sys" [];
	"setuptools._vendor.platformdirs.windows" -> "functools" [];
	"setuptools._vendor.platformdirs.windows" -> "typing" [];
	"setuptools._vendor.platformdirs.windows" -> "winreg" [];
	"setuptools._vendor.platformdirs.windows" -> "ctypes" [];
	"numpy._core.cversions" -> "os.path" [];
	"numpy._core.cversions" -> "code_generators" [];
	"numpy._core.cversions" -> "'code_generators.numpy_api'" [];
	"numpy._core._simd" -> "types" [];
	"numpy._core._simd" -> "typing" [];
	"numpy._configtool" -> "argparse" [];
	"numpy._configtool" -> "sys" [];
	"numpy._configtool" -> "pathlib" [];
	"pandas.util._doctools" -> "__future__" [];
	"pandas.util._doctools" -> "typing" [];
	"pandas.util._doctools" -> "numpy" [];
	"pandas.util._doctools" -> "pandas" [];
	"pandas.util._doctools" -> "matplotlib" [];
	"pandas.util._doctools" -> "'matplotlib.pyplot'" [];
	"pandas.tests.window.test_win_type" -> "numpy" [];
	"pandas.tests.window.test_win_type" -> "pytest" [];
	"pandas.tests.window.test_win_type" -> "pandas" [];
	"pandas.tests.window.test_timeseries_window" -> "numpy" [];
	"pandas.tests.window.test_timeseries_window" -> "pytest" [];
	"pandas.tests.window.test_timeseries_window" -> "pandas" [];
	"pandas.util._test_decorators" -> "__future__" [];
	"pandas.util._test_decorators" -> "locale" [];
	"pandas.util._test_decorators" -> "typing" [];
	"pandas.util._test_decorators" -> "pytest" [];
	"pandas.tests.window.test_rolling_skew_kurt" -> "functools" [];
	"pandas.tests.window.test_rolling_skew_kurt" -> "numpy" [];
	"pandas.tests.window.test_rolling_skew_kurt" -> "pytest" [];
	"pandas.tests.window.test_rolling_skew_kurt" -> "pandas" [];
	"pandas.tests.window.test_rolling_quantile" -> "functools" [];
	"pandas.tests.window.test_rolling_quantile" -> "numpy" [];
	"pandas.tests.window.test_rolling_quantile" -> "pytest" [];
	"pandas.tests.window.test_rolling_quantile" -> "pandas" [];
	"pandas.tests.window.test_rolling_functions" -> "datetime" [];
	"pandas.tests.window.test_rolling_functions" -> "numpy" [];
	"pandas.tests.window.test_rolling_functions" -> "pytest" [];
	"pandas.tests.window.test_rolling_functions" -> "pandas" [];
	"pandas.tests.window.test_rolling" -> "datetime" [];
	"pandas.tests.window.test_rolling" -> "numpy" [];
	"pandas.tests.window.test_rolling" -> "pytest" [];
	"pandas.tests.window.test_rolling" -> "pandas" [];
	"pandas.tests.window.test_pairwise" -> "numpy" [];
	"pandas.tests.window.test_pairwise" -> "pytest" [];
	"pandas.tests.window.test_pairwise" -> "pandas" [];
	"pandas.tests.window.test_online" -> "numpy" [];
	"pandas.tests.window.test_online" -> "pytest" [];
	"pandas.tests.window.test_online" -> "pandas" [];
	"pandas.tests.window.test_numba" -> "numpy" [];
	"pandas.tests.window.test_numba" -> "pytest" [];
	"pandas.tests.window.test_numba" -> "pandas" [];
	"pandas.tests.window.test_numba" -> "numba" [];
	"pandas.tests.window.test_groupby" -> "numpy" [];
	"pandas.tests.window.test_groupby" -> "pytest" [];
	"pandas.tests.window.test_groupby" -> "pandas" [];
	"pandas.tests.window.test_expanding" -> "numpy" [];
	"pandas.tests.window.test_expanding" -> "pytest" [];
	"pandas.tests.window.test_expanding" -> "pandas" [];
	"pandas.tests.window.test_ewm" -> "numpy" [];
	"pandas.tests.window.test_ewm" -> "pytest" [];
	"pandas.tests.window.test_ewm" -> "pandas" [];
	"pandas.tests.window.test_dtypes" -> "numpy" [];
	"pandas.tests.window.test_dtypes" -> "pytest" [];
	"pandas.tests.window.test_dtypes" -> "pandas" [];
	"pandas.tests.window.test_cython_aggregations" -> "functools" [];
	"pandas.tests.window.test_cython_aggregations" -> "sys" [];
	"pandas.tests.window.test_cython_aggregations" -> "numpy" [];
	"pandas.tests.window.test_cython_aggregations" -> "pytest" [];
	"pandas.tests.window.test_cython_aggregations" -> "pandas" [];
	"pandas.tests.window.test_base_indexer" -> "numpy" [];
	"pandas.tests.window.test_base_indexer" -> "pytest" [];
	"pandas.tests.window.test_base_indexer" -> "pandas" [];
	"pandas.tests.window.test_apply" -> "numpy" [];
	"pandas.tests.window.test_apply" -> "pytest" [];
	"pandas.tests.window.test_apply" -> "pandas" [];
	"pandas.tests.window.test_api" -> "numpy" [];
	"pandas.tests.window.test_api" -> "pytest" [];
	"pandas.tests.window.test_api" -> "pandas" [];
	"pandas.tests.window.moments.test_moments_consistency_rolling" -> "numpy" [];
	"pandas.tests.window.moments.test_moments_consistency_rolling" -> "pytest" [];
	"pandas.tests.window.moments.test_moments_consistency_rolling" -> "pandas" [];
	"pandas.tests.window.moments.test_moments_consistency_expanding" -> "numpy" [];
	"pandas.tests.window.moments.test_moments_consistency_expanding" -> "pytest" [];
	"pandas.tests.window.moments.test_moments_consistency_expanding" -> "pandas" [];
	"pandas.tests.window.moments.test_moments_consistency_ewm" -> "numpy" [];
	"pandas.tests.window.moments.test_moments_consistency_ewm" -> "pytest" [];
	"pandas.tests.window.moments.test_moments_consistency_ewm" -> "pandas" [];
	"pandas.tests.window.moments.conftest" -> "itertools" [];
	"pandas.tests.window.moments.conftest" -> "numpy" [];
	"pandas.tests.window.moments.conftest" -> "pytest" [];
	"pandas.tests.window.moments.conftest" -> "pandas" [];
	"pandas.tests.window.conftest" -> "datetime" [];
	"pandas.tests.window.conftest" -> "numpy" [];
	"pandas.tests.window.conftest" -> "pytest" [];
	"pandas.tests.window.conftest" -> "pandas" [];
	"pandas.tests.util.test_validate_kwargs" -> "pytest" [];
	"pandas.tests.util.test_validate_inclusive" -> "numpy" [];
	"pandas.tests.util.test_validate_inclusive" -> "pytest" [];
	"pandas.tests.util.test_validate_inclusive" -> "pandas" [];
	"pandas.tests.util.test_validate_args_and_kwargs" -> "pytest" [];
	"pandas.tests.util.test_validate_args" -> "pytest" [];
	"pandas.tests.util.test_util" -> "os" [];
	"pandas.tests.util.test_util" -> "pytest" [];
	"pandas.tests.util.test_util" -> "pandas" [];
	"pandas.tests.util.test_util" -> "numpy" [];
	"pandas.tests.util.test_show_versions" -> "json" [];
	"pandas.tests.util.test_show_versions" -> "os" [];
	"pandas.tests.util.test_show_versions" -> "re" [];
	"pandas.tests.util.test_show_versions" -> "pandas" [];
	"pandas.tests.util.test_shares_memory" -> "numpy" [];
	"pandas.tests.util.test_shares_memory" -> "pandas" [];
	"pandas.tests.util.test_shares_memory" -> "pyarrow" [];
	"pandas.tests.util.test_rewrite_warning" -> "warnings" [];
	"pandas.tests.util.test_rewrite_warning" -> "pytest" [];
	"pandas.tests.util.test_numba" -> "pytest" [];
	"pandas.tests.util.test_numba" -> "pandas" [];
	"pandas.tests.util.test_hashing" -> "numpy" [];
	"pandas.tests.util.test_hashing" -> "pytest" [];
	"pandas.tests.util.test_hashing" -> "pandas" [];
	"pandas.tests.util.test_doc" -> "textwrap" [];
	"pandas.tests.util.test_deprecate_nonkeyword_arguments" -> "inspect" [];
	"pandas.tests.util.test_deprecate_kwarg" -> "pytest" [];
	"pandas.tests.util.test_deprecate" -> "textwrap" [];
	"pandas.tests.util.test_deprecate" -> "pytest" [];
	"pandas.tests.util.test_assert_series_equal" -> "numpy" [];
	"pandas.tests.util.test_assert_series_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_series_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_produces_warning" -> "warnings" [];
	"pandas.tests.util.test_assert_produces_warning" -> "pytest" [];
	"pandas.tests.util.test_assert_numpy_array_equal" -> "copy" [];
	"pandas.tests.util.test_assert_numpy_array_equal" -> "numpy" [];
	"pandas.tests.util.test_assert_numpy_array_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_numpy_array_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_interval_array_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_interval_array_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_index_equal" -> "numpy" [];
	"pandas.tests.util.test_assert_index_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_index_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_frame_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_frame_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_extension_array_equal" -> "numpy" [];
	"pandas.tests.util.test_assert_extension_array_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_extension_array_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_categorical_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_categorical_equal" -> "pandas" [];
	"pandas.tests.util.test_assert_attr_equal" -> "types" [];
	"pandas.tests.util.test_assert_attr_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_almost_equal" -> "numpy" [];
	"pandas.tests.util.test_assert_almost_equal" -> "pytest" [];
	"pandas.tests.util.test_assert_almost_equal" -> "pandas" [];
	"pandas.tests.util.conftest" -> "pytest" [];
	"pandas.tests.tslibs.test_tzconversion" -> "numpy" [];
	"pandas.tests.tslibs.test_tzconversion" -> "pytest" [];
	"pandas.tests.tslibs.test_tzconversion" -> "pytz" [];
	"pandas.tests.tslibs.test_to_offset" -> "re" [];
	"pandas.tests.tslibs.test_to_offset" -> "pytest" [];
	"pandas.tests.tslibs.test_timezones" -> "datetime" [];
	"pandas.tests.tslibs.test_timezones" -> "pytest" [];
	"pandas.tests.tslibs.test_timezones" -> "pytz" [];
	"pandas.tests.tslibs.test_timezones" -> "pandas" [];
	"pandas.tests.tslibs.test_timedeltas" -> "re" [];
	"pandas.tests.tslibs.test_timedeltas" -> "numpy" [];
	"pandas.tests.tslibs.test_timedeltas" -> "pytest" [];
	"pandas.tests.tslibs.test_timedeltas" -> "pandas" [];
	"pandas.tests.tslibs.test_strptime" -> "datetime" [];
	"pandas.tests.tslibs.test_strptime" -> "numpy" [];
	"pandas.tests.tslibs.test_strptime" -> "pytest" [];
	"pandas.tests.tslibs.test_strptime" -> "pandas" [];
	"pandas.tests.tslibs.test_resolution" -> "numpy" [];
	"pandas.tests.tslibs.test_resolution" -> "pytest" [];
	"pandas.tests.tslibs.test_resolution" -> "pytz" [];
	"pandas.tests.tslibs.test_period" -> "numpy" [];
	"pandas.tests.tslibs.test_period" -> "pytest" [];
	"pandas.tests.tslibs.test_parsing" -> "datetime" [];
	"pandas.tests.tslibs.test_parsing" -> "re" [];
	"pandas.tests.tslibs.test_parsing" -> "hypothesis" [];
	"pandas.tests.tslibs.test_parsing" -> "numpy" [];
	"pandas.tests.tslibs.test_parsing" -> "pytest" [];
	"pandas.tests.tslibs.test_parse_iso8601" -> "datetime" [];
	"pandas.tests.tslibs.test_parse_iso8601" -> "pytest" [];
	"pandas.tests.tslibs.test_parse_iso8601" -> "pandas" [];
	"pandas.tests.tslibs.test_npy_units" -> "numpy" [];
	"pandas.tests.tslibs.test_np_datetime" -> "numpy" [];
	"pandas.tests.tslibs.test_np_datetime" -> "pytest" [];
	"pandas.tests.tslibs.test_liboffsets" -> "datetime" [];
	"pandas.tests.tslibs.test_liboffsets" -> "pytest" [];
	"pandas.tests.tslibs.test_liboffsets" -> "pandas" [];
	"pandas.tests.tslibs.test_libfrequencies" -> "pytest" [];
	"pandas.tests.tslibs.test_fields" -> "numpy" [];
	"pandas.tests.tslibs.test_fields" -> "pytest" [];
	"pandas.tests.tslibs.test_conversion" -> "datetime" [];
	"pandas.tests.tslibs.test_conversion" -> "numpy" [];
	"pandas.tests.tslibs.test_conversion" -> "pytest" [];
	"pandas.tests.tslibs.test_conversion" -> "pytz" [];
	"pandas.tests.tslibs.test_conversion" -> "pandas" [];
	"pandas.tests.tslibs.test_ccalendar" -> "datetime" [];
	"pandas.tests.tslibs.test_ccalendar" -> "hypothesis" [];
	"pandas.tests.tslibs.test_ccalendar" -> "numpy" [];
	"pandas.tests.tslibs.test_ccalendar" -> "pytest" [];
	"pandas.tests.tslibs.test_array_to_datetime" -> "datetime" [];
	"pandas.tests.tslibs.test_array_to_datetime" -> "numpy" [];
	"pandas.tests.tslibs.test_array_to_datetime" -> "pytest" [];
	"pandas.tests.tslibs.test_array_to_datetime" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_year" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_year" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_year" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_year" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_year" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_week" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_week" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_week" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_ticks" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_ticks" -> "hypothesis" [];
	"pandas.tests.tseries.offsets.test_ticks" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_ticks" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_ticks" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_quarter" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_quarter" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_quarter" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_offsets_properties" -> "hypothesis" [];
	"pandas.tests.tseries.offsets.test_offsets_properties" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_offsets_properties" -> "pytz" [];
	"pandas.tests.tseries.offsets.test_offsets_properties" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_offsets" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_offsets" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_offsets" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_offsets" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_offsets" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_month" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_month" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_month" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_month" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_index" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_index" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_fiscal" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_fiscal" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_fiscal" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_easter" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_easter" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_easter" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_dst" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_dst" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_dst" -> "pytz" [];
	"pandas.tests.tseries.offsets.test_dst" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_custom_business_month" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_custom_business_month" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_custom_business_month" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_custom_business_month" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_custom_business_hour" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_custom_business_hour" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_custom_business_hour" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_custom_business_hour" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_custom_business_day" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_custom_business_day" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_custom_business_day" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_custom_business_day" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_common" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_common" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_year" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_business_year" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_business_year" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_quarter" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_business_quarter" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_business_quarter" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_month" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_business_month" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_business_month" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_month" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_business_hour" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_business_hour" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_business_hour" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_hour" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_business_day" -> "__future__" [];
	"pandas.tests.tseries.offsets.test_business_day" -> "datetime" [];
	"pandas.tests.tseries.offsets.test_business_day" -> "numpy" [];
	"pandas.tests.tseries.offsets.test_business_day" -> "pytest" [];
	"pandas.tests.tseries.offsets.test_business_day" -> "pandas" [];
	"pandas.tests.tseries.offsets.common" -> "__future__" [];
	"pandas.tests.tseries.holiday.test_observance" -> "datetime" [];
	"pandas.tests.tseries.holiday.test_observance" -> "pytest" [];
	"pandas.tests.tseries.holiday.test_holiday" -> "datetime" [];
	"pandas.tests.tseries.holiday.test_holiday" -> "pytest" [];
	"pandas.tests.tseries.holiday.test_holiday" -> "pytz" [];
	"pandas.tests.tseries.holiday.test_holiday" -> "pandas" [];
	"pandas.tests.tseries.holiday.test_federal" -> "datetime" [];
	"pandas.tests.tseries.holiday.test_federal" -> "pandas" [];
	"pandas.tests.tseries.holiday.test_calendar" -> "datetime" [];
	"pandas.tests.tseries.holiday.test_calendar" -> "pytest" [];
	"pandas.tests.tseries.holiday.test_calendar" -> "pandas" [];
	"pandas.tests.tseries.frequencies.test_inference" -> "datetime" [];
	"pandas.tests.tseries.frequencies.test_inference" -> "numpy" [];
	"pandas.tests.tseries.frequencies.test_inference" -> "pytest" [];
	"pandas.tests.tseries.frequencies.test_inference" -> "pandas" [];
	"pandas.tests.tseries.frequencies.test_frequencies" -> "pytest" [];
	"pandas.tests.tseries.frequencies.test_freq_code" -> "numpy" [];
	"pandas.tests.tseries.frequencies.test_freq_code" -> "pytest" [];
	"pandas.tests.tools.test_to_timedelta" -> "datetime" [];
	"pandas.tests.tools.test_to_timedelta" -> "numpy" [];
	"pandas.tests.tools.test_to_timedelta" -> "pytest" [];
	"pandas.tests.tools.test_to_timedelta" -> "pandas" [];
	"pandas.tests.tools.test_to_time" -> "datetime" [];
	"pandas.tests.tools.test_to_time" -> "locale" [];
	"pandas.tests.tools.test_to_time" -> "numpy" [];
	"pandas.tests.tools.test_to_time" -> "pytest" [];
	"pandas.tests.tools.test_to_time" -> "pandas" [];
	"pandas.tests.tools.test_to_numeric" -> "decimal" [];
	"pandas.tests.tools.test_to_numeric" -> "numpy" [];
	"pandas.tests.tools.test_to_numeric" -> "pytest" [];
	"pandas.tests.tools.test_to_numeric" -> "pandas" [];
	"pandas.tests.tools.test_to_datetime" -> "calendar" [];
	"pandas.tests.tools.test_to_datetime" -> "collections" [];
	"pandas.tests.tools.test_to_datetime" -> "datetime" [];
	"pandas.tests.tools.test_to_datetime" -> "decimal" [];
	"pandas.tests.tools.test_to_datetime" -> "locale" [];
	"pandas.tests.tools.test_to_datetime" -> "numpy" [];
	"pandas.tests.tools.test_to_datetime" -> "pytest" [];
	"pandas.tests.tools.test_to_datetime" -> "pytz" [];
	"pandas.tests.tools.test_to_datetime" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "pytz" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "pandas" [];
	"pandas.tests.test_take" -> "datetime" [];
	"pandas.tests.test_take" -> "numpy" [];
	"pandas.tests.test_take" -> "pytest" [];
	"pandas.tests.test_sorting" -> "collections" [];
	"pandas.tests.test_sorting" -> "datetime" [];
	"pandas.tests.test_sorting" -> "itertools" [];
	"pandas.tests.test_sorting" -> "numpy" [];
	"pandas.tests.test_sorting" -> "pytest" [];
	"pandas.tests.test_sorting" -> "pandas" [];
	"pandas.tests.test_register_accessor" -> "contextlib" [];
	"pandas.tests.test_register_accessor" -> "pytest" [];
	"pandas.tests.test_register_accessor" -> "pandas" [];
	"pandas.tests.test_optional_dependency" -> "sys" [];
	"pandas.tests.test_optional_dependency" -> "types" [];
	"pandas.tests.test_optional_dependency" -> "pytest" [];
	"pandas.tests.test_nanops" -> "functools" [];
	"pandas.tests.test_nanops" -> "numpy" [];
	"pandas.tests.test_nanops" -> "pytest" [];
	"pandas.tests.test_nanops" -> "pandas" [];
	"pandas.tests.test_multilevel" -> "datetime" [];
	"pandas.tests.test_multilevel" -> "numpy" [];
	"pandas.tests.test_multilevel" -> "pytest" [];
	"pandas.tests.test_multilevel" -> "pandas" [];
	"pandas.tests.test_flags" -> "pytest" [];
	"pandas.tests.test_flags" -> "pandas" [];
	"pandas.tests.test_expressions" -> "operator" [];
	"pandas.tests.test_expressions" -> "re" [];
	"pandas.tests.test_expressions" -> "numpy" [];
	"pandas.tests.test_expressions" -> "pytest" [];
	"pandas.tests.test_expressions" -> "pandas" [];
	"pandas.tests.test_errors" -> "pytest" [];
	"pandas.tests.test_errors" -> "pandas" [];
	"pandas.tests.test_downstream" -> "array" [];
	"pandas.tests.test_downstream" -> "subprocess" [];
	"pandas.tests.test_downstream" -> "sys" [];
	"pandas.tests.test_downstream" -> "numpy" [];
	"pandas.tests.test_downstream" -> "pytest" [];
	"pandas.tests.test_downstream" -> "pandas" [];
	"pandas.tests.test_downstream" -> "sklearn" [];
	"pandas.tests.test_downstream" -> "dask" [];
	"pandas.tests.test_downstream" -> "xarray" [];
	"pandas.tests.test_common" -> "collections" [];
	"pandas.tests.test_common" -> "functools" [];
	"pandas.tests.test_common" -> "string" [];
	"pandas.tests.test_common" -> "subprocess" [];
	"pandas.tests.test_common" -> "sys" [];
	"pandas.tests.test_common" -> "textwrap" [];
	"pandas.tests.test_common" -> "numpy" [];
	"pandas.tests.test_common" -> "pytest" [];
	"pandas.tests.test_common" -> "pandas" [];
	"pandas.tests.test_algos" -> "datetime" [];
	"pandas.tests.test_algos" -> "struct" [];
	"pandas.tests.test_algos" -> "numpy" [];
	"pandas.tests.test_algos" -> "pytest" [];
	"pandas.tests.test_algos" -> "pandas" [];
	"pandas.tests.test_aggregation" -> "numpy" [];
	"pandas.tests.test_aggregation" -> "pytest" [];
	"pandas.tests.strings.test_strings" -> "datetime" [];
	"pandas.tests.strings.test_strings" -> "pathlib" [];
	"pandas.tests.strings.test_strings" -> "numpy" [];
	"pandas.tests.strings.test_strings" -> "pytest" [];
	"pandas.tests.strings.test_strings" -> "pandas" [];
	"pandas.tests.strings.test_string_array" -> "numpy" [];
	"pandas.tests.strings.test_string_array" -> "pytest" [];
	"pandas.tests.strings.test_string_array" -> "pandas" [];
	"pandas.tests.strings.test_split_partition" -> "datetime" [];
	"pandas.tests.strings.test_split_partition" -> "re" [];
	"pandas.tests.strings.test_split_partition" -> "numpy" [];
	"pandas.tests.strings.test_split_partition" -> "pytest" [];
	"pandas.tests.strings.test_split_partition" -> "pandas" [];
	"pandas.tests.strings.test_get_dummies" -> "numpy" [];
	"pandas.tests.strings.test_get_dummies" -> "pandas" [];
	"pandas.tests.strings.test_find_replace" -> "datetime" [];
	"pandas.tests.strings.test_find_replace" -> "re" [];
	"pandas.tests.strings.test_find_replace" -> "numpy" [];
	"pandas.tests.strings.test_find_replace" -> "pytest" [];
	"pandas.tests.strings.test_find_replace" -> "pandas" [];
	"pandas.tests.strings.test_extract" -> "datetime" [];
	"pandas.tests.strings.test_extract" -> "re" [];
	"pandas.tests.strings.test_extract" -> "numpy" [];
	"pandas.tests.strings.test_extract" -> "pytest" [];
	"pandas.tests.strings.test_extract" -> "pandas" [];
	"pandas.tests.strings.test_cat" -> "re" [];
	"pandas.tests.strings.test_cat" -> "numpy" [];
	"pandas.tests.strings.test_cat" -> "pytest" [];
	"pandas.tests.strings.test_cat" -> "pandas" [];
	"pandas.tests.strings.test_case_justify" -> "datetime" [];
	"pandas.tests.strings.test_case_justify" -> "operator" [];
	"pandas.tests.strings.test_case_justify" -> "numpy" [];
	"pandas.tests.strings.test_case_justify" -> "pytest" [];
	"pandas.tests.strings.test_case_justify" -> "pandas" [];
	"pandas.tests.strings.test_api" -> "numpy" [];
	"pandas.tests.strings.test_api" -> "pytest" [];
	"pandas.tests.strings.test_api" -> "pandas" [];
	"pandas.tests.strings.conftest" -> "pytest" [];
	"pandas.tests.strings.conftest" -> "pandas" [];
	"pandas.tests.strings" -> "numpy" [];
	"pandas.tests.strings" -> "pandas" [];
	"pandas.tests.series.test_validate" -> "pytest" [];
	"pandas.tests.series.test_unary" -> "pytest" [];
	"pandas.tests.series.test_unary" -> "pandas" [];
	"pandas.tests.series.test_ufunc" -> "collections" [];
	"pandas.tests.series.test_ufunc" -> "re" [];
	"pandas.tests.series.test_ufunc" -> "string" [];
	"pandas.tests.series.test_ufunc" -> "numpy" [];
	"pandas.tests.series.test_ufunc" -> "pytest" [];
	"pandas.tests.series.test_ufunc" -> "pandas" [];
	"pandas.tests.series.test_subclass" -> "numpy" [];
	"pandas.tests.series.test_subclass" -> "pytest" [];
	"pandas.tests.series.test_subclass" -> "pandas" [];
	"pandas.tests.series.test_reductions" -> "numpy" [];
	"pandas.tests.series.test_reductions" -> "pytest" [];
	"pandas.tests.series.test_reductions" -> "pandas" [];
	"pandas.tests.series.test_npfuncs" -> "numpy" [];
	"pandas.tests.series.test_npfuncs" -> "pytest" [];
	"pandas.tests.series.test_npfuncs" -> "pandas" [];
	"pandas.tests.series.test_missing" -> "datetime" [];
	"pandas.tests.series.test_missing" -> "numpy" [];
	"pandas.tests.series.test_missing" -> "pytest" [];
	"pandas.tests.series.test_missing" -> "pandas" [];
	"pandas.tests.series.test_logical_ops" -> "datetime" [];
	"pandas.tests.series.test_logical_ops" -> "operator" [];
	"pandas.tests.series.test_logical_ops" -> "numpy" [];
	"pandas.tests.series.test_logical_ops" -> "pytest" [];
	"pandas.tests.series.test_logical_ops" -> "pandas" [];
	"pandas.tests.series.test_formats" -> "datetime" [];
	"pandas.tests.series.test_formats" -> "numpy" [];
	"pandas.tests.series.test_formats" -> "pytest" [];
	"pandas.tests.series.test_formats" -> "pandas" [];
	"pandas.tests.series.test_cumulative" -> "re" [];
	"pandas.tests.series.test_cumulative" -> "numpy" [];
	"pandas.tests.series.test_cumulative" -> "pytest" [];
	"pandas.tests.series.test_cumulative" -> "pandas" [];
	"pandas.tests.series.test_constructors" -> "collections" [];
	"pandas.tests.series.test_constructors" -> "datetime" [];
	"pandas.tests.series.test_constructors" -> "numpy" [];
	"pandas.tests.series.test_constructors" -> "pytest" [];
	"pandas.tests.series.test_constructors" -> "pandas" [];
	"pandas.tests.series.test_arithmetic" -> "datetime" [];
	"pandas.tests.series.test_arithmetic" -> "decimal" [];
	"pandas.tests.series.test_arithmetic" -> "operator" [];
	"pandas.tests.series.test_arithmetic" -> "numpy" [];
	"pandas.tests.series.test_arithmetic" -> "pytest" [];
	"pandas.tests.series.test_arithmetic" -> "pandas" [];
	"pandas.tests.series.test_api" -> "inspect" [];
	"pandas.tests.series.test_api" -> "pydoc" [];
	"pandas.tests.series.test_api" -> "numpy" [];
	"pandas.tests.series.test_api" -> "pytest" [];
	"pandas.tests.series.test_api" -> "pandas" [];
	"pandas.tests.series.methods.test_view" -> "numpy" [];
	"pandas.tests.series.methods.test_view" -> "pytest" [];
	"pandas.tests.series.methods.test_view" -> "pandas" [];
	"pandas.tests.series.methods.test_values" -> "numpy" [];
	"pandas.tests.series.methods.test_values" -> "pytest" [];
	"pandas.tests.series.methods.test_values" -> "pandas" [];
	"pandas.tests.series.methods.test_value_counts" -> "numpy" [];
	"pandas.tests.series.methods.test_value_counts" -> "pytest" [];
	"pandas.tests.series.methods.test_value_counts" -> "pandas" [];
	"pandas.tests.series.methods.test_update" -> "numpy" [];
	"pandas.tests.series.methods.test_update" -> "pytest" [];
	"pandas.tests.series.methods.test_update" -> "pandas" [];
	"pandas.tests.series.methods.test_unstack" -> "numpy" [];
	"pandas.tests.series.methods.test_unstack" -> "pytest" [];
	"pandas.tests.series.methods.test_unstack" -> "pandas" [];
	"pandas.tests.series.methods.test_unique" -> "numpy" [];
	"pandas.tests.series.methods.test_unique" -> "pandas" [];
	"pandas.tests.series.methods.test_tz_localize" -> "datetime" [];
	"pandas.tests.series.methods.test_tz_localize" -> "pytest" [];
	"pandas.tests.series.methods.test_tz_localize" -> "pytz" [];
	"pandas.tests.series.methods.test_tz_localize" -> "pandas" [];
	"pandas.tests.series.methods.test_truncate" -> "datetime" [];
	"pandas.tests.series.methods.test_truncate" -> "pytest" [];
	"pandas.tests.series.methods.test_truncate" -> "pandas" [];
	"pandas.tests.series.methods.test_tolist" -> "pytest" [];
	"pandas.tests.series.methods.test_tolist" -> "pandas" [];
	"pandas.tests.series.methods.test_to_numpy" -> "numpy" [];
	"pandas.tests.series.methods.test_to_numpy" -> "pytest" [];
	"pandas.tests.series.methods.test_to_numpy" -> "pandas" [];
	"pandas.tests.series.methods.test_to_frame" -> "pytest" [];
	"pandas.tests.series.methods.test_to_frame" -> "pandas" [];
	"pandas.tests.series.methods.test_to_dict" -> "collections" [];
	"pandas.tests.series.methods.test_to_dict" -> "numpy" [];
	"pandas.tests.series.methods.test_to_dict" -> "pytest" [];
	"pandas.tests.series.methods.test_to_dict" -> "pandas" [];
	"pandas.tests.series.methods.test_to_csv" -> "datetime" [];
	"pandas.tests.series.methods.test_to_csv" -> "io" [];
	"pandas.tests.series.methods.test_to_csv" -> "numpy" [];
	"pandas.tests.series.methods.test_to_csv" -> "pytest" [];
	"pandas.tests.series.methods.test_to_csv" -> "pandas" [];
	"pandas.tests.series.methods.test_sort_values" -> "numpy" [];
	"pandas.tests.series.methods.test_sort_values" -> "pytest" [];
	"pandas.tests.series.methods.test_sort_values" -> "pandas" [];
	"pandas.tests.series.methods.test_sort_index" -> "numpy" [];
	"pandas.tests.series.methods.test_sort_index" -> "pytest" [];
	"pandas.tests.series.methods.test_sort_index" -> "pandas" [];
	"pandas.tests.series.methods.test_size" -> "pytest" [];
	"pandas.tests.series.methods.test_size" -> "pandas" [];
	"pandas.tests.series.methods.test_set_name" -> "datetime" [];
	"pandas.tests.series.methods.test_set_name" -> "pandas" [];
	"pandas.tests.series.methods.test_searchsorted" -> "numpy" [];
	"pandas.tests.series.methods.test_searchsorted" -> "pytest" [];
	"pandas.tests.series.methods.test_searchsorted" -> "pandas" [];
	"pandas.tests.series.methods.test_round" -> "numpy" [];
	"pandas.tests.series.methods.test_round" -> "pytest" [];
	"pandas.tests.series.methods.test_round" -> "pandas" [];
	"pandas.tests.series.methods.test_reset_index" -> "datetime" [];
	"pandas.tests.series.methods.test_reset_index" -> "numpy" [];
	"pandas.tests.series.methods.test_reset_index" -> "pytest" [];
	"pandas.tests.series.methods.test_reset_index" -> "pandas" [];
	"pandas.tests.series.methods.test_replace" -> "re" [];
	"pandas.tests.series.methods.test_replace" -> "numpy" [];
	"pandas.tests.series.methods.test_replace" -> "pytest" [];
	"pandas.tests.series.methods.test_replace" -> "pandas" [];
	"pandas.tests.series.methods.test_repeat" -> "numpy" [];
	"pandas.tests.series.methods.test_repeat" -> "pytest" [];
	"pandas.tests.series.methods.test_repeat" -> "pandas" [];
	"pandas.tests.series.methods.test_rename_axis" -> "pytest" [];
	"pandas.tests.series.methods.test_rename_axis" -> "pandas" [];
	"pandas.tests.series.methods.test_rename" -> "datetime" [];
	"pandas.tests.series.methods.test_rename" -> "re" [];
	"pandas.tests.series.methods.test_rename" -> "numpy" [];
	"pandas.tests.series.methods.test_rename" -> "pytest" [];
	"pandas.tests.series.methods.test_rename" -> "pandas" [];
	"pandas.tests.series.methods.test_reindex_like" -> "datetime" [];
	"pandas.tests.series.methods.test_reindex_like" -> "numpy" [];
	"pandas.tests.series.methods.test_reindex_like" -> "pandas" [];
	"pandas.tests.series.methods.test_reindex" -> "numpy" [];
	"pandas.tests.series.methods.test_reindex" -> "pytest" [];
	"pandas.tests.series.methods.test_reindex" -> "pandas" [];
	"pandas.tests.series.methods.test_rank" -> "itertools" [];
	"pandas.tests.series.methods.test_rank" -> "operator" [];
	"pandas.tests.series.methods.test_rank" -> "numpy" [];
	"pandas.tests.series.methods.test_rank" -> "pytest" [];
	"pandas.tests.series.methods.test_rank" -> "pandas" [];
	"pandas.tests.series.methods.test_quantile" -> "numpy" [];
	"pandas.tests.series.methods.test_quantile" -> "pytest" [];
	"pandas.tests.series.methods.test_quantile" -> "pandas" [];
	"pandas.tests.series.methods.test_pop" -> "pandas" [];
	"pandas.tests.series.methods.test_pct_change" -> "numpy" [];
	"pandas.tests.series.methods.test_pct_change" -> "pytest" [];
	"pandas.tests.series.methods.test_pct_change" -> "pandas" [];
	"pandas.tests.series.methods.test_nunique" -> "numpy" [];
	"pandas.tests.series.methods.test_nunique" -> "pandas" [];
	"pandas.tests.series.methods.test_nlargest" -> "itertools" [];
	"pandas.tests.series.methods.test_nlargest" -> "numpy" [];
	"pandas.tests.series.methods.test_nlargest" -> "pytest" [];
	"pandas.tests.series.methods.test_nlargest" -> "pandas" [];
	"pandas.tests.series.methods.test_matmul" -> "operator" [];
	"pandas.tests.series.methods.test_matmul" -> "numpy" [];
	"pandas.tests.series.methods.test_matmul" -> "pytest" [];
	"pandas.tests.series.methods.test_matmul" -> "pandas" [];
	"pandas.tests.series.methods.test_map" -> "collections" [];
	"pandas.tests.series.methods.test_map" -> "decimal" [];
	"pandas.tests.series.methods.test_map" -> "math" [];
	"pandas.tests.series.methods.test_map" -> "numpy" [];
	"pandas.tests.series.methods.test_map" -> "pytest" [];
	"pandas.tests.series.methods.test_map" -> "pandas" [];
	"pandas.tests.series.methods.test_item" -> "pytest" [];
	"pandas.tests.series.methods.test_item" -> "pandas" [];
	"pandas.tests.series.methods.test_isna" -> "numpy" [];
	"pandas.tests.series.methods.test_isna" -> "pandas" [];
	"pandas.tests.series.methods.test_isin" -> "numpy" [];
	"pandas.tests.series.methods.test_isin" -> "pytest" [];
	"pandas.tests.series.methods.test_isin" -> "pandas" [];
	"pandas.tests.series.methods.test_is_unique" -> "numpy" [];
	"pandas.tests.series.methods.test_is_unique" -> "pytest" [];
	"pandas.tests.series.methods.test_is_unique" -> "pandas" [];
	"pandas.tests.series.methods.test_is_monotonic" -> "numpy" [];
	"pandas.tests.series.methods.test_is_monotonic" -> "pandas" [];
	"pandas.tests.series.methods.test_interpolate" -> "numpy" [];
	"pandas.tests.series.methods.test_interpolate" -> "pytest" [];
	"pandas.tests.series.methods.test_interpolate" -> "pandas" [];
	"pandas.tests.series.methods.test_info" -> "io" [];
	"pandas.tests.series.methods.test_info" -> "string" [];
	"pandas.tests.series.methods.test_info" -> "textwrap" [];
	"pandas.tests.series.methods.test_info" -> "numpy" [];
	"pandas.tests.series.methods.test_info" -> "pytest" [];
	"pandas.tests.series.methods.test_info" -> "pandas" [];
	"pandas.tests.series.methods.test_infer_objects" -> "numpy" [];
	"pandas.tests.series.methods.test_infer_objects" -> "pandas" [];
	"pandas.tests.series.methods.test_get_numeric_data" -> "pandas" [];
	"pandas.tests.series.methods.test_fillna" -> "datetime" [];
	"pandas.tests.series.methods.test_fillna" -> "numpy" [];
	"pandas.tests.series.methods.test_fillna" -> "pytest" [];
	"pandas.tests.series.methods.test_fillna" -> "pytz" [];
	"pandas.tests.series.methods.test_fillna" -> "pandas" [];
	"pandas.tests.series.methods.test_explode" -> "numpy" [];
	"pandas.tests.series.methods.test_explode" -> "pytest" [];
	"pandas.tests.series.methods.test_explode" -> "pandas" [];
	"pandas.tests.series.methods.test_equals" -> "contextlib" [];
	"pandas.tests.series.methods.test_equals" -> "copy" [];
	"pandas.tests.series.methods.test_equals" -> "numpy" [];
	"pandas.tests.series.methods.test_equals" -> "pytest" [];
	"pandas.tests.series.methods.test_equals" -> "pandas" [];
	"pandas.tests.series.methods.test_duplicated" -> "numpy" [];
	"pandas.tests.series.methods.test_duplicated" -> "pytest" [];
	"pandas.tests.series.methods.test_duplicated" -> "pandas" [];
	"pandas.tests.series.methods.test_dtypes" -> "numpy" [];
	"pandas.tests.series.methods.test_dropna" -> "numpy" [];
	"pandas.tests.series.methods.test_dropna" -> "pytest" [];
	"pandas.tests.series.methods.test_dropna" -> "pandas" [];
	"pandas.tests.series.methods.test_drop_duplicates" -> "numpy" [];
	"pandas.tests.series.methods.test_drop_duplicates" -> "pytest" [];
	"pandas.tests.series.methods.test_drop_duplicates" -> "pandas" [];
	"pandas.tests.series.methods.test_drop" -> "pytest" [];
	"pandas.tests.series.methods.test_drop" -> "pandas" [];
	"pandas.tests.series.methods.test_diff" -> "numpy" [];
	"pandas.tests.series.methods.test_diff" -> "pytest" [];
	"pandas.tests.series.methods.test_diff" -> "pandas" [];
	"pandas.tests.series.methods.test_describe" -> "numpy" [];
	"pandas.tests.series.methods.test_describe" -> "pytest" [];
	"pandas.tests.series.methods.test_describe" -> "pandas" [];
	"pandas.tests.series.methods.test_cov_corr" -> "math" [];
	"pandas.tests.series.methods.test_cov_corr" -> "numpy" [];
	"pandas.tests.series.methods.test_cov_corr" -> "pytest" [];
	"pandas.tests.series.methods.test_cov_corr" -> "pandas" [];
	"pandas.tests.series.methods.test_count" -> "numpy" [];
	"pandas.tests.series.methods.test_count" -> "pandas" [];
	"pandas.tests.series.methods.test_copy" -> "numpy" [];
	"pandas.tests.series.methods.test_copy" -> "pytest" [];
	"pandas.tests.series.methods.test_copy" -> "pandas" [];
	"pandas.tests.series.methods.test_convert_dtypes" -> "itertools" [];
	"pandas.tests.series.methods.test_convert_dtypes" -> "numpy" [];
	"pandas.tests.series.methods.test_convert_dtypes" -> "pytest" [];
	"pandas.tests.series.methods.test_convert_dtypes" -> "pandas" [];
	"pandas.tests.series.methods.test_compare" -> "numpy" [];
	"pandas.tests.series.methods.test_compare" -> "pytest" [];
	"pandas.tests.series.methods.test_compare" -> "pandas" [];
	"pandas.tests.series.methods.test_combine_first" -> "datetime" [];
	"pandas.tests.series.methods.test_combine_first" -> "numpy" [];
	"pandas.tests.series.methods.test_combine_first" -> "pandas" [];
	"pandas.tests.series.methods.test_combine" -> "pandas" [];
	"pandas.tests.series.methods.test_clip" -> "datetime" [];
	"pandas.tests.series.methods.test_clip" -> "numpy" [];
	"pandas.tests.series.methods.test_clip" -> "pytest" [];
	"pandas.tests.series.methods.test_clip" -> "pandas" [];
	"pandas.tests.series.methods.test_case_when" -> "numpy" [];
	"pandas.tests.series.methods.test_case_when" -> "pytest" [];
	"pandas.tests.series.methods.test_case_when" -> "pandas" [];
	"pandas.tests.series.methods.test_between" -> "numpy" [];
	"pandas.tests.series.methods.test_between" -> "pytest" [];
	"pandas.tests.series.methods.test_between" -> "pandas" [];
	"pandas.tests.series.methods.test_autocorr" -> "numpy" [];
	"pandas.tests.series.methods.test_astype" -> "datetime" [];
	"pandas.tests.series.methods.test_astype" -> "importlib" [];
	"pandas.tests.series.methods.test_astype" -> "string" [];
	"pandas.tests.series.methods.test_astype" -> "sys" [];
	"pandas.tests.series.methods.test_astype" -> "numpy" [];
	"pandas.tests.series.methods.test_astype" -> "pytest" [];
	"pandas.tests.series.methods.test_astype" -> "pandas" [];
	"pandas.tests.series.methods.test_asof" -> "numpy" [];
	"pandas.tests.series.methods.test_asof" -> "pytest" [];
	"pandas.tests.series.methods.test_asof" -> "pandas" [];
	"pandas.tests.series.methods.test_argsort" -> "numpy" [];
	"pandas.tests.series.methods.test_argsort" -> "pytest" [];
	"pandas.tests.series.methods.test_argsort" -> "pandas" [];
	"pandas.tests.series.methods.test_align" -> "datetime" [];
	"pandas.tests.series.methods.test_align" -> "numpy" [];
	"pandas.tests.series.methods.test_align" -> "pytest" [];
	"pandas.tests.series.methods.test_align" -> "pandas" [];
	"pandas.tests.series.methods.test_add_prefix_suffix" -> "pytest" [];
	"pandas.tests.series.methods.test_add_prefix_suffix" -> "pandas" [];
	"pandas.tests.series.indexing.test_xs" -> "numpy" [];
	"pandas.tests.series.indexing.test_xs" -> "pytest" [];
	"pandas.tests.series.indexing.test_xs" -> "pandas" [];
	"pandas.tests.series.indexing.test_where" -> "numpy" [];
	"pandas.tests.series.indexing.test_where" -> "pytest" [];
	"pandas.tests.series.indexing.test_where" -> "pandas" [];
	"pandas.tests.series.indexing.test_take" -> "pytest" [];
	"pandas.tests.series.indexing.test_take" -> "pandas" [];
	"pandas.tests.series.indexing.test_setitem" -> "datetime" [];
	"pandas.tests.series.indexing.test_setitem" -> "decimal" [];
	"pandas.tests.series.indexing.test_setitem" -> "os" [];
	"pandas.tests.series.indexing.test_setitem" -> "numpy" [];
	"pandas.tests.series.indexing.test_setitem" -> "pytest" [];
	"pandas.tests.series.indexing.test_setitem" -> "pandas" [];
	"pandas.tests.series.indexing.test_set_value" -> "datetime" [];
	"pandas.tests.series.indexing.test_set_value" -> "numpy" [];
	"pandas.tests.series.indexing.test_set_value" -> "pandas" [];
	"pandas.tests.series.indexing.test_mask" -> "numpy" [];
	"pandas.tests.series.indexing.test_mask" -> "pytest" [];
	"pandas.tests.series.indexing.test_mask" -> "pandas" [];
	"pandas.tests.series.indexing.test_indexing" -> "datetime" [];
	"pandas.tests.series.indexing.test_indexing" -> "re" [];
	"pandas.tests.series.indexing.test_indexing" -> "numpy" [];
	"pandas.tests.series.indexing.test_indexing" -> "pytest" [];
	"pandas.tests.series.indexing.test_indexing" -> "pandas" [];
	"pandas.tests.series.indexing.test_getitem" -> "datetime" [];
	"pandas.tests.series.indexing.test_getitem" -> "numpy" [];
	"pandas.tests.series.indexing.test_getitem" -> "pytest" [];
	"pandas.tests.series.indexing.test_getitem" -> "pandas" [];
	"pandas.tests.series.indexing.test_get" -> "numpy" [];
	"pandas.tests.series.indexing.test_get" -> "pytest" [];
	"pandas.tests.series.indexing.test_get" -> "pandas" [];
	"pandas.tests.series.indexing.test_delitem" -> "pytest" [];
	"pandas.tests.series.indexing.test_delitem" -> "pandas" [];
	"pandas.tests.series.indexing.test_datetime" -> "datetime" [];
	"pandas.tests.series.indexing.test_datetime" -> "re" [];
	"pandas.tests.series.indexing.test_datetime" -> "numpy" [];
	"pandas.tests.series.indexing.test_datetime" -> "pytest" [];
	"pandas.tests.series.indexing.test_datetime" -> "pytz" [];
	"pandas.tests.series.indexing.test_datetime" -> "pandas" [];
	"pandas.tests.series.accessors.test_struct_accessor" -> "re" [];
	"pandas.tests.series.accessors.test_struct_accessor" -> "pytest" [];
	"pandas.tests.series.accessors.test_struct_accessor" -> "pandas" [];
	"pandas.tests.series.accessors.test_str_accessor" -> "pytest" [];
	"pandas.tests.series.accessors.test_str_accessor" -> "pandas" [];
	"pandas.tests.series.accessors.test_sparse_accessor" -> "pandas" [];
	"pandas.tests.series.accessors.test_list_accessor" -> "re" [];
	"pandas.tests.series.accessors.test_list_accessor" -> "pytest" [];
	"pandas.tests.series.accessors.test_list_accessor" -> "pandas" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "calendar" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "datetime" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "locale" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "unicodedata" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "numpy" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "pytest" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "pytz" [];
	"pandas.tests.series.accessors.test_dt_accessor" -> "pandas" [];
	"pandas.tests.series.accessors.test_cat_accessor" -> "numpy" [];
	"pandas.tests.series.accessors.test_cat_accessor" -> "pytest" [];
	"pandas.tests.series.accessors.test_cat_accessor" -> "pandas" [];
	"pandas.tests.scalar.timestamp.test_timezones" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_timezones" -> "pandas" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "calendar" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "locale" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "time" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "unicodedata" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "hypothesis" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "numpy" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "pytest" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "pytz" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "pandas" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "pprint" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "pytest" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "pytz" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "pandas" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "calendar" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "zoneinfo" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "numpy" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "pytest" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "pytz" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "pandas" [];
	"zoneinfo" -> "_zoneinfo" [];
	"zoneinfo" -> "tzdata" [];
	"zoneinfo._zoneinfo" -> "bisect" [];
	"zoneinfo._zoneinfo" -> "calendar" [];
	"zoneinfo._zoneinfo" -> "collections" [];
	"zoneinfo._zoneinfo" -> "functools" [];
	"zoneinfo._zoneinfo" -> "re" [];
	"zoneinfo._zoneinfo" -> "weakref" [];
	"zoneinfo._zoneinfo" -> "datetime" [];
	"zoneinfo._zoneinfo" -> "pickle" [];
	"zoneinfo._common" -> "struct" [];
	"zoneinfo._common" -> "importlib" [];
	"zoneinfo._tzpath" -> "os" [];
	"zoneinfo._tzpath" -> "sysconfig" [];
	"zoneinfo._tzpath" -> "warnings" [];
	"zoneinfo._tzpath" -> "importlib" [];
	"pandas.tests.scalar.timestamp.test_comparisons" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_comparisons" -> "operator" [];
	"pandas.tests.scalar.timestamp.test_comparisons" -> "numpy" [];
	"pandas.tests.scalar.timestamp.test_comparisons" -> "pytest" [];
	"pandas.tests.scalar.timestamp.test_comparisons" -> "pandas" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "datetime" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "numpy" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "pytest" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "datetime" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "re" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "zoneinfo" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_convert" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_convert" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_convert" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_to_pydatetime" -> "datetime" [];
	"pandas.tests.scalar.timestamp.methods.test_to_pydatetime" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_to_pydatetime" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_to_julian_date" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_timestamp_method" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_round" -> "hypothesis" [];
	"pandas.tests.scalar.timestamp.methods.test_round" -> "numpy" [];
	"pandas.tests.scalar.timestamp.methods.test_round" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_round" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "datetime" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "numpy" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "pytz" [];
	"pandas.tests.scalar.timestamp.methods.test_normalize" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_as_unit" -> "pytest" [];
	"pandas.tests.scalar.timestamp.methods.test_as_unit" -> "pandas" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "datetime" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "sys" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "hypothesis" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "numpy" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "pytest" [];
	"pandas.tests.scalar.timedelta.test_timedelta" -> "pandas" [];
	"pandas.tests.scalar.timedelta.test_formats" -> "pytest" [];
	"pandas.tests.scalar.timedelta.test_formats" -> "pandas" [];
	"pandas.tests.scalar.timedelta.test_constructors" -> "datetime" [];
	"pandas.tests.scalar.timedelta.test_constructors" -> "itertools" [];
	"pandas.tests.scalar.timedelta.test_constructors" -> "numpy" [];
	"pandas.tests.scalar.timedelta.test_constructors" -> "pytest" [];
	"pandas.tests.scalar.timedelta.test_constructors" -> "pandas" [];
	"pandas.tests.scalar.timedelta.test_arithmetic" -> "datetime" [];
	"pandas.tests.scalar.timedelta.test_arithmetic" -> "operator" [];
	"pandas.tests.scalar.timedelta.test_arithmetic" -> "numpy" [];
	"pandas.tests.scalar.timedelta.test_arithmetic" -> "pytest" [];
	"pandas.tests.scalar.timedelta.test_arithmetic" -> "pandas" [];
	"pandas.tests.scalar.timedelta.methods.test_round" -> "hypothesis" [];
	"pandas.tests.scalar.timedelta.methods.test_round" -> "numpy" [];
	"pandas.tests.scalar.timedelta.methods.test_round" -> "pytest" [];
	"pandas.tests.scalar.timedelta.methods.test_round" -> "pandas" [];
	"pandas.tests.scalar.timedelta.methods.test_as_unit" -> "pytest" [];
	"pandas.tests.scalar.timedelta.methods.test_as_unit" -> "pandas" [];
	"pandas.tests.scalar.test_nat" -> "datetime" [];
	"pandas.tests.scalar.test_nat" -> "operator" [];
	"pandas.tests.scalar.test_nat" -> "numpy" [];
	"pandas.tests.scalar.test_nat" -> "pytest" [];
	"pandas.tests.scalar.test_nat" -> "pytz" [];
	"pandas.tests.scalar.test_nat" -> "pandas" [];
	"pandas.tests.scalar.test_na_scalar" -> "datetime" [];
	"pandas.tests.scalar.test_na_scalar" -> "pickle" [];
	"pandas.tests.scalar.test_na_scalar" -> "numpy" [];
	"pandas.tests.scalar.test_na_scalar" -> "pytest" [];
	"pandas.tests.scalar.test_na_scalar" -> "pandas" [];
	"pandas.tests.scalar.period.test_period" -> "datetime" [];
	"pandas.tests.scalar.period.test_period" -> "re" [];
	"pandas.tests.scalar.period.test_period" -> "numpy" [];
	"pandas.tests.scalar.period.test_period" -> "pytest" [];
	"pandas.tests.scalar.period.test_period" -> "pandas" [];
	"pandas.tests.scalar.period.test_asfreq" -> "pytest" [];
	"pandas.tests.scalar.period.test_asfreq" -> "pandas" [];
	"pandas.tests.scalar.period.test_arithmetic" -> "datetime" [];
	"pandas.tests.scalar.period.test_arithmetic" -> "numpy" [];
	"pandas.tests.scalar.period.test_arithmetic" -> "pytest" [];
	"pandas.tests.scalar.period.test_arithmetic" -> "pandas" [];
	"pandas.tests.scalar.interval.test_overlaps" -> "pytest" [];
	"pandas.tests.scalar.interval.test_overlaps" -> "pandas" [];
	"pandas.tests.scalar.interval.test_interval" -> "numpy" [];
	"pandas.tests.scalar.interval.test_interval" -> "pytest" [];
	"pandas.tests.scalar.interval.test_interval" -> "pandas" [];
	"pandas.tests.scalar.interval.test_formats" -> "pandas" [];
	"pandas.tests.scalar.interval.test_contains" -> "pytest" [];
	"pandas.tests.scalar.interval.test_contains" -> "pandas" [];
	"pandas.tests.scalar.interval.test_constructors" -> "pytest" [];
	"pandas.tests.scalar.interval.test_constructors" -> "pandas" [];
	"pandas.tests.scalar.interval.test_arithmetic" -> "datetime" [];
	"pandas.tests.scalar.interval.test_arithmetic" -> "numpy" [];
	"pandas.tests.scalar.interval.test_arithmetic" -> "pytest" [];
	"pandas.tests.scalar.interval.test_arithmetic" -> "pandas" [];
	"pandas.tests.reshape.test_util" -> "numpy" [];
	"pandas.tests.reshape.test_util" -> "pytest" [];
	"pandas.tests.reshape.test_util" -> "pandas" [];
	"pandas.tests.reshape.test_union_categoricals" -> "numpy" [];
	"pandas.tests.reshape.test_union_categoricals" -> "pytest" [];
	"pandas.tests.reshape.test_union_categoricals" -> "pandas" [];
	"pandas.tests.reshape.test_qcut" -> "os" [];
	"pandas.tests.reshape.test_qcut" -> "numpy" [];
	"pandas.tests.reshape.test_qcut" -> "pytest" [];
	"pandas.tests.reshape.test_qcut" -> "pandas" [];
	"pandas.tests.reshape.test_pivot_multilevel" -> "numpy" [];
	"pandas.tests.reshape.test_pivot_multilevel" -> "pytest" [];
	"pandas.tests.reshape.test_pivot_multilevel" -> "pandas" [];
	"pandas.tests.reshape.test_pivot" -> "datetime" [];
	"pandas.tests.reshape.test_pivot" -> "itertools" [];
	"pandas.tests.reshape.test_pivot" -> "re" [];
	"pandas.tests.reshape.test_pivot" -> "numpy" [];
	"pandas.tests.reshape.test_pivot" -> "pytest" [];
	"pandas.tests.reshape.test_pivot" -> "pandas" [];
	"pandas.tests.reshape.test_melt" -> "re" [];
	"pandas.tests.reshape.test_melt" -> "numpy" [];
	"pandas.tests.reshape.test_melt" -> "pytest" [];
	"pandas.tests.reshape.test_melt" -> "pandas" [];
	"pandas.tests.reshape.test_get_dummies" -> "re" [];
	"pandas.tests.reshape.test_get_dummies" -> "unicodedata" [];
	"pandas.tests.reshape.test_get_dummies" -> "numpy" [];
	"pandas.tests.reshape.test_get_dummies" -> "pytest" [];
	"pandas.tests.reshape.test_get_dummies" -> "pandas" [];
	"pandas.tests.reshape.test_get_dummies" -> "pyarrow" [];
	"pandas.tests.reshape.test_from_dummies" -> "numpy" [];
	"pandas.tests.reshape.test_from_dummies" -> "pytest" [];
	"pandas.tests.reshape.test_from_dummies" -> "pandas" [];
	"pandas.tests.reshape.test_cut" -> "numpy" [];
	"pandas.tests.reshape.test_cut" -> "pytest" [];
	"pandas.tests.reshape.test_cut" -> "pandas" [];
	"pandas.tests.reshape.test_crosstab" -> "numpy" [];
	"pandas.tests.reshape.test_crosstab" -> "pytest" [];
	"pandas.tests.reshape.test_crosstab" -> "pandas" [];
	"pandas.tests.reshape.merge.test_multi" -> "numpy" [];
	"pandas.tests.reshape.merge.test_multi" -> "pytest" [];
	"pandas.tests.reshape.merge.test_multi" -> "pandas" [];
	"pandas.tests.reshape.merge.test_merge_ordered" -> "re" [];
	"pandas.tests.reshape.merge.test_merge_ordered" -> "numpy" [];
	"pandas.tests.reshape.merge.test_merge_ordered" -> "pytest" [];
	"pandas.tests.reshape.merge.test_merge_ordered" -> "pandas" [];
	"pandas.tests.reshape.merge.test_merge_index_as_string" -> "numpy" [];
	"pandas.tests.reshape.merge.test_merge_index_as_string" -> "pytest" [];
	"pandas.tests.reshape.merge.test_merge_index_as_string" -> "pandas" [];
	"pandas.tests.reshape.merge.test_merge_cross" -> "pytest" [];
	"pandas.tests.reshape.merge.test_merge_cross" -> "pandas" [];
	"pandas.tests.reshape.merge.test_merge_asof" -> "datetime" [];
	"pandas.tests.reshape.merge.test_merge_asof" -> "numpy" [];
	"pandas.tests.reshape.merge.test_merge_asof" -> "pytest" [];
	"pandas.tests.reshape.merge.test_merge_asof" -> "pytz" [];
	"pandas.tests.reshape.merge.test_merge_asof" -> "pandas" [];
	"pandas.tests.reshape.merge.test_merge" -> "datetime" [];
	"pandas.tests.reshape.merge.test_merge" -> "re" [];
	"pandas.tests.reshape.merge.test_merge" -> "numpy" [];
	"pandas.tests.reshape.merge.test_merge" -> "pytest" [];
	"pandas.tests.reshape.merge.test_merge" -> "pandas" [];
	"pandas.tests.reshape.merge.test_join" -> "re" [];
	"pandas.tests.reshape.merge.test_join" -> "numpy" [];
	"pandas.tests.reshape.merge.test_join" -> "pytest" [];
	"pandas.tests.reshape.merge.test_join" -> "pandas" [];
	"pandas.tests.reshape.concat.test_sort" -> "numpy" [];
	"pandas.tests.reshape.concat.test_sort" -> "pytest" [];
	"pandas.tests.reshape.concat.test_sort" -> "pandas" [];
	"pandas.tests.reshape.concat.test_series" -> "numpy" [];
	"pandas.tests.reshape.concat.test_series" -> "pytest" [];
	"pandas.tests.reshape.concat.test_series" -> "pandas" [];
	"pandas.tests.reshape.concat.test_invalid" -> "io" [];
	"pandas.tests.reshape.concat.test_invalid" -> "numpy" [];
	"pandas.tests.reshape.concat.test_invalid" -> "pytest" [];
	"pandas.tests.reshape.concat.test_invalid" -> "pandas" [];
	"pandas.tests.reshape.concat.test_index" -> "copy" [];
	"pandas.tests.reshape.concat.test_index" -> "numpy" [];
	"pandas.tests.reshape.concat.test_index" -> "pytest" [];
	"pandas.tests.reshape.concat.test_index" -> "pandas" [];
	"pandas.tests.reshape.concat.test_empty" -> "numpy" [];
	"pandas.tests.reshape.concat.test_empty" -> "pytest" [];
	"pandas.tests.reshape.concat.test_empty" -> "pandas" [];
	"pandas.tests.reshape.concat.test_datetimes" -> "datetime" [];
	"pandas.tests.reshape.concat.test_datetimes" -> "dateutil" [];
	"pandas.tests.reshape.concat.test_datetimes" -> "numpy" [];
	"pandas.tests.reshape.concat.test_datetimes" -> "pytest" [];
	"pandas.tests.reshape.concat.test_datetimes" -> "pandas" [];
	"pandas.tests.reshape.concat.test_dataframe" -> "numpy" [];
	"pandas.tests.reshape.concat.test_dataframe" -> "pytest" [];
	"pandas.tests.reshape.concat.test_dataframe" -> "pandas" [];
	"pandas.tests.reshape.concat.test_concat" -> "collections" [];
	"pandas.tests.reshape.concat.test_concat" -> "datetime" [];
	"pandas.tests.reshape.concat.test_concat" -> "decimal" [];
	"pandas.tests.reshape.concat.test_concat" -> "numpy" [];
	"pandas.tests.reshape.concat.test_concat" -> "pytest" [];
	"pandas.tests.reshape.concat.test_concat" -> "pandas" [];
	"pandas.tests.extension.decimal.array" -> "__future__" [];
	"pandas.tests.extension.decimal.array" -> "decimal" [];
	"pandas.tests.extension.decimal.array" -> "numbers" [];
	"pandas.tests.extension.decimal.array" -> "sys" [];
	"pandas.tests.extension.decimal.array" -> "typing" [];
	"pandas.tests.extension.decimal.array" -> "numpy" [];
	"pandas.tests.extension.decimal.array" -> "pandas" [];
	"pandas.tests.reshape.concat.test_categorical" -> "datetime" [];
	"pandas.tests.reshape.concat.test_categorical" -> "numpy" [];
	"pandas.tests.reshape.concat.test_categorical" -> "pandas" [];
	"pandas.tests.reshape.concat.test_append_common" -> "numpy" [];
	"pandas.tests.reshape.concat.test_append_common" -> "pytest" [];
	"pandas.tests.reshape.concat.test_append_common" -> "pandas" [];
	"pandas.tests.reshape.concat.test_append" -> "datetime" [];
	"pandas.tests.reshape.concat.test_append" -> "itertools" [];
	"pandas.tests.reshape.concat.test_append" -> "dateutil" [];
	"pandas.tests.reshape.concat.test_append" -> "numpy" [];
	"pandas.tests.reshape.concat.test_append" -> "pytest" [];
	"pandas.tests.reshape.concat.test_append" -> "pandas" [];
	"pandas.tests.reshape.concat.conftest" -> "pytest" [];
	"pandas.tests.resample.test_timedelta" -> "datetime" [];
	"pandas.tests.resample.test_timedelta" -> "numpy" [];
	"pandas.tests.resample.test_timedelta" -> "pytest" [];
	"pandas.tests.resample.test_timedelta" -> "pandas" [];
	"pandas.tests.resample.test_time_grouper" -> "datetime" [];
	"pandas.tests.resample.test_time_grouper" -> "operator" [];
	"pandas.tests.resample.test_time_grouper" -> "numpy" [];
	"pandas.tests.resample.test_time_grouper" -> "pytest" [];
	"pandas.tests.resample.test_time_grouper" -> "pandas" [];
	"pandas.tests.resample.test_resampler_grouper" -> "textwrap" [];
	"pandas.tests.resample.test_resampler_grouper" -> "numpy" [];
	"pandas.tests.resample.test_resampler_grouper" -> "pytest" [];
	"pandas.tests.resample.test_resampler_grouper" -> "pandas" [];
	"pandas.tests.resample.test_resampler_grouper" -> "'IPython.core'" [];
	"pandas.tests.resample.test_resample_api" -> "datetime" [];
	"pandas.tests.resample.test_resample_api" -> "re" [];
	"pandas.tests.resample.test_resample_api" -> "numpy" [];
	"pandas.tests.resample.test_resample_api" -> "pytest" [];
	"pandas.tests.resample.test_resample_api" -> "pandas" [];
	"pandas.tests.resample.test_period_index" -> "datetime" [];
	"pandas.tests.resample.test_period_index" -> "warnings" [];
	"pandas.tests.resample.test_period_index" -> "dateutil" [];
	"pandas.tests.resample.test_period_index" -> "numpy" [];
	"pandas.tests.resample.test_period_index" -> "pytest" [];
	"pandas.tests.resample.test_period_index" -> "pytz" [];
	"pandas.tests.resample.test_period_index" -> "pandas" [];
	"pandas.tests.resample.test_datetime_index" -> "datetime" [];
	"pandas.tests.resample.test_datetime_index" -> "functools" [];
	"pandas.tests.resample.test_datetime_index" -> "numpy" [];
	"pandas.tests.resample.test_datetime_index" -> "pytest" [];
	"pandas.tests.resample.test_datetime_index" -> "pytz" [];
	"pandas.tests.resample.test_datetime_index" -> "pandas" [];
	"pandas.tests.resample.test_base" -> "datetime" [];
	"pandas.tests.resample.test_base" -> "numpy" [];
	"pandas.tests.resample.test_base" -> "pytest" [];
	"pandas.tests.resample.test_base" -> "pandas" [];
	"pandas.tests.resample.conftest" -> "datetime" [];
	"pandas.tests.resample.conftest" -> "numpy" [];
	"pandas.tests.resample.conftest" -> "pytest" [];
	"pandas.tests.resample.conftest" -> "pandas" [];
	"pandas.tests.reductions.test_stat_reductions" -> "inspect" [];
	"pandas.tests.reductions.test_stat_reductions" -> "numpy" [];
	"pandas.tests.reductions.test_stat_reductions" -> "pytest" [];
	"pandas.tests.reductions.test_stat_reductions" -> "pandas" [];
	"pandas.tests.reductions.test_reductions" -> "datetime" [];
	"pandas.tests.reductions.test_reductions" -> "decimal" [];
	"pandas.tests.reductions.test_reductions" -> "numpy" [];
	"pandas.tests.reductions.test_reductions" -> "pytest" [];
	"pandas.tests.reductions.test_reductions" -> "pandas" [];
	"pandas.tests.plotting.test_style" -> "pytest" [];
	"pandas.tests.plotting.test_style" -> "pandas" [];
	"pandas.tests.plotting.test_style" -> "matplotlib" [];
	"pandas.tests.plotting.test_style" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.test_style" -> "'matplotlib.colors'" [];
	"pandas.plotting._matplotlib.style" -> "__future__" [];
	"pandas.plotting._matplotlib.style" -> "itertools" [];
	"pandas.plotting._matplotlib.style" -> "typing" [];
	"pandas.plotting._matplotlib.style" -> "warnings" [];
	"pandas.plotting._matplotlib.style" -> "matplotlib" [];
	"pandas.plotting._matplotlib.style" -> "'matplotlib.colors'" [];
	"pandas.plotting._matplotlib.style" -> "numpy" [];
	"pandas.plotting._matplotlib.style" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib" -> "__future__" [];
	"pandas.plotting._matplotlib" -> "typing" [];
	"pandas.plotting._matplotlib" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib.misc" -> "__future__" [];
	"pandas.plotting._matplotlib.misc" -> "random" [];
	"pandas.plotting._matplotlib.misc" -> "typing" [];
	"pandas.plotting._matplotlib.misc" -> "matplotlib" [];
	"pandas.plotting._matplotlib.misc" -> "'matplotlib.lines'" [];
	"pandas.plotting._matplotlib.misc" -> "numpy" [];
	"pandas.plotting._matplotlib.misc" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.misc" -> "'matplotlib.figure'" [];
	"pandas.plotting._matplotlib.misc" -> "pandas" [];
	"pandas.plotting._matplotlib.misc" -> "'scipy.stats'" [];
	"pandas.plotting._matplotlib.misc" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib.hist" -> "__future__" [];
	"pandas.plotting._matplotlib.hist" -> "typing" [];
	"pandas.plotting._matplotlib.hist" -> "numpy" [];
	"pandas.plotting._matplotlib.hist" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.hist" -> "'matplotlib.figure'" [];
	"pandas.plotting._matplotlib.hist" -> "pandas" [];
	"pandas.plotting._matplotlib.hist" -> "'scipy.stats'" [];
	"pandas.plotting._matplotlib.hist" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib.groupby" -> "__future__" [];
	"pandas.plotting._matplotlib.groupby" -> "typing" [];
	"pandas.plotting._matplotlib.groupby" -> "numpy" [];
	"pandas.plotting._matplotlib.groupby" -> "pandas" [];
	"pandas.plotting._matplotlib.core" -> "__future__" [];
	"pandas.plotting._matplotlib.core" -> "abc" [];
	"pandas.plotting._matplotlib.core" -> "typing" [];
	"pandas.plotting._matplotlib.core" -> "warnings" [];
	"pandas.plotting._matplotlib.core" -> "matplotlib" [];
	"pandas.plotting._matplotlib.core" -> "numpy" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.artist'" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.axis'" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.figure'" [];
	"pandas.plotting._matplotlib.core" -> "pandas" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.colors'" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib.core" -> "'matplotlib.ticker'" [];
	"pandas.plotting._matplotlib.timeseries" -> "__future__" [];
	"pandas.plotting._matplotlib.timeseries" -> "functools" [];
	"pandas.plotting._matplotlib.timeseries" -> "typing" [];
	"pandas.plotting._matplotlib.timeseries" -> "warnings" [];
	"pandas.plotting._matplotlib.timeseries" -> "numpy" [];
	"pandas.plotting._matplotlib.timeseries" -> "datetime" [];
	"pandas.plotting._matplotlib.timeseries" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.timeseries" -> "pandas" [];
	"pandas.plotting._matplotlib.timeseries" -> "matplotlib" [];
	"pandas.plotting._matplotlib.converter" -> "__future__" [];
	"pandas.plotting._matplotlib.converter" -> "contextlib" [];
	"pandas.plotting._matplotlib.converter" -> "datetime" [];
	"pandas.plotting._matplotlib.converter" -> "functools" [];
	"pandas.plotting._matplotlib.converter" -> "typing" [];
	"pandas.plotting._matplotlib.converter" -> "warnings" [];
	"pandas.plotting._matplotlib.converter" -> "'matplotlib.dates'" [];
	"pandas.plotting._matplotlib.converter" -> "'matplotlib.ticker'" [];
	"pandas.plotting._matplotlib.converter" -> "'matplotlib.transforms'" [];
	"pandas.plotting._matplotlib.converter" -> "'matplotlib.units'" [];
	"pandas.plotting._matplotlib.converter" -> "numpy" [];
	"pandas.plotting._matplotlib.converter" -> "pandas" [];
	"pandas.plotting._matplotlib.converter" -> "'matplotlib.axis'" [];
	"pandas.plotting._matplotlib.boxplot" -> "__future__" [];
	"pandas.plotting._matplotlib.boxplot" -> "typing" [];
	"pandas.plotting._matplotlib.boxplot" -> "warnings" [];
	"pandas.plotting._matplotlib.boxplot" -> "matplotlib" [];
	"pandas.plotting._matplotlib.boxplot" -> "'matplotlib.artist'" [];
	"pandas.plotting._matplotlib.boxplot" -> "numpy" [];
	"pandas.plotting._matplotlib.boxplot" -> "pandas" [];
	"pandas.plotting._matplotlib.boxplot" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.boxplot" -> "'matplotlib.figure'" [];
	"pandas.plotting._matplotlib.boxplot" -> "'matplotlib.lines'" [];
	"pandas.plotting._matplotlib.boxplot" -> "'matplotlib.pyplot'" [];
	"pandas.plotting._matplotlib.tools" -> "__future__" [];
	"pandas.plotting._matplotlib.tools" -> "math" [];
	"pandas.plotting._matplotlib.tools" -> "typing" [];
	"pandas.plotting._matplotlib.tools" -> "warnings" [];
	"pandas.plotting._matplotlib.tools" -> "matplotlib" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.table'" [];
	"pandas.plotting._matplotlib.tools" -> "numpy" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.axes'" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.axis'" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.figure'" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.lines'" [];
	"pandas.plotting._matplotlib.tools" -> "pandas" [];
	"pandas.plotting._matplotlib.tools" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.test_series" -> "datetime" [];
	"pandas.tests.plotting.test_series" -> "itertools" [];
	"pandas.tests.plotting.test_series" -> "numpy" [];
	"pandas.tests.plotting.test_series" -> "pytest" [];
	"pandas.tests.plotting.test_series" -> "pandas" [];
	"pandas.tests.plotting.test_series" -> "matplotlib" [];
	"pandas.tests.plotting.test_misc" -> "os" [];
	"pandas.tests.plotting.test_misc" -> "numpy" [];
	"pandas.tests.plotting.test_misc" -> "pytest" [];
	"pandas.tests.plotting.test_misc" -> "pandas" [];
	"pandas.tests.plotting.test_misc" -> "matplotlib" [];
	"pandas.tests.plotting.test_misc" -> "'matplotlib.text'" [];
	"pandas.tests.plotting.test_hist_method" -> "re" [];
	"pandas.tests.plotting.test_hist_method" -> "numpy" [];
	"pandas.tests.plotting.test_hist_method" -> "pytest" [];
	"pandas.tests.plotting.test_hist_method" -> "pandas" [];
	"pandas.tests.plotting.test_hist_method" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.test_hist_method" -> "pylab" [];
	"pandas.tests.plotting.test_hist_method" -> "'matplotlib.patches'" [];
	"pandas.tests.plotting.test_groupby" -> "numpy" [];
	"pandas.tests.plotting.test_groupby" -> "pytest" [];
	"pandas.tests.plotting.test_groupby" -> "pandas" [];
	"pandas.tests.plotting.test_datetimelike" -> "datetime" [];
	"pandas.tests.plotting.test_datetimelike" -> "pickle" [];
	"pandas.tests.plotting.test_datetimelike" -> "numpy" [];
	"pandas.tests.plotting.test_datetimelike" -> "pytest" [];
	"pandas.tests.plotting.test_datetimelike" -> "pandas" [];
	"pandas.tests.plotting.test_datetimelike" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.test_converter" -> "datetime" [];
	"pandas.tests.plotting.test_converter" -> "subprocess" [];
	"pandas.tests.plotting.test_converter" -> "sys" [];
	"pandas.tests.plotting.test_converter" -> "numpy" [];
	"pandas.tests.plotting.test_converter" -> "pytest" [];
	"pandas.tests.plotting.test_converter" -> "pandas" [];
	"pandas.tests.plotting.test_common" -> "pytest" [];
	"pandas.tests.plotting.test_common" -> "pandas" [];
	"pandas.tests.plotting.test_boxplot_method" -> "__future__" [];
	"pandas.tests.plotting.test_boxplot_method" -> "itertools" [];
	"pandas.tests.plotting.test_boxplot_method" -> "string" [];
	"pandas.tests.plotting.test_boxplot_method" -> "numpy" [];
	"pandas.tests.plotting.test_boxplot_method" -> "pytest" [];
	"pandas.tests.plotting.test_boxplot_method" -> "pandas" [];
	"pandas.tests.plotting.test_boxplot_method" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.test_backend" -> "sys" [];
	"pandas.tests.plotting.test_backend" -> "types" [];
	"pandas.tests.plotting.test_backend" -> "pytest" [];
	"pandas.tests.plotting.test_backend" -> "pandas" [];
	"pandas.tests.plotting.frame.test_hist_box_by" -> "re" [];
	"pandas.tests.plotting.frame.test_hist_box_by" -> "numpy" [];
	"pandas.tests.plotting.frame.test_hist_box_by" -> "pytest" [];
	"pandas.tests.plotting.frame.test_hist_box_by" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame_subplots" -> "string" [];
	"pandas.tests.plotting.frame.test_frame_subplots" -> "numpy" [];
	"pandas.tests.plotting.frame.test_frame_subplots" -> "pytest" [];
	"pandas.tests.plotting.frame.test_frame_subplots" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame_legend" -> "numpy" [];
	"pandas.tests.plotting.frame.test_frame_legend" -> "pytest" [];
	"pandas.tests.plotting.frame.test_frame_legend" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame_legend" -> "'matplotlib.collections'" [];
	"pandas.tests.plotting.frame.test_frame_legend" -> "'matplotlib.lines'" [];
	"pandas.tests.plotting.frame.test_frame_groupby" -> "pytest" [];
	"pandas.tests.plotting.frame.test_frame_groupby" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "re" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "numpy" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "pytest" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "'matplotlib.collections'" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "matplotlib" [];
	"pandas.tests.plotting.frame.test_frame_color" -> "cycler" [];
	"pandas.tests.plotting.frame.test_frame" -> "datetime" [];
	"pandas.tests.plotting.frame.test_frame" -> "gc" [];
	"pandas.tests.plotting.frame.test_frame" -> "itertools" [];
	"pandas.tests.plotting.frame.test_frame" -> "re" [];
	"pandas.tests.plotting.frame.test_frame" -> "string" [];
	"pandas.tests.plotting.frame.test_frame" -> "weakref" [];
	"pandas.tests.plotting.frame.test_frame" -> "numpy" [];
	"pandas.tests.plotting.frame.test_frame" -> "pytest" [];
	"pandas.tests.plotting.frame.test_frame" -> "pandas" [];
	"pandas.tests.plotting.frame.test_frame" -> "'matplotlib.patches'" [];
	"pandas.tests.plotting.frame.test_frame" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.frame.test_frame" -> "matplotlib" [];
	"pandas.tests.plotting.frame.test_frame" -> "mpl_toolkits" [];
	"pandas.tests.plotting.frame.test_frame" -> "'mpl_toolkits.axes_grid1'" [];
	"pandas.tests.plotting.conftest" -> "gc" [];
	"pandas.tests.plotting.conftest" -> "numpy" [];
	"pandas.tests.plotting.conftest" -> "pytest" [];
	"pandas.tests.plotting.conftest" -> "pandas" [];
	"pandas.tests.plotting.common" -> "__future__" [];
	"pandas.tests.plotting.common" -> "typing" [];
	"pandas.tests.plotting.common" -> "numpy" [];
	"pandas.tests.plotting.common" -> "pandas" [];
	"pandas.tests.plotting.common" -> "'matplotlib.axes'" [];
	"pandas.tests.plotting.common" -> "'matplotlib.pyplot'" [];
	"pandas.tests.plotting.common" -> "'matplotlib.collections'" [];
	"pandas.tests.plotting.common" -> "matplotlib" [];
	"pandas.tests.plotting.common" -> "'matplotlib.lines'" [];
	"pandas.tests.plotting.common" -> "'matplotlib.ticker'" [];
	"pandas.tests.libs.test_libalgos" -> "datetime" [];
	"pandas.tests.libs.test_libalgos" -> "itertools" [];
	"pandas.tests.libs.test_libalgos" -> "numpy" [];
	"pandas.tests.libs.test_lib" -> "pickle" [];
	"pandas.tests.libs.test_lib" -> "numpy" [];
	"pandas.tests.libs.test_lib" -> "pytest" [];
	"pandas.tests.libs.test_lib" -> "pandas" [];
	"pandas.tests.libs.test_join" -> "numpy" [];
	"pandas.tests.libs.test_join" -> "pytest" [];
	"pandas.tests.libs.test_hashtable" -> "contextlib" [];
	"pandas.tests.libs.test_hashtable" -> "re" [];
	"pandas.tests.libs.test_hashtable" -> "struct" [];
	"pandas.tests.libs.test_hashtable" -> "tracemalloc" [];
	"pandas.tests.libs.test_hashtable" -> "numpy" [];
	"pandas.tests.libs.test_hashtable" -> "pytest" [];
	"pandas.tests.libs.test_hashtable" -> "pandas" [];
	"tracemalloc" -> "functools" [];
	"tracemalloc" -> "fnmatch" [];
	"tracemalloc" -> "linecache" [];
	"tracemalloc" -> "os.path" [];
	"tracemalloc" -> "pickle" [];
	"tracemalloc" -> "_tracemalloc" [];
	"pandas.tests.io.xml.test_xml_dtypes" -> "__future__" [];
	"pandas.tests.io.xml.test_xml_dtypes" -> "io" [];
	"pandas.tests.io.xml.test_xml_dtypes" -> "pytest" [];
	"pandas.tests.io.xml.test_xml_dtypes" -> "pandas" [];
	"pandas.tests.io.xml.test_xml" -> "__future__" [];
	"pandas.tests.io.xml.test_xml" -> "io" [];
	"pandas.tests.io.xml.test_xml" -> "lzma" [];
	"pandas.tests.io.xml.test_xml" -> "os" [];
	"pandas.tests.io.xml.test_xml" -> "tarfile" [];
	"pandas.tests.io.xml.test_xml" -> "zipfile" [];
	"pandas.tests.io.xml.test_xml" -> "numpy" [];
	"pandas.tests.io.xml.test_xml" -> "pytest" [];
	"pandas.tests.io.xml.test_xml" -> "pandas" [];
	"pandas.tests.io.xml.test_to_xml" -> "__future__" [];
	"pandas.tests.io.xml.test_to_xml" -> "io" [];
	"pandas.tests.io.xml.test_to_xml" -> "os" [];
	"pandas.tests.io.xml.test_to_xml" -> "numpy" [];
	"pandas.tests.io.xml.test_to_xml" -> "pytest" [];
	"pandas.tests.io.xml.test_to_xml" -> "pandas" [];
	"pandas.tests.io.xml.conftest" -> "pathlib" [];
	"pandas.tests.io.xml.conftest" -> "pytest" [];
	"pandas.tests.io.test_stata" -> "bz2" [];
	"pandas.tests.io.test_stata" -> "datetime" [];
	"pandas.tests.io.test_stata" -> "gzip" [];
	"pandas.tests.io.test_stata" -> "io" [];
	"pandas.tests.io.test_stata" -> "os" [];
	"pandas.tests.io.test_stata" -> "struct" [];
	"pandas.tests.io.test_stata" -> "tarfile" [];
	"pandas.tests.io.test_stata" -> "zipfile" [];
	"pandas.tests.io.test_stata" -> "numpy" [];
	"pandas.tests.io.test_stata" -> "pytest" [];
	"pandas.tests.io.test_stata" -> "pandas" [];
	"pandas.tests.io.test_sql" -> "__future__" [];
	"pandas.tests.io.test_sql" -> "contextlib" [];
	"pandas.tests.io.test_sql" -> "csv" [];
	"pandas.tests.io.test_sql" -> "datetime" [];
	"pandas.tests.io.test_sql" -> "io" [];
	"pandas.tests.io.test_sql" -> "pathlib" [];
	"pandas.tests.io.test_sql" -> "sqlite3" [];
	"pandas.tests.io.test_sql" -> "typing" [];
	"pandas.tests.io.test_sql" -> "uuid" [];
	"pandas.tests.io.test_sql" -> "numpy" [];
	"pandas.tests.io.test_sql" -> "pytest" [];
	"pandas.tests.io.test_sql" -> "pandas" [];
	"pandas.tests.io.test_sql" -> "sqlalchemy" [];
	"pandas.tests.io.test_sql" -> "'sqlalchemy.engine'" [];
	"pandas.tests.io.test_sql" -> "adbc_driver_postgresql" [];
	"pandas.tests.io.test_sql" -> "adbc_driver_manager" [];
	"pandas.tests.io.test_sql" -> "adbc_driver_sqlite" [];
	"pandas.tests.io.test_sql" -> "'sqlalchemy.dialects'" [];
	"pandas.tests.io.test_sql" -> "'sqlalchemy.sql'" [];
	"pandas.tests.io.test_sql" -> "'sqlalchemy.schema'" [];
	"pandas.tests.io.test_sql" -> "'sqlalchemy.orm'" [];
	"pandas.tests.io.test_spss" -> "datetime" [];
	"pandas.tests.io.test_spss" -> "pathlib" [];
	"pandas.tests.io.test_spss" -> "numpy" [];
	"pandas.tests.io.test_spss" -> "pytest" [];
	"pandas.tests.io.test_spss" -> "pandas" [];
	"pandas.tests.io.test_s3" -> "io" [];
	"pandas.tests.io.test_s3" -> "pytest" [];
	"pandas.tests.io.test_s3" -> "pandas" [];
	"pandas.tests.io.test_s3" -> "'botocore.response'" [];
	"pandas.tests.io.test_pickle" -> "__future__" [];
	"pandas.tests.io.test_pickle" -> "array" [];
	"pandas.tests.io.test_pickle" -> "bz2" [];
	"pandas.tests.io.test_pickle" -> "datetime" [];
	"pandas.tests.io.test_pickle" -> "functools" [];
	"pandas.tests.io.test_pickle" -> "gzip" [];
	"pandas.tests.io.test_pickle" -> "io" [];
	"pandas.tests.io.test_pickle" -> "os" [];
	"pandas.tests.io.test_pickle" -> "pathlib" [];
	"pandas.tests.io.test_pickle" -> "pickle" [];
	"pandas.tests.io.test_pickle" -> "shutil" [];
	"pandas.tests.io.test_pickle" -> "tarfile" [];
	"pandas.tests.io.test_pickle" -> "typing" [];
	"pandas.tests.io.test_pickle" -> "uuid" [];
	"pandas.tests.io.test_pickle" -> "zipfile" [];
	"pandas.tests.io.test_pickle" -> "numpy" [];
	"pandas.tests.io.test_pickle" -> "pytest" [];
	"pandas.tests.io.test_pickle" -> "pandas" [];
	"pandas.tests.io.test_parquet" -> "datetime" [];
	"pandas.tests.io.test_parquet" -> "decimal" [];
	"pandas.tests.io.test_parquet" -> "io" [];
	"pandas.tests.io.test_parquet" -> "os" [];
	"pandas.tests.io.test_parquet" -> "pathlib" [];
	"pandas.tests.io.test_parquet" -> "numpy" [];
	"pandas.tests.io.test_parquet" -> "pytest" [];
	"pandas.tests.io.test_parquet" -> "pandas" [];
	"pandas.tests.io.test_parquet" -> "pyarrow" [];
	"pandas.tests.io.test_parquet" -> "fastparquet" [];
	"pandas.tests.io.test_parquet" -> "'pyarrow.dataset'" [];
	"pandas.tests.io.test_parquet" -> "pytz" [];
	"pandas.tests.io.test_parquet" -> "'pyarrow.parquet'" [];
	"pandas.tests.io.test_orc" -> "datetime" [];
	"pandas.tests.io.test_orc" -> "decimal" [];
	"pandas.tests.io.test_orc" -> "io" [];
	"pandas.tests.io.test_orc" -> "os" [];
	"pandas.tests.io.test_orc" -> "pathlib" [];
	"pandas.tests.io.test_orc" -> "numpy" [];
	"pandas.tests.io.test_orc" -> "pytest" [];
	"pandas.tests.io.test_orc" -> "pandas" [];
	"pandas.tests.io.test_orc" -> "pyarrow" [];
	"pandas.tests.io.test_http_headers" -> "functools" [];
	"pandas.tests.io.test_http_headers" -> "gzip" [];
	"pandas.tests.io.test_http_headers" -> "io" [];
	"pandas.tests.io.test_http_headers" -> "pytest" [];
	"pandas.tests.io.test_http_headers" -> "pandas" [];
	"pandas.tests.io.test_http_headers" -> "fsspec" [];
	"pandas.tests.io.test_html" -> "functools" [];
	"pandas.tests.io.test_html" -> "io" [];
	"pandas.tests.io.test_html" -> "os" [];
	"pandas.tests.io.test_html" -> "pathlib" [];
	"pandas.tests.io.test_html" -> "re" [];
	"pandas.tests.io.test_html" -> "threading" [];
	"pandas.tests.io.test_html" -> "numpy" [];
	"pandas.tests.io.test_html" -> "pytest" [];
	"pandas.tests.io.test_html" -> "pandas" [];
	"pandas.tests.io.test_html" -> "pyarrow" [];
	"pandas.tests.io.test_gcs" -> "io" [];
	"pandas.tests.io.test_gcs" -> "os" [];
	"pandas.tests.io.test_gcs" -> "pathlib" [];
	"pandas.tests.io.test_gcs" -> "tarfile" [];
	"pandas.tests.io.test_gcs" -> "zipfile" [];
	"pandas.tests.io.test_gcs" -> "numpy" [];
	"pandas.tests.io.test_gcs" -> "pytest" [];
	"pandas.tests.io.test_gcs" -> "pandas" [];
	"pandas.tests.io.test_gcs" -> "fsspec" [];
	"pandas.tests.io.test_gbq" -> "pandas" [];
	"pandas.tests.io.test_fsspec" -> "io" [];
	"pandas.tests.io.test_fsspec" -> "numpy" [];
	"pandas.tests.io.test_fsspec" -> "pytest" [];
	"pandas.tests.io.test_fsspec" -> "pandas" [];
	"pandas.tests.io.test_fsspec" -> "fsspec" [];
	"pandas.tests.io.test_fsspec" -> "'fsspec.implementations'" [];
	"pandas.tests.io.test_fsspec" -> "'fsspec.registry'" [];
	"pandas.tests.io.test_feather" -> "numpy" [];
	"pandas.tests.io.test_feather" -> "pytest" [];
	"pandas.tests.io.test_feather" -> "pandas" [];
	"pandas.tests.io.test_feather" -> "pyarrow" [];
	"pandas.tests.io.test_compression" -> "gzip" [];
	"pandas.tests.io.test_compression" -> "io" [];
	"pandas.tests.io.test_compression" -> "os" [];
	"pandas.tests.io.test_compression" -> "pathlib" [];
	"pandas.tests.io.test_compression" -> "subprocess" [];
	"pandas.tests.io.test_compression" -> "sys" [];
	"pandas.tests.io.test_compression" -> "tarfile" [];
	"pandas.tests.io.test_compression" -> "textwrap" [];
	"pandas.tests.io.test_compression" -> "time" [];
	"pandas.tests.io.test_compression" -> "zipfile" [];
	"pandas.tests.io.test_compression" -> "numpy" [];
	"pandas.tests.io.test_compression" -> "pytest" [];
	"pandas.tests.io.test_compression" -> "pandas" [];
	"pandas.tests.io.test_common" -> "codecs" [];
	"pandas.tests.io.test_common" -> "errno" [];
	"pandas.tests.io.test_common" -> "functools" [];
	"pandas.tests.io.test_common" -> "io" [];
	"pandas.tests.io.test_common" -> "mmap" [];
	"pandas.tests.io.test_common" -> "os" [];
	"pandas.tests.io.test_common" -> "pathlib" [];
	"pandas.tests.io.test_common" -> "pickle" [];
	"pandas.tests.io.test_common" -> "tempfile" [];
	"pandas.tests.io.test_common" -> "numpy" [];
	"pandas.tests.io.test_common" -> "pytest" [];
	"pandas.tests.io.test_common" -> "pandas" [];
	"pandas.tests.io.test_common" -> "'py.path'" [];
	"pandas.tests.io.test_clipboard" -> "textwrap" [];
	"pandas.tests.io.test_clipboard" -> "numpy" [];
	"pandas.tests.io.test_clipboard" -> "pytest" [];
	"pandas.tests.io.test_clipboard" -> "pandas" [];
	"pandas.tests.io.sas.test_xport" -> "numpy" [];
	"pandas.tests.io.sas.test_xport" -> "pytest" [];
	"pandas.tests.io.sas.test_xport" -> "pandas" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "contextlib" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "datetime" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "io" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "os" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "pathlib" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "numpy" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "pytest" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "pandas" [];
	"pandas.tests.io.sas.test_sas7bdat" -> "'py.path'" [];
	"pandas.tests.io.sas.test_sas" -> "io" [];
	"pandas.tests.io.sas.test_sas" -> "pytest" [];
	"pandas.tests.io.sas.test_sas" -> "pandas" [];
	"pandas.tests.io.sas.test_byteswap" -> "hypothesis" [];
	"pandas.tests.io.sas.test_byteswap" -> "numpy" [];
	"pandas.tests.io.sas.test_byteswap" -> "pytest" [];
	"pandas.tests.io.pytables.test_timezones" -> "datetime" [];
	"pandas.tests.io.pytables.test_timezones" -> "numpy" [];
	"pandas.tests.io.pytables.test_timezones" -> "pytest" [];
	"pandas.tests.io.pytables.test_timezones" -> "pandas" [];
	"pandas.tests.io.pytables.test_time_series" -> "datetime" [];
	"pandas.tests.io.pytables.test_time_series" -> "numpy" [];
	"pandas.tests.io.pytables.test_time_series" -> "pytest" [];
	"pandas.tests.io.pytables.test_time_series" -> "pandas" [];
	"pandas.tests.io.pytables.test_subclass" -> "numpy" [];
	"pandas.tests.io.pytables.test_subclass" -> "pytest" [];
	"pandas.tests.io.pytables.test_subclass" -> "pandas" [];
	"pandas.tests.io.pytables.test_store" -> "contextlib" [];
	"pandas.tests.io.pytables.test_store" -> "datetime" [];
	"pandas.tests.io.pytables.test_store" -> "hashlib" [];
	"pandas.tests.io.pytables.test_store" -> "tempfile" [];
	"pandas.tests.io.pytables.test_store" -> "time" [];
	"pandas.tests.io.pytables.test_store" -> "numpy" [];
	"pandas.tests.io.pytables.test_store" -> "pytest" [];
	"pandas.tests.io.pytables.test_store" -> "pandas" [];
	"pandas.tests.io.pytables.test_select" -> "numpy" [];
	"pandas.tests.io.pytables.test_select" -> "pytest" [];
	"pandas.tests.io.pytables.test_select" -> "pandas" [];
	"pandas.tests.io.pytables.test_round_trip" -> "datetime" [];
	"pandas.tests.io.pytables.test_round_trip" -> "re" [];
	"pandas.tests.io.pytables.test_round_trip" -> "numpy" [];
	"pandas.tests.io.pytables.test_round_trip" -> "pytest" [];
	"pandas.tests.io.pytables.test_round_trip" -> "pandas" [];
	"pandas.tests.io.pytables.test_retain_attributes" -> "pytest" [];
	"pandas.tests.io.pytables.test_retain_attributes" -> "pandas" [];
	"pandas.tests.io.pytables.test_read" -> "contextlib" [];
	"pandas.tests.io.pytables.test_read" -> "pathlib" [];
	"pandas.tests.io.pytables.test_read" -> "re" [];
	"pandas.tests.io.pytables.test_read" -> "numpy" [];
	"pandas.tests.io.pytables.test_read" -> "pytest" [];
	"pandas.tests.io.pytables.test_read" -> "pandas" [];
	"pandas.tests.io.pytables.test_read" -> "'py.path'" [];
	"pandas.tests.io.pytables.test_pytables_missing" -> "pytest" [];
	"pandas.tests.io.pytables.test_pytables_missing" -> "pandas" [];
	"pandas.tests.io.pytables.test_put" -> "re" [];
	"pandas.tests.io.pytables.test_put" -> "numpy" [];
	"pandas.tests.io.pytables.test_put" -> "pytest" [];
	"pandas.tests.io.pytables.test_put" -> "pandas" [];
	"pandas.tests.io.pytables.test_keys" -> "numpy" [];
	"pandas.tests.io.pytables.test_keys" -> "pytest" [];
	"pandas.tests.io.pytables.test_keys" -> "pandas" [];
	"pandas.tests.io.pytables.test_file_handling" -> "os" [];
	"pandas.tests.io.pytables.test_file_handling" -> "numpy" [];
	"pandas.tests.io.pytables.test_file_handling" -> "pytest" [];
	"pandas.tests.io.pytables.test_file_handling" -> "pandas" [];
	"pandas.tests.io.pytables.test_errors" -> "datetime" [];
	"pandas.tests.io.pytables.test_errors" -> "io" [];
	"pandas.tests.io.pytables.test_errors" -> "re" [];
	"pandas.tests.io.pytables.test_errors" -> "numpy" [];
	"pandas.tests.io.pytables.test_errors" -> "pytest" [];
	"pandas.tests.io.pytables.test_errors" -> "pandas" [];
	"pandas.tests.io.pytables.test_complex" -> "numpy" [];
	"pandas.tests.io.pytables.test_complex" -> "pytest" [];
	"pandas.tests.io.pytables.test_complex" -> "pandas" [];
	"pandas.tests.io.pytables.test_compat" -> "pytest" [];
	"pandas.tests.io.pytables.test_compat" -> "pandas" [];
	"pandas.tests.io.pytables.test_categorical" -> "numpy" [];
	"pandas.tests.io.pytables.test_categorical" -> "pytest" [];
	"pandas.tests.io.pytables.test_categorical" -> "pandas" [];
	"pandas.tests.io.pytables.test_append" -> "datetime" [];
	"pandas.tests.io.pytables.test_append" -> "re" [];
	"pandas.tests.io.pytables.test_append" -> "numpy" [];
	"pandas.tests.io.pytables.test_append" -> "pytest" [];
	"pandas.tests.io.pytables.test_append" -> "pandas" [];
	"pandas.tests.io.pytables.conftest" -> "uuid" [];
	"pandas.tests.io.pytables.conftest" -> "pytest" [];
	"pandas.tests.io.pytables.common" -> "contextlib" [];
	"pandas.tests.io.pytables.common" -> "pathlib" [];
	"pandas.tests.io.pytables.common" -> "tempfile" [];
	"pandas.tests.io.pytables.common" -> "pytest" [];
	"pandas.tests.io.parser.usecols.test_usecols_basic" -> "io" [];
	"pandas.tests.io.parser.usecols.test_usecols_basic" -> "numpy" [];
	"pandas.tests.io.parser.usecols.test_usecols_basic" -> "pytest" [];
	"pandas.tests.io.parser.usecols.test_usecols_basic" -> "pandas" [];
	"pandas.tests.io.parser.usecols.test_strings" -> "io" [];
	"pandas.tests.io.parser.usecols.test_strings" -> "pytest" [];
	"pandas.tests.io.parser.usecols.test_strings" -> "pandas" [];
	"pandas.tests.io.parser.usecols.test_parse_dates" -> "io" [];
	"pandas.tests.io.parser.usecols.test_parse_dates" -> "pytest" [];
	"pandas.tests.io.parser.usecols.test_parse_dates" -> "pandas" [];
	"pandas.tests.io.parser.test_upcast" -> "numpy" [];
	"pandas.tests.io.parser.test_upcast" -> "pytest" [];
	"pandas.tests.io.parser.test_upcast" -> "pandas" [];
	"pandas.tests.io.parser.test_unsupported" -> "io" [];
	"pandas.tests.io.parser.test_unsupported" -> "os" [];
	"pandas.tests.io.parser.test_unsupported" -> "pathlib" [];
	"pandas.tests.io.parser.test_unsupported" -> "pytest" [];
	"pandas.tests.io.parser.test_textreader" -> "io" [];
	"pandas.tests.io.parser.test_textreader" -> "numpy" [];
	"pandas.tests.io.parser.test_textreader" -> "pytest" [];
	"pandas.tests.io.parser.test_textreader" -> "pandas" [];
	"pandas.tests.io.parser.test_skiprows" -> "datetime" [];
	"pandas.tests.io.parser.test_skiprows" -> "io" [];
	"pandas.tests.io.parser.test_skiprows" -> "numpy" [];
	"pandas.tests.io.parser.test_skiprows" -> "pytest" [];
	"pandas.tests.io.parser.test_skiprows" -> "pandas" [];
	"pandas.tests.io.parser.test_read_fwf" -> "datetime" [];
	"pandas.tests.io.parser.test_read_fwf" -> "io" [];
	"pandas.tests.io.parser.test_read_fwf" -> "pathlib" [];
	"pandas.tests.io.parser.test_read_fwf" -> "numpy" [];
	"pandas.tests.io.parser.test_read_fwf" -> "pytest" [];
	"pandas.tests.io.parser.test_read_fwf" -> "pandas" [];
	"pandas.tests.io.parser.test_quoting" -> "csv" [];
	"pandas.tests.io.parser.test_quoting" -> "io" [];
	"pandas.tests.io.parser.test_quoting" -> "pytest" [];
	"pandas.tests.io.parser.test_quoting" -> "pandas" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "__future__" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "csv" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "io" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "typing" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "numpy" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "pytest" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "pandas" [];
	"pandas.tests.io.parser.test_parse_dates" -> "datetime" [];
	"pandas.tests.io.parser.test_parse_dates" -> "io" [];
	"pandas.tests.io.parser.test_parse_dates" -> "numpy" [];
	"pandas.tests.io.parser.test_parse_dates" -> "pytest" [];
	"pandas.tests.io.parser.test_parse_dates" -> "pytz" [];
	"pandas.tests.io.parser.test_parse_dates" -> "pandas" [];
	"pandas.tests.io.parser.test_network" -> "io" [];
	"pandas.tests.io.parser.test_network" -> "logging" [];
	"pandas.tests.io.parser.test_network" -> "re" [];
	"pandas.tests.io.parser.test_network" -> "numpy" [];
	"pandas.tests.io.parser.test_network" -> "pytest" [];
	"pandas.tests.io.parser.test_network" -> "pandas" [];
	"pandas.tests.io.parser.test_network" -> "botocore" [];
	"pandas.tests.io.parser.test_na_values" -> "io" [];
	"pandas.tests.io.parser.test_na_values" -> "numpy" [];
	"pandas.tests.io.parser.test_na_values" -> "pytest" [];
	"pandas.tests.io.parser.test_na_values" -> "pandas" [];
	"pandas.tests.io.parser.test_multi_thread" -> "contextlib" [];
	"pandas.tests.io.parser.test_multi_thread" -> "io" [];
	"pandas.tests.io.parser.test_multi_thread" -> "numpy" [];
	"pandas.tests.io.parser.test_multi_thread" -> "pytest" [];
	"pandas.tests.io.parser.test_multi_thread" -> "pandas" [];
	"pandas.tests.io.parser.test_mangle_dupes" -> "io" [];
	"pandas.tests.io.parser.test_mangle_dupes" -> "pytest" [];
	"pandas.tests.io.parser.test_mangle_dupes" -> "pandas" [];
	"pandas.tests.io.parser.test_index_col" -> "io" [];
	"pandas.tests.io.parser.test_index_col" -> "numpy" [];
	"pandas.tests.io.parser.test_index_col" -> "pytest" [];
	"pandas.tests.io.parser.test_index_col" -> "pandas" [];
	"pandas.tests.io.parser.test_header" -> "collections" [];
	"pandas.tests.io.parser.test_header" -> "io" [];
	"pandas.tests.io.parser.test_header" -> "numpy" [];
	"pandas.tests.io.parser.test_header" -> "pytest" [];
	"pandas.tests.io.parser.test_header" -> "pandas" [];
	"pandas.tests.io.parser.test_encoding" -> "io" [];
	"pandas.tests.io.parser.test_encoding" -> "os" [];
	"pandas.tests.io.parser.test_encoding" -> "tempfile" [];
	"pandas.tests.io.parser.test_encoding" -> "uuid" [];
	"pandas.tests.io.parser.test_encoding" -> "numpy" [];
	"pandas.tests.io.parser.test_encoding" -> "pytest" [];
	"pandas.tests.io.parser.test_encoding" -> "pandas" [];
	"pandas.tests.io.parser.test_dialect" -> "csv" [];
	"pandas.tests.io.parser.test_dialect" -> "io" [];
	"pandas.tests.io.parser.test_dialect" -> "pytest" [];
	"pandas.tests.io.parser.test_dialect" -> "pandas" [];
	"pandas.tests.io.parser.test_converters" -> "io" [];
	"pandas.tests.io.parser.test_converters" -> "numpy" [];
	"pandas.tests.io.parser.test_converters" -> "pytest" [];
	"pandas.tests.io.parser.test_converters" -> "pandas" [];
	"pandas.tests.io.parser.test_concatenate_chunks" -> "numpy" [];
	"pandas.tests.io.parser.test_concatenate_chunks" -> "pytest" [];
	"pandas.tests.io.parser.test_compression" -> "os" [];
	"pandas.tests.io.parser.test_compression" -> "pathlib" [];
	"pandas.tests.io.parser.test_compression" -> "tarfile" [];
	"pandas.tests.io.parser.test_compression" -> "zipfile" [];
	"pandas.tests.io.parser.test_compression" -> "pytest" [];
	"pandas.tests.io.parser.test_compression" -> "pandas" [];
	"pandas.tests.io.parser.test_comment" -> "io" [];
	"pandas.tests.io.parser.test_comment" -> "numpy" [];
	"pandas.tests.io.parser.test_comment" -> "pytest" [];
	"pandas.tests.io.parser.test_comment" -> "pandas" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "decimal" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "io" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "mmap" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "os" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "tarfile" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "numpy" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "pytest" [];
	"pandas.tests.io.parser.test_c_parser_only" -> "pandas" [];
	"pandas.tests.io.parser.dtypes.test_empty" -> "io" [];
	"pandas.tests.io.parser.dtypes.test_empty" -> "numpy" [];
	"pandas.tests.io.parser.dtypes.test_empty" -> "pytest" [];
	"pandas.tests.io.parser.dtypes.test_empty" -> "pandas" [];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" -> "collections" [];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" -> "io" [];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" -> "numpy" [];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" -> "pytest" [];
	"pandas.tests.io.parser.dtypes.test_dtypes_basic" -> "pandas" [];
	"pandas.tests.io.parser.dtypes.test_categorical" -> "io" [];
	"pandas.tests.io.parser.dtypes.test_categorical" -> "os" [];
	"pandas.tests.io.parser.dtypes.test_categorical" -> "numpy" [];
	"pandas.tests.io.parser.dtypes.test_categorical" -> "pytest" [];
	"pandas.tests.io.parser.dtypes.test_categorical" -> "pandas" [];
	"pandas.tests.io.parser.conftest" -> "__future__" [];
	"pandas.tests.io.parser.conftest" -> "os" [];
	"pandas.tests.io.parser.conftest" -> "pytest" [];
	"pandas.tests.io.parser.conftest" -> "pandas" [];
	"pandas.tests.io.parser.conftest" -> "pyarrow" [];
	"pandas.tests.io.parser.common.test_verbose" -> "io" [];
	"pandas.tests.io.parser.common.test_verbose" -> "pytest" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "codecs" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "csv" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "io" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "os" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "pathlib" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "numpy" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "pytest" [];
	"pandas.tests.io.parser.common.test_read_errors" -> "pandas" [];
	"pandas.tests.io.parser.common.test_iterator" -> "io" [];
	"pandas.tests.io.parser.common.test_iterator" -> "pytest" [];
	"pandas.tests.io.parser.common.test_iterator" -> "pandas" [];
	"pandas.tests.io.parser.common.test_ints" -> "io" [];
	"pandas.tests.io.parser.common.test_ints" -> "numpy" [];
	"pandas.tests.io.parser.common.test_ints" -> "pytest" [];
	"pandas.tests.io.parser.common.test_ints" -> "pandas" [];
	"pandas.tests.io.parser.common.test_inf" -> "io" [];
	"pandas.tests.io.parser.common.test_inf" -> "numpy" [];
	"pandas.tests.io.parser.common.test_inf" -> "pytest" [];
	"pandas.tests.io.parser.common.test_inf" -> "pandas" [];
	"pandas.tests.io.parser.common.test_index" -> "datetime" [];
	"pandas.tests.io.parser.common.test_index" -> "io" [];
	"pandas.tests.io.parser.common.test_index" -> "os" [];
	"pandas.tests.io.parser.common.test_index" -> "pytest" [];
	"pandas.tests.io.parser.common.test_index" -> "pandas" [];
	"pandas.tests.io.parser.common.test_float" -> "io" [];
	"pandas.tests.io.parser.common.test_float" -> "numpy" [];
	"pandas.tests.io.parser.common.test_float" -> "pytest" [];
	"pandas.tests.io.parser.common.test_float" -> "pandas" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "io" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "os" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "platform" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "uuid" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "numpy" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "pytest" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "pandas" [];
	"pandas.tests.io.parser.common.test_decimal" -> "io" [];
	"pandas.tests.io.parser.common.test_decimal" -> "pytest" [];
	"pandas.tests.io.parser.common.test_decimal" -> "pandas" [];
	"pandas.tests.io.parser.common.test_data_list" -> "csv" [];
	"pandas.tests.io.parser.common.test_data_list" -> "io" [];
	"pandas.tests.io.parser.common.test_data_list" -> "pytest" [];
	"pandas.tests.io.parser.common.test_data_list" -> "pandas" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "datetime" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "inspect" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "io" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "os" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "pathlib" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "sys" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "numpy" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "pytest" [];
	"pandas.tests.io.parser.common.test_common_basic" -> "pandas" [];
	"pandas.tests.io.parser.common.test_chunksize" -> "io" [];
	"pandas.tests.io.parser.common.test_chunksize" -> "numpy" [];
	"pandas.tests.io.parser.common.test_chunksize" -> "pytest" [];
	"pandas.tests.io.parser.common.test_chunksize" -> "pandas" [];
	"pandas.tests.io.json.test_ujson" -> "calendar" [];
	"pandas.tests.io.json.test_ujson" -> "datetime" [];
	"pandas.tests.io.json.test_ujson" -> "decimal" [];
	"pandas.tests.io.json.test_ujson" -> "json" [];
	"pandas.tests.io.json.test_ujson" -> "locale" [];
	"pandas.tests.io.json.test_ujson" -> "math" [];
	"pandas.tests.io.json.test_ujson" -> "re" [];
	"pandas.tests.io.json.test_ujson" -> "time" [];
	"pandas.tests.io.json.test_ujson" -> "dateutil" [];
	"pandas.tests.io.json.test_ujson" -> "numpy" [];
	"pandas.tests.io.json.test_ujson" -> "pytest" [];
	"pandas.tests.io.json.test_ujson" -> "pytz" [];
	"pandas.tests.io.json.test_ujson" -> "pandas" [];
	"pandas.tests.io.json.test_readlines" -> "io" [];
	"pandas.tests.io.json.test_readlines" -> "pathlib" [];
	"pandas.tests.io.json.test_readlines" -> "numpy" [];
	"pandas.tests.io.json.test_readlines" -> "pytest" [];
	"pandas.tests.io.json.test_readlines" -> "pandas" [];
	"pandas.tests.io.json.test_pandas" -> "datetime" [];
	"pandas.tests.io.json.test_pandas" -> "decimal" [];
	"pandas.tests.io.json.test_pandas" -> "io" [];
	"pandas.tests.io.json.test_pandas" -> "json" [];
	"pandas.tests.io.json.test_pandas" -> "os" [];
	"pandas.tests.io.json.test_pandas" -> "sys" [];
	"pandas.tests.io.json.test_pandas" -> "time" [];
	"pandas.tests.io.json.test_pandas" -> "numpy" [];
	"pandas.tests.io.json.test_pandas" -> "pytest" [];
	"pandas.tests.io.json.test_pandas" -> "pandas" [];
	"pandas.tests.io.json.test_normalize" -> "json" [];
	"pandas.tests.io.json.test_normalize" -> "numpy" [];
	"pandas.tests.io.json.test_normalize" -> "pytest" [];
	"pandas.tests.io.json.test_normalize" -> "pandas" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "collections" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "datetime" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "decimal" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "io" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "json" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "pytest" [];
	"pandas.tests.io.json.test_json_table_schema_ext_dtype" -> "pandas" [];
	"pandas.tests.io.json.test_json_table_schema" -> "collections" [];
	"pandas.tests.io.json.test_json_table_schema" -> "io" [];
	"pandas.tests.io.json.test_json_table_schema" -> "json" [];
	"pandas.tests.io.json.test_json_table_schema" -> "numpy" [];
	"pandas.tests.io.json.test_json_table_schema" -> "pytest" [];
	"pandas.tests.io.json.test_json_table_schema" -> "pandas" [];
	"pandas.tests.io.json.test_deprecated_kwargs" -> "io" [];
	"pandas.tests.io.json.test_deprecated_kwargs" -> "pandas" [];
	"pandas.tests.io.json.test_compression" -> "io" [];
	"pandas.tests.io.json.test_compression" -> "pytest" [];
	"pandas.tests.io.json.test_compression" -> "pandas" [];
	"pandas.tests.io.json.conftest" -> "pytest" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "datetime" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "os" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "pickle" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "platform" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "sys" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "numpy" [];
	"pandas.tests.io.generate_legacy_storage_files" -> "pandas" [];
	"pandas.tests.io.formats.test_to_string" -> "datetime" [];
	"pandas.tests.io.formats.test_to_string" -> "io" [];
	"pandas.tests.io.formats.test_to_string" -> "re" [];
	"pandas.tests.io.formats.test_to_string" -> "sys" [];
	"pandas.tests.io.formats.test_to_string" -> "textwrap" [];
	"pandas.tests.io.formats.test_to_string" -> "numpy" [];
	"pandas.tests.io.formats.test_to_string" -> "pytest" [];
	"pandas.tests.io.formats.test_to_string" -> "pandas" [];
	"pandas.tests.io.formats.test_to_markdown" -> "io" [];
	"pandas.tests.io.formats.test_to_markdown" -> "pytest" [];
	"pandas.tests.io.formats.test_to_markdown" -> "pandas" [];
	"pandas.tests.io.formats.test_to_latex" -> "datetime" [];
	"pandas.tests.io.formats.test_to_latex" -> "textwrap" [];
	"pandas.tests.io.formats.test_to_latex" -> "pytest" [];
	"pandas.tests.io.formats.test_to_latex" -> "pandas" [];
	"pandas.tests.io.formats.test_to_html" -> "datetime" [];
	"pandas.tests.io.formats.test_to_html" -> "io" [];
	"pandas.tests.io.formats.test_to_html" -> "itertools" [];
	"pandas.tests.io.formats.test_to_html" -> "re" [];
	"pandas.tests.io.formats.test_to_html" -> "textwrap" [];
	"pandas.tests.io.formats.test_to_html" -> "numpy" [];
	"pandas.tests.io.formats.test_to_html" -> "pytest" [];
	"pandas.tests.io.formats.test_to_html" -> "pandas" [];
	"pandas.tests.io.formats.test_to_excel" -> "string" [];
	"pandas.tests.io.formats.test_to_excel" -> "pytest" [];
	"pandas.tests.io.formats.test_to_csv" -> "io" [];
	"pandas.tests.io.formats.test_to_csv" -> "os" [];
	"pandas.tests.io.formats.test_to_csv" -> "sys" [];
	"pandas.tests.io.formats.test_to_csv" -> "zipfile" [];
	"pandas.tests.io.formats.test_to_csv" -> "_csv" [];
	"pandas.tests.io.formats.test_to_csv" -> "numpy" [];
	"pandas.tests.io.formats.test_to_csv" -> "pytest" [];
	"pandas.tests.io.formats.test_to_csv" -> "pandas" [];
	"pandas.tests.io.formats.test_printing" -> "string" [];
	"pandas.tests.io.formats.test_ipython_compat" -> "numpy" [];
	"pandas.tests.io.formats.test_ipython_compat" -> "pandas" [];
	"pandas.tests.io.formats.test_format" -> "datetime" [];
	"pandas.tests.io.formats.test_format" -> "io" [];
	"pandas.tests.io.formats.test_format" -> "pathlib" [];
	"pandas.tests.io.formats.test_format" -> "re" [];
	"pandas.tests.io.formats.test_format" -> "shutil" [];
	"pandas.tests.io.formats.test_format" -> "numpy" [];
	"pandas.tests.io.formats.test_format" -> "pytest" [];
	"pandas.tests.io.formats.test_format" -> "pandas" [];
	"pandas.tests.io.formats.test_eng_formatting" -> "numpy" [];
	"pandas.tests.io.formats.test_eng_formatting" -> "pytest" [];
	"pandas.tests.io.formats.test_eng_formatting" -> "pandas" [];
	"pandas.tests.io.formats.test_css" -> "pytest" [];
	"pandas.tests.io.formats.test_console" -> "locale" [];
	"pandas.tests.io.formats.test_console" -> "pytest" [];
	"pandas.tests.io.formats.style.test_tooltip" -> "numpy" [];
	"pandas.tests.io.formats.style.test_tooltip" -> "pytest" [];
	"pandas.tests.io.formats.style.test_tooltip" -> "pandas" [];
	"pandas.tests.io.formats.style.test_to_string" -> "textwrap" [];
	"pandas.tests.io.formats.style.test_to_string" -> "pytest" [];
	"pandas.tests.io.formats.style.test_to_string" -> "pandas" [];
	"pandas.tests.io.formats.style.test_to_latex" -> "textwrap" [];
	"pandas.tests.io.formats.style.test_to_latex" -> "numpy" [];
	"pandas.tests.io.formats.style.test_to_latex" -> "pytest" [];
	"pandas.tests.io.formats.style.test_to_latex" -> "pandas" [];
	"pandas.tests.io.formats.style.test_style" -> "contextlib" [];
	"pandas.tests.io.formats.style.test_style" -> "copy" [];
	"pandas.tests.io.formats.style.test_style" -> "re" [];
	"pandas.tests.io.formats.style.test_style" -> "textwrap" [];
	"pandas.tests.io.formats.style.test_style" -> "numpy" [];
	"pandas.tests.io.formats.style.test_style" -> "pytest" [];
	"pandas.tests.io.formats.style.test_style" -> "pandas" [];
	"pandas.tests.io.formats.style.test_non_unique" -> "textwrap" [];
	"pandas.tests.io.formats.style.test_non_unique" -> "pytest" [];
	"pandas.tests.io.formats.style.test_non_unique" -> "pandas" [];
	"pandas.tests.io.formats.style.test_matplotlib" -> "gc" [];
	"pandas.tests.io.formats.style.test_matplotlib" -> "numpy" [];
	"pandas.tests.io.formats.style.test_matplotlib" -> "pytest" [];
	"pandas.tests.io.formats.style.test_matplotlib" -> "pandas" [];
	"pandas.tests.io.formats.style.test_matplotlib" -> "matplotlib" [];
	"pandas.tests.io.formats.style.test_html" -> "textwrap" [];
	"pandas.tests.io.formats.style.test_html" -> "numpy" [];
	"pandas.tests.io.formats.style.test_html" -> "pytest" [];
	"pandas.tests.io.formats.style.test_html" -> "pandas" [];
	"pandas.tests.io.formats.style.test_highlight" -> "numpy" [];
	"pandas.tests.io.formats.style.test_highlight" -> "pytest" [];
	"pandas.tests.io.formats.style.test_highlight" -> "pandas" [];
	"pandas.tests.io.formats.style.test_format" -> "numpy" [];
	"pandas.tests.io.formats.style.test_format" -> "pytest" [];
	"pandas.tests.io.formats.style.test_format" -> "pandas" [];
	"pandas.tests.io.formats.style.test_exceptions" -> "pytest" [];
	"pandas.tests.io.formats.style.test_exceptions" -> "pandas" [];
	"pandas.tests.io.formats.style.test_bar" -> "io" [];
	"pandas.tests.io.formats.style.test_bar" -> "numpy" [];
	"pandas.tests.io.formats.style.test_bar" -> "pytest" [];
	"pandas.tests.io.formats.style.test_bar" -> "pandas" [];
	"pandas.tests.io.excel.test_xlsxwriter" -> "contextlib" [];
	"pandas.tests.io.excel.test_xlsxwriter" -> "pytest" [];
	"pandas.tests.io.excel.test_xlsxwriter" -> "pandas" [];
	"pandas.tests.io.excel.test_xlrd" -> "io" [];
	"pandas.tests.io.excel.test_xlrd" -> "numpy" [];
	"pandas.tests.io.excel.test_xlrd" -> "pytest" [];
	"pandas.tests.io.excel.test_xlrd" -> "pandas" [];
	"pandas.tests.io.excel.test_xlrd" -> "'xlrd.biffh'" [];
	"pandas.tests.io.excel.test_writers" -> "datetime" [];
	"pandas.tests.io.excel.test_writers" -> "functools" [];
	"pandas.tests.io.excel.test_writers" -> "io" [];
	"pandas.tests.io.excel.test_writers" -> "os" [];
	"pandas.tests.io.excel.test_writers" -> "re" [];
	"pandas.tests.io.excel.test_writers" -> "numpy" [];
	"pandas.tests.io.excel.test_writers" -> "pytest" [];
	"pandas.tests.io.excel.test_writers" -> "pandas" [];
	"pandas.tests.io.excel.test_style" -> "contextlib" [];
	"pandas.tests.io.excel.test_style" -> "time" [];
	"pandas.tests.io.excel.test_style" -> "numpy" [];
	"pandas.tests.io.excel.test_style" -> "pytest" [];
	"pandas.tests.io.excel.test_style" -> "pandas" [];
	"pandas.tests.io.excel.test_readers" -> "__future__" [];
	"pandas.tests.io.excel.test_readers" -> "datetime" [];
	"pandas.tests.io.excel.test_readers" -> "functools" [];
	"pandas.tests.io.excel.test_readers" -> "io" [];
	"pandas.tests.io.excel.test_readers" -> "os" [];
	"pandas.tests.io.excel.test_readers" -> "pathlib" [];
	"pandas.tests.io.excel.test_readers" -> "platform" [];
	"pandas.tests.io.excel.test_readers" -> "re" [];
	"pandas.tests.io.excel.test_readers" -> "zipfile" [];
	"pandas.tests.io.excel.test_readers" -> "numpy" [];
	"pandas.tests.io.excel.test_readers" -> "pytest" [];
	"pandas.tests.io.excel.test_readers" -> "pandas" [];
	"pandas.tests.io.excel.test_readers" -> "pyarrow" [];
	"pandas.tests.io.excel.test_readers" -> "xlrd" [];
	"pandas.tests.io.excel.test_readers" -> "python_calamine" [];
	"pandas.tests.io.excel.test_readers" -> "s3fs" [];
	"pandas.tests.io.excel.test_readers" -> "py" [];
	"pandas.tests.io.excel.test_openpyxl" -> "contextlib" [];
	"pandas.tests.io.excel.test_openpyxl" -> "pathlib" [];
	"pandas.tests.io.excel.test_openpyxl" -> "re" [];
	"pandas.tests.io.excel.test_openpyxl" -> "numpy" [];
	"pandas.tests.io.excel.test_openpyxl" -> "pytest" [];
	"pandas.tests.io.excel.test_openpyxl" -> "pandas" [];
	"pandas.tests.io.excel.test_openpyxl" -> "openpyxl" [];
	"pandas.tests.io.excel.test_odswriter" -> "datetime" [];
	"pandas.tests.io.excel.test_odswriter" -> "re" [];
	"pandas.tests.io.excel.test_odswriter" -> "pytest" [];
	"pandas.tests.io.excel.test_odswriter" -> "pandas" [];
	"pandas.tests.io.excel.test_odswriter" -> "'odf.namespaces'" [];
	"pandas.tests.io.excel.test_odswriter" -> "'odf.table'" [];
	"pandas.tests.io.excel.test_odf" -> "functools" [];
	"pandas.tests.io.excel.test_odf" -> "numpy" [];
	"pandas.tests.io.excel.test_odf" -> "pytest" [];
	"pandas.tests.io.excel.test_odf" -> "pandas" [];
	"pandas.tests.io.conftest" -> "shlex" [];
	"pandas.tests.io.conftest" -> "subprocess" [];
	"pandas.tests.io.conftest" -> "time" [];
	"pandas.tests.io.conftest" -> "uuid" [];
	"pandas.tests.io.conftest" -> "pytest" [];
	"pandas.tests.io.conftest" -> "boto3" [];
	"pandas.tests.internals.test_managers" -> "os" [];
	"pandas.tests.internals.test_managers" -> "subprocess" [];
	"pandas.tests.internals.test_managers" -> "sys" [];
	"pandas.tests.internals.test_managers" -> "pytest" [];
	"pandas.tests.internals.test_managers" -> "pandas" [];
	"pandas.tests.internals.test_internals" -> "datetime" [];
	"pandas.tests.internals.test_internals" -> "itertools" [];
	"pandas.tests.internals.test_internals" -> "re" [];
	"pandas.tests.internals.test_internals" -> "numpy" [];
	"pandas.tests.internals.test_internals" -> "pytest" [];
	"pandas.tests.internals.test_internals" -> "pandas" [];
	"pandas.tests.internals.test_api" -> "pytest" [];
	"pandas.tests.internals.test_api" -> "pandas" [];
	"pandas.tests.interchange.test_utils" -> "numpy" [];
	"pandas.tests.interchange.test_utils" -> "pytest" [];
	"pandas.tests.interchange.test_utils" -> "pandas" [];
	"pandas.tests.interchange.test_spec_conformance" -> "ctypes" [];
	"pandas.tests.interchange.test_spec_conformance" -> "math" [];
	"pandas.tests.interchange.test_spec_conformance" -> "pytest" [];
	"pandas.tests.interchange.test_spec_conformance" -> "pandas" [];
	"pandas.tests.interchange.test_impl" -> "datetime" [];
	"pandas.tests.interchange.test_impl" -> "numpy" [];
	"pandas.tests.interchange.test_impl" -> "pytest" [];
	"pandas.tests.interchange.test_impl" -> "pandas" [];
	"pandas.tests.interchange.test_impl" -> "'pyarrow.interchange'" [];
	"pandas.tests.interchange.test_impl" -> "'pyarrow.compute'" [];
	"pandas.tests.indexing.test_scalar" -> "datetime" [];
	"pandas.tests.indexing.test_scalar" -> "itertools" [];
	"pandas.tests.indexing.test_scalar" -> "numpy" [];
	"pandas.tests.indexing.test_scalar" -> "pytest" [];
	"pandas.tests.indexing.test_scalar" -> "pandas" [];
	"pandas.tests.indexing.test_partial" -> "numpy" [];
	"pandas.tests.indexing.test_partial" -> "pytest" [];
	"pandas.tests.indexing.test_partial" -> "pandas" [];
	"pandas.tests.indexing.test_na_indexing" -> "pytest" [];
	"pandas.tests.indexing.test_na_indexing" -> "pandas" [];
	"pandas.tests.indexing.test_loc" -> "collections" [];
	"pandas.tests.indexing.test_loc" -> "contextlib" [];
	"pandas.tests.indexing.test_loc" -> "datetime" [];
	"pandas.tests.indexing.test_loc" -> "re" [];
	"pandas.tests.indexing.test_loc" -> "numpy" [];
	"pandas.tests.indexing.test_loc" -> "pytest" [];
	"pandas.tests.indexing.test_loc" -> "pandas" [];
	"pandas.tests.indexing.test_indexing" -> "array" [];
	"pandas.tests.indexing.test_indexing" -> "datetime" [];
	"pandas.tests.indexing.test_indexing" -> "re" [];
	"pandas.tests.indexing.test_indexing" -> "weakref" [];
	"pandas.tests.indexing.test_indexing" -> "numpy" [];
	"pandas.tests.indexing.test_indexing" -> "pytest" [];
	"pandas.tests.indexing.test_indexing" -> "pandas" [];
	"pandas.tests.indexing.test_indexers" -> "numpy" [];
	"pandas.tests.indexing.test_indexers" -> "pytest" [];
	"pandas.tests.indexing.test_iloc" -> "datetime" [];
	"pandas.tests.indexing.test_iloc" -> "re" [];
	"pandas.tests.indexing.test_iloc" -> "numpy" [];
	"pandas.tests.indexing.test_iloc" -> "pytest" [];
	"pandas.tests.indexing.test_iloc" -> "pandas" [];
	"pandas.tests.indexing.test_iat" -> "numpy" [];
	"pandas.tests.indexing.test_iat" -> "pandas" [];
	"pandas.tests.indexing.test_floats" -> "numpy" [];
	"pandas.tests.indexing.test_floats" -> "pytest" [];
	"pandas.tests.indexing.test_floats" -> "pandas" [];
	"pandas.tests.indexing.test_datetime" -> "re" [];
	"pandas.tests.indexing.test_datetime" -> "pytest" [];
	"pandas.tests.indexing.test_datetime" -> "pandas" [];
	"pandas.tests.indexing.test_coercion" -> "__future__" [];
	"pandas.tests.indexing.test_coercion" -> "datetime" [];
	"pandas.tests.indexing.test_coercion" -> "itertools" [];
	"pandas.tests.indexing.test_coercion" -> "numpy" [];
	"pandas.tests.indexing.test_coercion" -> "pytest" [];
	"pandas.tests.indexing.test_coercion" -> "pandas" [];
	"pandas.tests.indexing.test_check_indexer" -> "numpy" [];
	"pandas.tests.indexing.test_check_indexer" -> "pytest" [];
	"pandas.tests.indexing.test_check_indexer" -> "pandas" [];
	"pandas.tests.indexing.test_chaining_and_caching" -> "string" [];
	"pandas.tests.indexing.test_chaining_and_caching" -> "numpy" [];
	"pandas.tests.indexing.test_chaining_and_caching" -> "pytest" [];
	"pandas.tests.indexing.test_chaining_and_caching" -> "pandas" [];
	"pandas.tests.indexing.test_categorical" -> "re" [];
	"pandas.tests.indexing.test_categorical" -> "numpy" [];
	"pandas.tests.indexing.test_categorical" -> "pytest" [];
	"pandas.tests.indexing.test_categorical" -> "pandas" [];
	"pandas.tests.indexing.test_at" -> "datetime" [];
	"pandas.tests.indexing.test_at" -> "numpy" [];
	"pandas.tests.indexing.test_at" -> "pytest" [];
	"pandas.tests.indexing.test_at" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_sorted" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_sorted" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_sorted" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_slice" -> "datetime" [];
	"pandas.tests.indexing.multiindex.test_slice" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_slice" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_slice" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_setitem" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_setitem" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_setitem" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_partial" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_partial" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_partial" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_multiindex" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_multiindex" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_multiindex" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_loc" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_loc" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_loc" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_indexing_slow" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_indexing_slow" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_indexing_slow" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_iloc" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_iloc" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_iloc" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_getitem" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_getitem" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_getitem" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_datetime" -> "datetime" [];
	"pandas.tests.indexing.multiindex.test_datetime" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_datetime" -> "pandas" [];
	"pandas.tests.indexing.multiindex.test_chaining_and_caching" -> "numpy" [];
	"pandas.tests.indexing.multiindex.test_chaining_and_caching" -> "pytest" [];
	"pandas.tests.indexing.multiindex.test_chaining_and_caching" -> "pandas" [];
	"pandas.tests.indexing.interval.test_interval_new" -> "re" [];
	"pandas.tests.indexing.interval.test_interval_new" -> "numpy" [];
	"pandas.tests.indexing.interval.test_interval_new" -> "pytest" [];
	"pandas.tests.indexing.interval.test_interval_new" -> "pandas" [];
	"pandas.tests.indexing.interval.test_interval" -> "numpy" [];
	"pandas.tests.indexing.interval.test_interval" -> "pytest" [];
	"pandas.tests.indexing.interval.test_interval" -> "pandas" [];
	"pandas.tests.indexing.conftest" -> "numpy" [];
	"pandas.tests.indexing.conftest" -> "pytest" [];
	"pandas.tests.indexing.conftest" -> "pandas" [];
	"pandas.tests.indexing.common" -> "__future__" [];
	"pandas.tests.indexing.common" -> "typing" [];
	"pandas.tests.indexes.timedeltas.test_timedelta_range" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_timedelta_range" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_timedelta_range" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_timedelta" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_timedelta" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_timedelta" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_setops" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_setops" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_setops" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_searchsorted" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_searchsorted" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_searchsorted" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_scalar_compat" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_scalar_compat" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_scalar_compat" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_ops" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_join" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_join" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_indexing" -> "datetime" [];
	"pandas.tests.indexes.timedeltas.test_indexing" -> "re" [];
	"pandas.tests.indexes.timedeltas.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_freq_attr" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_freq_attr" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_formats" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_formats" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_delete" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_constructors" -> "datetime" [];
	"pandas.tests.indexes.timedeltas.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.test_arithmetic" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.test_arithmetic" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_shift" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.methods.test_shift" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_repeat" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.methods.test_repeat" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_insert" -> "datetime" [];
	"pandas.tests.indexes.timedeltas.methods.test_insert" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.methods.test_insert" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.methods.test_insert" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_fillna" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_factorize" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.methods.test_factorize" -> "pandas" [];
	"pandas.tests.indexes.timedeltas.methods.test_astype" -> "datetime" [];
	"pandas.tests.indexes.timedeltas.methods.test_astype" -> "numpy" [];
	"pandas.tests.indexes.timedeltas.methods.test_astype" -> "pytest" [];
	"pandas.tests.indexes.timedeltas.methods.test_astype" -> "pandas" [];
	"pandas.tests.indexes.test_subclass" -> "numpy" [];
	"pandas.tests.indexes.test_subclass" -> "pandas" [];
	"pandas.tests.indexes.test_setops" -> "datetime" [];
	"pandas.tests.indexes.test_setops" -> "operator" [];
	"pandas.tests.indexes.test_setops" -> "numpy" [];
	"pandas.tests.indexes.test_setops" -> "pytest" [];
	"pandas.tests.indexes.test_setops" -> "pandas" [];
	"pandas.tests.indexes.test_old_base" -> "__future__" [];
	"pandas.tests.indexes.test_old_base" -> "datetime" [];
	"pandas.tests.indexes.test_old_base" -> "weakref" [];
	"pandas.tests.indexes.test_old_base" -> "numpy" [];
	"pandas.tests.indexes.test_old_base" -> "pytest" [];
	"pandas.tests.indexes.test_old_base" -> "pandas" [];
	"pandas.tests.indexes.test_numpy_compat" -> "numpy" [];
	"pandas.tests.indexes.test_numpy_compat" -> "pytest" [];
	"pandas.tests.indexes.test_numpy_compat" -> "pandas" [];
	"pandas.tests.indexes.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.test_indexing" -> "enum" [];
	"pandas.tests.indexes.test_index_new" -> "datetime" [];
	"pandas.tests.indexes.test_index_new" -> "decimal" [];
	"pandas.tests.indexes.test_index_new" -> "numpy" [];
	"pandas.tests.indexes.test_index_new" -> "pytest" [];
	"pandas.tests.indexes.test_index_new" -> "pandas" [];
	"pandas.tests.indexes.test_frozen" -> "re" [];
	"pandas.tests.indexes.test_frozen" -> "pytest" [];
	"pandas.tests.indexes.test_engines" -> "re" [];
	"pandas.tests.indexes.test_engines" -> "numpy" [];
	"pandas.tests.indexes.test_engines" -> "pytest" [];
	"pandas.tests.indexes.test_engines" -> "pandas" [];
	"pandas.tests.indexes.test_datetimelike" -> "numpy" [];
	"pandas.tests.indexes.test_datetimelike" -> "pytest" [];
	"pandas.tests.indexes.test_datetimelike" -> "pandas" [];
	"pandas.tests.indexes.test_common" -> "copy" [];
	"pandas.tests.indexes.test_common" -> "re" [];
	"pandas.tests.indexes.test_common" -> "numpy" [];
	"pandas.tests.indexes.test_common" -> "pytest" [];
	"pandas.tests.indexes.test_common" -> "pandas" [];
	"pandas.tests.indexes.test_base" -> "collections" [];
	"pandas.tests.indexes.test_base" -> "datetime" [];
	"pandas.tests.indexes.test_base" -> "functools" [];
	"pandas.tests.indexes.test_base" -> "math" [];
	"pandas.tests.indexes.test_base" -> "operator" [];
	"pandas.tests.indexes.test_base" -> "re" [];
	"pandas.tests.indexes.test_base" -> "numpy" [];
	"pandas.tests.indexes.test_base" -> "pytest" [];
	"pandas.tests.indexes.test_base" -> "pandas" [];
	"pandas.tests.indexes.test_base" -> "'IPython.core'" [];
	"pandas.tests.indexes.test_base" -> "pyarrow" [];
	"pandas.tests.indexes.test_any_index" -> "re" [];
	"pandas.tests.indexes.test_any_index" -> "numpy" [];
	"pandas.tests.indexes.test_any_index" -> "pytest" [];
	"pandas.tests.indexes.string.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.string.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.string.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.string.test_astype" -> "pandas" [];
	"pandas.tests.indexes.ranges.test_setops" -> "datetime" [];
	"pandas.tests.indexes.ranges.test_setops" -> "hypothesis" [];
	"pandas.tests.indexes.ranges.test_setops" -> "numpy" [];
	"pandas.tests.indexes.ranges.test_setops" -> "pytest" [];
	"pandas.tests.indexes.ranges.test_setops" -> "pandas" [];
	"pandas.tests.indexes.ranges.test_range" -> "numpy" [];
	"pandas.tests.indexes.ranges.test_range" -> "pytest" [];
	"pandas.tests.indexes.ranges.test_range" -> "pandas" [];
	"pandas.tests.indexes.ranges.test_join" -> "numpy" [];
	"pandas.tests.indexes.ranges.test_join" -> "pandas" [];
	"pandas.tests.indexes.ranges.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.ranges.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.ranges.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.ranges.test_constructors" -> "datetime" [];
	"pandas.tests.indexes.ranges.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.ranges.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.ranges.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.period.test_tools" -> "numpy" [];
	"pandas.tests.indexes.period.test_tools" -> "pytest" [];
	"pandas.tests.indexes.period.test_tools" -> "pandas" [];
	"pandas.tests.indexes.period.test_setops" -> "numpy" [];
	"pandas.tests.indexes.period.test_setops" -> "pytest" [];
	"pandas.tests.indexes.period.test_setops" -> "pandas" [];
	"pandas.tests.indexes.period.test_searchsorted" -> "numpy" [];
	"pandas.tests.indexes.period.test_searchsorted" -> "pytest" [];
	"pandas.tests.indexes.period.test_searchsorted" -> "pandas" [];
	"pandas.tests.indexes.period.test_scalar_compat" -> "pytest" [];
	"pandas.tests.indexes.period.test_scalar_compat" -> "pandas" [];
	"pandas.tests.indexes.period.test_resolution" -> "pytest" [];
	"pandas.tests.indexes.period.test_resolution" -> "pandas" [];
	"pandas.tests.indexes.period.test_pickle" -> "numpy" [];
	"pandas.tests.indexes.period.test_pickle" -> "pytest" [];
	"pandas.tests.indexes.period.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.period.test_period_range" -> "numpy" [];
	"pandas.tests.indexes.period.test_period_range" -> "pytest" [];
	"pandas.tests.indexes.period.test_period_range" -> "pandas" [];
	"pandas.tests.indexes.period.test_period" -> "numpy" [];
	"pandas.tests.indexes.period.test_period" -> "pytest" [];
	"pandas.tests.indexes.period.test_period" -> "pandas" [];
	"pandas.tests.indexes.period.test_partial_slicing" -> "numpy" [];
	"pandas.tests.indexes.period.test_partial_slicing" -> "pytest" [];
	"pandas.tests.indexes.period.test_partial_slicing" -> "pandas" [];
	"pandas.tests.indexes.period.test_monotonic" -> "pandas" [];
	"pandas.tests.indexes.period.test_join" -> "numpy" [];
	"pandas.tests.indexes.period.test_join" -> "pytest" [];
	"pandas.tests.indexes.period.test_join" -> "pandas" [];
	"pandas.tests.indexes.period.test_indexing" -> "datetime" [];
	"pandas.tests.indexes.period.test_indexing" -> "re" [];
	"pandas.tests.indexes.period.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.period.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.period.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.period.test_freq_attr" -> "pytest" [];
	"pandas.tests.indexes.period.test_freq_attr" -> "pandas" [];
	"pandas.tests.indexes.period.test_formats" -> "contextlib" [];
	"pandas.tests.indexes.period.test_formats" -> "datetime" [];
	"pandas.tests.indexes.period.test_formats" -> "locale" [];
	"pandas.tests.indexes.period.test_formats" -> "numpy" [];
	"pandas.tests.indexes.period.test_formats" -> "pytest" [];
	"pandas.tests.indexes.period.test_formats" -> "pandas" [];
	"pandas.tests.indexes.period.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.period.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.period.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_to_timestamp" -> "datetime" [];
	"pandas.tests.indexes.period.methods.test_to_timestamp" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_to_timestamp" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_to_timestamp" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_shift" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_shift" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_shift" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_repeat" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_repeat" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_repeat" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_is_full" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_is_full" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_insert" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_insert" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_insert" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_fillna" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_factorize" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_factorize" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_astype" -> "numpy" [];
	"pandas.tests.indexes.period.methods.test_astype" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_astype" -> "pandas" [];
	"pandas.tests.indexes.period.methods.test_asfreq" -> "re" [];
	"pandas.tests.indexes.period.methods.test_asfreq" -> "pytest" [];
	"pandas.tests.indexes.period.methods.test_asfreq" -> "pandas" [];
	"pandas.tests.indexes.object.test_indexing" -> "decimal" [];
	"pandas.tests.indexes.object.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.object.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.object.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.object.test_astype" -> "pytest" [];
	"pandas.tests.indexes.object.test_astype" -> "pandas" [];
	"pandas.tests.indexes.numeric.test_setops" -> "datetime" [];
	"pandas.tests.indexes.numeric.test_setops" -> "numpy" [];
	"pandas.tests.indexes.numeric.test_setops" -> "pytest" [];
	"pandas.tests.indexes.numeric.test_numeric" -> "numpy" [];
	"pandas.tests.indexes.numeric.test_numeric" -> "pytest" [];
	"pandas.tests.indexes.numeric.test_numeric" -> "pandas" [];
	"pandas.tests.indexes.numeric.test_join" -> "numpy" [];
	"pandas.tests.indexes.numeric.test_join" -> "pytest" [];
	"pandas.tests.indexes.numeric.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.numeric.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.numeric.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.numeric.test_astype" -> "numpy" [];
	"pandas.tests.indexes.numeric.test_astype" -> "pytest" [];
	"pandas.tests.indexes.numeric.test_astype" -> "pandas" [];
	"pandas.tests.indexes.multi.test_take" -> "numpy" [];
	"pandas.tests.indexes.multi.test_take" -> "pytest" [];
	"pandas.tests.indexes.multi.test_take" -> "pandas" [];
	"pandas.tests.indexes.multi.test_sorting" -> "numpy" [];
	"pandas.tests.indexes.multi.test_sorting" -> "pytest" [];
	"pandas.tests.indexes.multi.test_sorting" -> "pandas" [];
	"pandas.tests.indexes.multi.test_setops" -> "numpy" [];
	"pandas.tests.indexes.multi.test_setops" -> "pytest" [];
	"pandas.tests.indexes.multi.test_setops" -> "pandas" [];
	"pandas.tests.indexes.multi.test_reshape" -> "datetime" [];
	"pandas.tests.indexes.multi.test_reshape" -> "numpy" [];
	"pandas.tests.indexes.multi.test_reshape" -> "pytest" [];
	"pandas.tests.indexes.multi.test_reshape" -> "pytz" [];
	"pandas.tests.indexes.multi.test_reshape" -> "pandas" [];
	"pandas.tests.indexes.multi.test_reindex" -> "numpy" [];
	"pandas.tests.indexes.multi.test_reindex" -> "pytest" [];
	"pandas.tests.indexes.multi.test_reindex" -> "pandas" [];
	"pandas.tests.indexes.multi.test_pickle" -> "pytest" [];
	"pandas.tests.indexes.multi.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.multi.test_partial_indexing" -> "numpy" [];
	"pandas.tests.indexes.multi.test_partial_indexing" -> "pytest" [];
	"pandas.tests.indexes.multi.test_partial_indexing" -> "pandas" [];
	"pandas.tests.indexes.multi.test_names" -> "pytest" [];
	"pandas.tests.indexes.multi.test_names" -> "pandas" [];
	"pandas.tests.indexes.multi.test_monotonic" -> "numpy" [];
	"pandas.tests.indexes.multi.test_monotonic" -> "pytest" [];
	"pandas.tests.indexes.multi.test_monotonic" -> "pandas" [];
	"pandas.tests.indexes.multi.test_missing" -> "numpy" [];
	"pandas.tests.indexes.multi.test_missing" -> "pytest" [];
	"pandas.tests.indexes.multi.test_missing" -> "pandas" [];
	"pandas.tests.indexes.multi.test_lexsort" -> "pandas" [];
	"pandas.tests.indexes.multi.test_join" -> "numpy" [];
	"pandas.tests.indexes.multi.test_join" -> "pytest" [];
	"pandas.tests.indexes.multi.test_join" -> "pandas" [];
	"pandas.tests.indexes.multi.test_isin" -> "numpy" [];
	"pandas.tests.indexes.multi.test_isin" -> "pytest" [];
	"pandas.tests.indexes.multi.test_isin" -> "pandas" [];
	"pandas.tests.indexes.multi.test_integrity" -> "re" [];
	"pandas.tests.indexes.multi.test_integrity" -> "numpy" [];
	"pandas.tests.indexes.multi.test_integrity" -> "pytest" [];
	"pandas.tests.indexes.multi.test_integrity" -> "pandas" [];
	"pandas.tests.indexes.multi.test_indexing" -> "datetime" [];
	"pandas.tests.indexes.multi.test_indexing" -> "re" [];
	"pandas.tests.indexes.multi.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.multi.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.multi.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.multi.test_get_set" -> "numpy" [];
	"pandas.tests.indexes.multi.test_get_set" -> "pytest" [];
	"pandas.tests.indexes.multi.test_get_set" -> "pandas" [];
	"pandas.tests.indexes.multi.test_get_level_values" -> "numpy" [];
	"pandas.tests.indexes.multi.test_get_level_values" -> "pandas" [];
	"pandas.tests.indexes.multi.test_formats" -> "numpy" [];
	"pandas.tests.indexes.multi.test_formats" -> "pytest" [];
	"pandas.tests.indexes.multi.test_formats" -> "pandas" [];
	"pandas.tests.indexes.multi.test_equivalence" -> "numpy" [];
	"pandas.tests.indexes.multi.test_equivalence" -> "pytest" [];
	"pandas.tests.indexes.multi.test_equivalence" -> "pandas" [];
	"pandas.tests.indexes.multi.test_duplicates" -> "itertools" [];
	"pandas.tests.indexes.multi.test_duplicates" -> "numpy" [];
	"pandas.tests.indexes.multi.test_duplicates" -> "pytest" [];
	"pandas.tests.indexes.multi.test_duplicates" -> "pandas" [];
	"pandas.tests.indexes.multi.test_drop" -> "numpy" [];
	"pandas.tests.indexes.multi.test_drop" -> "pytest" [];
	"pandas.tests.indexes.multi.test_drop" -> "pandas" [];
	"pandas.tests.indexes.multi.test_copy" -> "copy" [];
	"pandas.tests.indexes.multi.test_copy" -> "pytest" [];
	"pandas.tests.indexes.multi.test_copy" -> "pandas" [];
	"pandas.tests.indexes.multi.test_conversion" -> "numpy" [];
	"pandas.tests.indexes.multi.test_conversion" -> "pytest" [];
	"pandas.tests.indexes.multi.test_conversion" -> "pandas" [];
	"pandas.tests.indexes.multi.test_constructors" -> "datetime" [];
	"pandas.tests.indexes.multi.test_constructors" -> "itertools" [];
	"pandas.tests.indexes.multi.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.multi.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.multi.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.multi.test_compat" -> "numpy" [];
	"pandas.tests.indexes.multi.test_compat" -> "pytest" [];
	"pandas.tests.indexes.multi.test_compat" -> "pandas" [];
	"pandas.tests.indexes.multi.test_astype" -> "numpy" [];
	"pandas.tests.indexes.multi.test_astype" -> "pytest" [];
	"pandas.tests.indexes.multi.test_analytics" -> "numpy" [];
	"pandas.tests.indexes.multi.test_analytics" -> "pytest" [];
	"pandas.tests.indexes.multi.test_analytics" -> "pandas" [];
	"pandas.tests.indexes.multi.conftest" -> "numpy" [];
	"pandas.tests.indexes.multi.conftest" -> "pytest" [];
	"pandas.tests.indexes.multi.conftest" -> "pandas" [];
	"pandas.tests.indexes.interval.test_setops" -> "numpy" [];
	"pandas.tests.indexes.interval.test_setops" -> "pytest" [];
	"pandas.tests.indexes.interval.test_setops" -> "pandas" [];
	"pandas.tests.indexes.interval.test_pickle" -> "pytest" [];
	"pandas.tests.indexes.interval.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.interval.test_join" -> "pytest" [];
	"pandas.tests.indexes.interval.test_join" -> "pandas" [];
	"pandas.tests.indexes.interval.test_interval_tree" -> "itertools" [];
	"pandas.tests.indexes.interval.test_interval_tree" -> "numpy" [];
	"pandas.tests.indexes.interval.test_interval_tree" -> "pytest" [];
	"pandas.tests.indexes.interval.test_interval_range" -> "datetime" [];
	"pandas.tests.indexes.interval.test_interval_range" -> "numpy" [];
	"pandas.tests.indexes.interval.test_interval_range" -> "pytest" [];
	"pandas.tests.indexes.interval.test_interval_range" -> "pandas" [];
	"pandas.tests.indexes.interval.test_interval" -> "itertools" [];
	"pandas.tests.indexes.interval.test_interval" -> "re" [];
	"pandas.tests.indexes.interval.test_interval" -> "numpy" [];
	"pandas.tests.indexes.interval.test_interval" -> "pytest" [];
	"pandas.tests.indexes.interval.test_interval" -> "pandas" [];
	"pandas.tests.indexes.interval.test_indexing" -> "re" [];
	"pandas.tests.indexes.interval.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.interval.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.interval.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.interval.test_formats" -> "numpy" [];
	"pandas.tests.indexes.interval.test_formats" -> "pytest" [];
	"pandas.tests.indexes.interval.test_formats" -> "pandas" [];
	"pandas.tests.indexes.interval.test_equals" -> "numpy" [];
	"pandas.tests.indexes.interval.test_equals" -> "pandas" [];
	"pandas.tests.indexes.interval.test_constructors" -> "functools" [];
	"pandas.tests.indexes.interval.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.interval.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.interval.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.interval.test_astype" -> "re" [];
	"pandas.tests.indexes.interval.test_astype" -> "numpy" [];
	"pandas.tests.indexes.interval.test_astype" -> "pytest" [];
	"pandas.tests.indexes.interval.test_astype" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_setops" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_setops" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_setops" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_setops" -> "pytz" [];
	"pandas.tests.indexes.datetimes.test_setops" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "calendar" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "locale" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "unicodedata" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_scalar_compat" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_reindex" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_reindex" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_reindex" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_pickle" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_partial_slicing" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_partial_slicing" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_partial_slicing" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_partial_slicing" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_ops" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_ops" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_ops" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_npfuncs" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_npfuncs" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_join" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_join" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_join" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_join" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_iter" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_iter" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_iter" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_indexing" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_freq_attr" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_freq_attr" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "pytz" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_datetime" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_datetime" -> "re" [];
	"pandas.tests.indexes.datetimes.test_datetime" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_datetime" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_datetime" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "re" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "pytz" [];
	"pandas.tests.indexes.datetimes.test_date_range" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "__future__" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "datetime" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "functools" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "operator" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "pytz" [];
	"pandas.tests.indexes.datetimes.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_arithmetic" -> "pytest" [];
	"pandas.tests.indexes.datetimes.test_arithmetic" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_unique" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_unique" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "zoneinfo" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_to_series" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_to_series" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_to_pydatetime" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_to_pydatetime" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_to_pydatetime" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_to_period" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_to_period" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_to_period" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_to_julian_date" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_to_julian_date" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_to_frame" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_snap" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_snap" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_shift" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_shift" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_shift" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_shift" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_round" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_round" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_resolution" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_resolution" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_repeat" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_repeat" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_repeat" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_normalize" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_normalize" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_normalize" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_map" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_map" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_isocalendar" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_insert" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_insert" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_insert" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_insert" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_insert" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_fillna" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_fillna" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_factorize" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_factorize" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_factorize" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_delete" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_delete" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "numpy" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "pytest" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "pytz" [];
	"pandas.tests.indexes.datetimes.methods.test_astype" -> "pandas" [];
	"pandas.tests.indexes.datetimes.methods.test_asof" -> "datetime" [];
	"pandas.tests.indexes.datetimes.methods.test_asof" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_value_counts" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_value_counts" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_sort_values" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_sort_values" -> "pytest" [];
	"pandas.tests.indexes.datetimelike_.test_sort_values" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_nat" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_nat" -> "pytest" [];
	"pandas.tests.indexes.datetimelike_.test_nat" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_is_monotonic" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.datetimelike_.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_equals" -> "datetime" [];
	"pandas.tests.indexes.datetimelike_.test_equals" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_equals" -> "pytest" [];
	"pandas.tests.indexes.datetimelike_.test_equals" -> "pandas" [];
	"pandas.tests.indexes.datetimelike_.test_drop_duplicates" -> "numpy" [];
	"pandas.tests.indexes.datetimelike_.test_drop_duplicates" -> "pytest" [];
	"pandas.tests.indexes.datetimelike_.test_drop_duplicates" -> "pandas" [];
	"pandas.tests.indexes.conftest" -> "numpy" [];
	"pandas.tests.indexes.conftest" -> "pytest" [];
	"pandas.tests.indexes.conftest" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_setops" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_setops" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_setops" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_reindex" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_reindex" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_reindex" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_map" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_map" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_map" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_formats" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_formats" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_fillna" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_fillna" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_fillna" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_equals" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_equals" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_equals" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_constructors" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_category" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_category" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_category" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_astype" -> "datetime" [];
	"pandas.tests.indexes.categorical.test_astype" -> "numpy" [];
	"pandas.tests.indexes.categorical.test_astype" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_astype" -> "pandas" [];
	"pandas.tests.indexes.categorical.test_append" -> "pytest" [];
	"pandas.tests.indexes.categorical.test_append" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_where" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_where" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_setops" -> "datetime" [];
	"pandas.tests.indexes.base_class.test_setops" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_setops" -> "pytest" [];
	"pandas.tests.indexes.base_class.test_setops" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_reshape" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_reshape" -> "pytest" [];
	"pandas.tests.indexes.base_class.test_reshape" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_pickle" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_indexing" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_indexing" -> "pytest" [];
	"pandas.tests.indexes.base_class.test_indexing" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_formats" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_formats" -> "pytest" [];
	"pandas.tests.indexes.base_class.test_formats" -> "pandas" [];
	"pandas.tests.indexes.base_class.test_constructors" -> "numpy" [];
	"pandas.tests.indexes.base_class.test_constructors" -> "pytest" [];
	"pandas.tests.indexes.base_class.test_constructors" -> "pandas" [];
	"pandas.tests.groupby.transform.test_transform" -> "numpy" [];
	"pandas.tests.groupby.transform.test_transform" -> "pytest" [];
	"pandas.tests.groupby.transform.test_transform" -> "pandas" [];
	"pandas.tests.groupby.transform.test_numba" -> "numpy" [];
	"pandas.tests.groupby.transform.test_numba" -> "pytest" [];
	"pandas.tests.groupby.transform.test_numba" -> "pandas" [];
	"pandas.tests.groupby.transform.test_numba" -> "numba" [];
	"pandas.tests.groupby.test_timegrouper" -> "datetime" [];
	"pandas.tests.groupby.test_timegrouper" -> "numpy" [];
	"pandas.tests.groupby.test_timegrouper" -> "pytest" [];
	"pandas.tests.groupby.test_timegrouper" -> "pytz" [];
	"pandas.tests.groupby.test_timegrouper" -> "pandas" [];
	"pandas.tests.groupby.test_reductions" -> "builtins" [];
	"pandas.tests.groupby.test_reductions" -> "datetime" [];
	"pandas.tests.groupby.test_reductions" -> "string" [];
	"pandas.tests.groupby.test_reductions" -> "numpy" [];
	"pandas.tests.groupby.test_reductions" -> "pytest" [];
	"pandas.tests.groupby.test_reductions" -> "pandas" [];
	"pandas.tests.groupby.test_reductions" -> "'scipy.stats'" [];
	"pandas.tests.groupby.test_raises" -> "datetime" [];
	"pandas.tests.groupby.test_raises" -> "re" [];
	"pandas.tests.groupby.test_raises" -> "numpy" [];
	"pandas.tests.groupby.test_raises" -> "pytest" [];
	"pandas.tests.groupby.test_raises" -> "pandas" [];
	"pandas.tests.groupby.test_pipe" -> "numpy" [];
	"pandas.tests.groupby.test_pipe" -> "pandas" [];
	"pandas.tests.groupby.test_numeric_only" -> "re" [];
	"pandas.tests.groupby.test_numeric_only" -> "numpy" [];
	"pandas.tests.groupby.test_numeric_only" -> "pytest" [];
	"pandas.tests.groupby.test_numeric_only" -> "pandas" [];
	"pandas.tests.groupby.test_numba" -> "pytest" [];
	"pandas.tests.groupby.test_numba" -> "pandas" [];
	"pandas.tests.groupby.test_missing" -> "numpy" [];
	"pandas.tests.groupby.test_missing" -> "pytest" [];
	"pandas.tests.groupby.test_missing" -> "pandas" [];
	"pandas.tests.groupby.test_libgroupby" -> "numpy" [];
	"pandas.tests.groupby.test_libgroupby" -> "pytest" [];
	"pandas.tests.groupby.test_libgroupby" -> "pandas" [];
	"pandas.tests.groupby.test_indexing" -> "numpy" [];
	"pandas.tests.groupby.test_indexing" -> "pytest" [];
	"pandas.tests.groupby.test_indexing" -> "pandas" [];
	"pandas.tests.groupby.test_index_as_string" -> "numpy" [];
	"pandas.tests.groupby.test_index_as_string" -> "pytest" [];
	"pandas.tests.groupby.test_index_as_string" -> "pandas" [];
	"pandas.tests.groupby.test_grouping" -> "datetime" [];
	"pandas.tests.groupby.test_grouping" -> "numpy" [];
	"pandas.tests.groupby.test_grouping" -> "pytest" [];
	"pandas.tests.groupby.test_grouping" -> "pandas" [];
	"pandas.tests.groupby.test_groupby_subclass" -> "datetime" [];
	"pandas.tests.groupby.test_groupby_subclass" -> "numpy" [];
	"pandas.tests.groupby.test_groupby_subclass" -> "pytest" [];
	"pandas.tests.groupby.test_groupby_subclass" -> "pandas" [];
	"pandas.tests.groupby.test_groupby_dropna" -> "numpy" [];
	"pandas.tests.groupby.test_groupby_dropna" -> "pytest" [];
	"pandas.tests.groupby.test_groupby_dropna" -> "pandas" [];
	"pandas.tests.groupby.test_groupby" -> "datetime" [];
	"pandas.tests.groupby.test_groupby" -> "decimal" [];
	"pandas.tests.groupby.test_groupby" -> "re" [];
	"pandas.tests.groupby.test_groupby" -> "numpy" [];
	"pandas.tests.groupby.test_groupby" -> "pytest" [];
	"pandas.tests.groupby.test_groupby" -> "pandas" [];
	"pandas.tests.groupby.test_filters" -> "string" [];
	"pandas.tests.groupby.test_filters" -> "numpy" [];
	"pandas.tests.groupby.test_filters" -> "pytest" [];
	"pandas.tests.groupby.test_filters" -> "pandas" [];
	"pandas.tests.groupby.test_cumulative" -> "numpy" [];
	"pandas.tests.groupby.test_cumulative" -> "pytest" [];
	"pandas.tests.groupby.test_cumulative" -> "pandas" [];
	"pandas.tests.groupby.test_counting" -> "itertools" [];
	"pandas.tests.groupby.test_counting" -> "string" [];
	"pandas.tests.groupby.test_counting" -> "numpy" [];
	"pandas.tests.groupby.test_counting" -> "pytest" [];
	"pandas.tests.groupby.test_counting" -> "pandas" [];
	"pandas.tests.groupby.test_categorical" -> "datetime" [];
	"pandas.tests.groupby.test_categorical" -> "numpy" [];
	"pandas.tests.groupby.test_categorical" -> "pytest" [];
	"pandas.tests.groupby.test_categorical" -> "pandas" [];
	"pandas.tests.groupby.test_bin_groupby" -> "numpy" [];
	"pandas.tests.groupby.test_bin_groupby" -> "pytest" [];
	"pandas.tests.groupby.test_bin_groupby" -> "pandas" [];
	"pandas.tests.groupby.test_apply_mutate" -> "numpy" [];
	"pandas.tests.groupby.test_apply_mutate" -> "pandas" [];
	"pandas.tests.groupby.test_apply" -> "datetime" [];
	"pandas.tests.groupby.test_apply" -> "numpy" [];
	"pandas.tests.groupby.test_apply" -> "pytest" [];
	"pandas.tests.groupby.test_apply" -> "pandas" [];
	"pandas.tests.groupby.test_api" -> "inspect" [];
	"pandas.tests.groupby.test_api" -> "pytest" [];
	"pandas.tests.groupby.test_api" -> "pandas" [];
	"pandas.tests.groupby.test_all_methods" -> "pytest" [];
	"pandas.tests.groupby.test_all_methods" -> "pandas" [];
	"pandas.tests.groupby.methods.test_value_counts" -> "numpy" [];
	"pandas.tests.groupby.methods.test_value_counts" -> "pytest" [];
	"pandas.tests.groupby.methods.test_value_counts" -> "pandas" [];
	"pandas.tests.groupby.methods.test_skew" -> "numpy" [];
	"pandas.tests.groupby.methods.test_skew" -> "pandas" [];
	"pandas.tests.groupby.methods.test_size" -> "numpy" [];
	"pandas.tests.groupby.methods.test_size" -> "pytest" [];
	"pandas.tests.groupby.methods.test_size" -> "pandas" [];
	"pandas.tests.groupby.methods.test_sample" -> "pytest" [];
	"pandas.tests.groupby.methods.test_sample" -> "pandas" [];
	"pandas.tests.groupby.methods.test_rank" -> "datetime" [];
	"pandas.tests.groupby.methods.test_rank" -> "numpy" [];
	"pandas.tests.groupby.methods.test_rank" -> "pytest" [];
	"pandas.tests.groupby.methods.test_rank" -> "pandas" [];
	"pandas.tests.groupby.methods.test_quantile" -> "numpy" [];
	"pandas.tests.groupby.methods.test_quantile" -> "pytest" [];
	"pandas.tests.groupby.methods.test_quantile" -> "pandas" [];
	"pandas.tests.groupby.methods.test_nth" -> "numpy" [];
	"pandas.tests.groupby.methods.test_nth" -> "pytest" [];
	"pandas.tests.groupby.methods.test_nth" -> "pandas" [];
	"pandas.tests.groupby.methods.test_nlargest_nsmallest" -> "numpy" [];
	"pandas.tests.groupby.methods.test_nlargest_nsmallest" -> "pytest" [];
	"pandas.tests.groupby.methods.test_nlargest_nsmallest" -> "pandas" [];
	"pandas.tests.groupby.methods.test_is_monotonic" -> "numpy" [];
	"pandas.tests.groupby.methods.test_is_monotonic" -> "pytest" [];
	"pandas.tests.groupby.methods.test_is_monotonic" -> "pandas" [];
	"pandas.tests.groupby.methods.test_groupby_shift_diff" -> "numpy" [];
	"pandas.tests.groupby.methods.test_groupby_shift_diff" -> "pytest" [];
	"pandas.tests.groupby.methods.test_groupby_shift_diff" -> "pandas" [];
	"pandas.tests.groupby.methods.test_describe" -> "numpy" [];
	"pandas.tests.groupby.methods.test_describe" -> "pytest" [];
	"pandas.tests.groupby.methods.test_describe" -> "pandas" [];
	"pandas.tests.groupby.methods.test_corrwith" -> "numpy" [];
	"pandas.tests.groupby.methods.test_corrwith" -> "pandas" [];
	"pandas.tests.groupby.conftest" -> "numpy" [];
	"pandas.tests.groupby.conftest" -> "pytest" [];
	"pandas.tests.groupby.conftest" -> "pandas" [];
	"pandas.tests.groupby.aggregate.test_other" -> "datetime" [];
	"pandas.tests.groupby.aggregate.test_other" -> "functools" [];
	"pandas.tests.groupby.aggregate.test_other" -> "numpy" [];
	"pandas.tests.groupby.aggregate.test_other" -> "pytest" [];
	"pandas.tests.groupby.aggregate.test_other" -> "pandas" [];
	"pandas.tests.groupby.aggregate.test_numba" -> "numpy" [];
	"pandas.tests.groupby.aggregate.test_numba" -> "pytest" [];
	"pandas.tests.groupby.aggregate.test_numba" -> "pandas" [];
	"pandas.tests.groupby.aggregate.test_numba" -> "numba" [];
	"pandas.tests.groupby.aggregate.test_cython" -> "numpy" [];
	"pandas.tests.groupby.aggregate.test_cython" -> "pytest" [];
	"pandas.tests.groupby.aggregate.test_cython" -> "pandas" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "datetime" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "functools" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "re" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "numpy" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "pytest" [];
	"pandas.tests.groupby.aggregate.test_aggregate" -> "pandas" [];
	"pandas.tests.generic.test_to_xarray" -> "numpy" [];
	"pandas.tests.generic.test_to_xarray" -> "pytest" [];
	"pandas.tests.generic.test_to_xarray" -> "pandas" [];
	"pandas.tests.generic.test_to_xarray" -> "xarray" [];
	"pandas.tests.generic.test_series" -> "operator" [];
	"pandas.tests.generic.test_series" -> "numpy" [];
	"pandas.tests.generic.test_series" -> "pytest" [];
	"pandas.tests.generic.test_series" -> "pandas" [];
	"pandas.tests.generic.test_label_or_level_utils" -> "pytest" [];
	"pandas.tests.generic.test_label_or_level_utils" -> "pandas" [];
	"pandas.tests.generic.test_generic" -> "copy" [];
	"pandas.tests.generic.test_generic" -> "numpy" [];
	"pandas.tests.generic.test_generic" -> "pytest" [];
	"pandas.tests.generic.test_generic" -> "pandas" [];
	"pandas.tests.generic.test_frame" -> "copy" [];
	"pandas.tests.generic.test_frame" -> "operator" [];
	"pandas.tests.generic.test_frame" -> "numpy" [];
	"pandas.tests.generic.test_frame" -> "pytest" [];
	"pandas.tests.generic.test_frame" -> "pandas" [];
	"pandas.tests.generic.test_finalize" -> "operator" [];
	"pandas.tests.generic.test_finalize" -> "re" [];
	"pandas.tests.generic.test_finalize" -> "numpy" [];
	"pandas.tests.generic.test_finalize" -> "pytest" [];
	"pandas.tests.generic.test_finalize" -> "pandas" [];
	"pandas.tests.generic.test_duplicate_labels" -> "operator" [];
	"pandas.tests.generic.test_duplicate_labels" -> "numpy" [];
	"pandas.tests.generic.test_duplicate_labels" -> "pytest" [];
	"pandas.tests.generic.test_duplicate_labels" -> "pandas" [];
	"pandas.tests.frame.test_validate" -> "pytest" [];
	"pandas.tests.frame.test_unary" -> "decimal" [];
	"pandas.tests.frame.test_unary" -> "numpy" [];
	"pandas.tests.frame.test_unary" -> "pytest" [];
	"pandas.tests.frame.test_unary" -> "pandas" [];
	"pandas.tests.frame.test_ufunc" -> "functools" [];
	"pandas.tests.frame.test_ufunc" -> "re" [];
	"pandas.tests.frame.test_ufunc" -> "numpy" [];
	"pandas.tests.frame.test_ufunc" -> "pytest" [];
	"pandas.tests.frame.test_ufunc" -> "pandas" [];
	"pandas.tests.frame.test_subclass" -> "numpy" [];
	"pandas.tests.frame.test_subclass" -> "pytest" [];
	"pandas.tests.frame.test_subclass" -> "pandas" [];
	"pandas.tests.frame.test_stack_unstack" -> "datetime" [];
	"pandas.tests.frame.test_stack_unstack" -> "itertools" [];
	"pandas.tests.frame.test_stack_unstack" -> "re" [];
	"pandas.tests.frame.test_stack_unstack" -> "numpy" [];
	"pandas.tests.frame.test_stack_unstack" -> "pytest" [];
	"pandas.tests.frame.test_stack_unstack" -> "pandas" [];
	"pandas.tests.frame.test_repr" -> "datetime" [];
	"pandas.tests.frame.test_repr" -> "io" [];
	"pandas.tests.frame.test_repr" -> "numpy" [];
	"pandas.tests.frame.test_repr" -> "pytest" [];
	"pandas.tests.frame.test_repr" -> "pandas" [];
	"pandas.tests.frame.test_reductions" -> "datetime" [];
	"pandas.tests.frame.test_reductions" -> "decimal" [];
	"pandas.tests.frame.test_reductions" -> "re" [];
	"pandas.tests.frame.test_reductions" -> "numpy" [];
	"pandas.tests.frame.test_reductions" -> "pytest" [];
	"pandas.tests.frame.test_reductions" -> "pandas" [];
	"pandas.tests.frame.test_query_eval" -> "operator" [];
	"pandas.tests.frame.test_query_eval" -> "numpy" [];
	"pandas.tests.frame.test_query_eval" -> "pytest" [];
	"pandas.tests.frame.test_query_eval" -> "pandas" [];
	"pandas.tests.frame.test_npfuncs" -> "numpy" [];
	"pandas.tests.frame.test_npfuncs" -> "pandas" [];
	"pandas.tests.frame.test_nonunique_indexes" -> "numpy" [];
	"pandas.tests.frame.test_nonunique_indexes" -> "pytest" [];
	"pandas.tests.frame.test_nonunique_indexes" -> "pandas" [];
	"pandas.tests.frame.test_logical_ops" -> "operator" [];
	"pandas.tests.frame.test_logical_ops" -> "re" [];
	"pandas.tests.frame.test_logical_ops" -> "numpy" [];
	"pandas.tests.frame.test_logical_ops" -> "pytest" [];
	"pandas.tests.frame.test_logical_ops" -> "pandas" [];
	"pandas.tests.frame.test_iteration" -> "datetime" [];
	"pandas.tests.frame.test_iteration" -> "numpy" [];
	"pandas.tests.frame.test_iteration" -> "pytest" [];
	"pandas.tests.frame.test_iteration" -> "pandas" [];
	"pandas.tests.frame.test_cumulative" -> "numpy" [];
	"pandas.tests.frame.test_cumulative" -> "pytest" [];
	"pandas.tests.frame.test_cumulative" -> "pandas" [];
	"pandas.tests.frame.test_constructors" -> "array" [];
	"pandas.tests.frame.test_constructors" -> "collections" [];
	"pandas.tests.frame.test_constructors" -> "dataclasses" [];
	"pandas.tests.frame.test_constructors" -> "datetime" [];
	"pandas.tests.frame.test_constructors" -> "functools" [];
	"pandas.tests.frame.test_constructors" -> "re" [];
	"pandas.tests.frame.test_constructors" -> "numpy" [];
	"pandas.tests.frame.test_constructors" -> "pytest" [];
	"pandas.tests.frame.test_constructors" -> "pytz" [];
	"pandas.tests.frame.test_constructors" -> "pandas" [];
	"pandas.tests.frame.test_block_internals" -> "datetime" [];
	"pandas.tests.frame.test_block_internals" -> "itertools" [];
	"pandas.tests.frame.test_block_internals" -> "numpy" [];
	"pandas.tests.frame.test_block_internals" -> "pytest" [];
	"pandas.tests.frame.test_block_internals" -> "pandas" [];
	"pandas.tests.frame.test_arrow_interface" -> "ctypes" [];
	"pandas.tests.frame.test_arrow_interface" -> "pytest" [];
	"pandas.tests.frame.test_arrow_interface" -> "pandas" [];
	"pandas.tests.frame.test_arithmetic" -> "collections" [];
	"pandas.tests.frame.test_arithmetic" -> "datetime" [];
	"pandas.tests.frame.test_arithmetic" -> "enum" [];
	"pandas.tests.frame.test_arithmetic" -> "functools" [];
	"pandas.tests.frame.test_arithmetic" -> "operator" [];
	"pandas.tests.frame.test_arithmetic" -> "re" [];
	"pandas.tests.frame.test_arithmetic" -> "numpy" [];
	"pandas.tests.frame.test_arithmetic" -> "pytest" [];
	"pandas.tests.frame.test_arithmetic" -> "pandas" [];
	"pandas.tests.frame.common" -> "__future__" [];
	"pandas.tests.frame.common" -> "typing" [];
	"pandas.tests.frame.common" -> "pandas" [];
	"pandas.tests.frame.test_api" -> "copy" [];
	"pandas.tests.frame.test_api" -> "inspect" [];
	"pandas.tests.frame.test_api" -> "pydoc" [];
	"pandas.tests.frame.test_api" -> "numpy" [];
	"pandas.tests.frame.test_api" -> "pytest" [];
	"pandas.tests.frame.test_api" -> "pandas" [];
	"pandas.tests.frame.test_api" -> "'IPython.core'" [];
	"pandas.tests.frame.test_alter_axes" -> "datetime" [];
	"pandas.tests.frame.test_alter_axes" -> "pytz" [];
	"pandas.tests.frame.test_alter_axes" -> "pandas" [];
	"pandas.tests.frame.methods.test_values" -> "numpy" [];
	"pandas.tests.frame.methods.test_values" -> "pytest" [];
	"pandas.tests.frame.methods.test_values" -> "pandas" [];
	"pandas.tests.frame.methods.test_value_counts" -> "numpy" [];
	"pandas.tests.frame.methods.test_value_counts" -> "pytest" [];
	"pandas.tests.frame.methods.test_value_counts" -> "pandas" [];
	"pandas.tests.frame.methods.test_update" -> "numpy" [];
	"pandas.tests.frame.methods.test_update" -> "pytest" [];
	"pandas.tests.frame.methods.test_update" -> "pandas" [];
	"pandas.tests.frame.methods.test_tz_localize" -> "datetime" [];
	"pandas.tests.frame.methods.test_tz_localize" -> "numpy" [];
	"pandas.tests.frame.methods.test_tz_localize" -> "pytest" [];
	"pandas.tests.frame.methods.test_tz_localize" -> "pandas" [];
	"pandas.tests.frame.methods.test_tz_convert" -> "numpy" [];
	"pandas.tests.frame.methods.test_tz_convert" -> "pytest" [];
	"pandas.tests.frame.methods.test_tz_convert" -> "pandas" [];
	"pandas.tests.frame.methods.test_truncate" -> "numpy" [];
	"pandas.tests.frame.methods.test_truncate" -> "pytest" [];
	"pandas.tests.frame.methods.test_truncate" -> "pandas" [];
	"pandas.tests.frame.methods.test_transpose" -> "numpy" [];
	"pandas.tests.frame.methods.test_transpose" -> "pytest" [];
	"pandas.tests.frame.methods.test_transpose" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_timestamp" -> "datetime" [];
	"pandas.tests.frame.methods.test_to_timestamp" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_timestamp" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_timestamp" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_records" -> "collections" [];
	"pandas.tests.frame.methods.test_to_records" -> "email" [];
	"pandas.tests.frame.methods.test_to_records" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_records" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_records" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_period" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_period" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_period" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_numpy" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_numpy" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_numpy" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_dict_of_blocks" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_dict_of_blocks" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_dict_of_blocks" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_dict" -> "collections" [];
	"pandas.tests.frame.methods.test_to_dict" -> "datetime" [];
	"pandas.tests.frame.methods.test_to_dict" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_dict" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_dict" -> "pytz" [];
	"pandas.tests.frame.methods.test_to_dict" -> "pandas" [];
	"pandas.tests.frame.methods.test_to_csv" -> "csv" [];
	"pandas.tests.frame.methods.test_to_csv" -> "io" [];
	"pandas.tests.frame.methods.test_to_csv" -> "os" [];
	"pandas.tests.frame.methods.test_to_csv" -> "numpy" [];
	"pandas.tests.frame.methods.test_to_csv" -> "pytest" [];
	"pandas.tests.frame.methods.test_to_csv" -> "pandas" [];
	"pandas.tests.frame.methods.test_swaplevel" -> "pytest" [];
	"pandas.tests.frame.methods.test_swaplevel" -> "pandas" [];
	"pandas.tests.frame.methods.test_swapaxes" -> "numpy" [];
	"pandas.tests.frame.methods.test_swapaxes" -> "pytest" [];
	"pandas.tests.frame.methods.test_swapaxes" -> "pandas" [];
	"pandas.tests.frame.methods.test_sort_values" -> "numpy" [];
	"pandas.tests.frame.methods.test_sort_values" -> "pytest" [];
	"pandas.tests.frame.methods.test_sort_values" -> "pandas" [];
	"pandas.tests.frame.methods.test_sort_index" -> "numpy" [];
	"pandas.tests.frame.methods.test_sort_index" -> "pytest" [];
	"pandas.tests.frame.methods.test_sort_index" -> "pandas" [];
	"pandas.tests.frame.methods.test_size" -> "numpy" [];
	"pandas.tests.frame.methods.test_size" -> "pytest" [];
	"pandas.tests.frame.methods.test_size" -> "pandas" [];
	"pandas.tests.frame.methods.test_shift" -> "numpy" [];
	"pandas.tests.frame.methods.test_shift" -> "pytest" [];
	"pandas.tests.frame.methods.test_shift" -> "pandas" [];
	"pandas.tests.frame.methods.test_set_index" -> "datetime" [];
	"pandas.tests.frame.methods.test_set_index" -> "numpy" [];
	"pandas.tests.frame.methods.test_set_index" -> "pytest" [];
	"pandas.tests.frame.methods.test_set_index" -> "pandas" [];
	"pandas.tests.frame.methods.test_set_axis" -> "numpy" [];
	"pandas.tests.frame.methods.test_set_axis" -> "pytest" [];
	"pandas.tests.frame.methods.test_set_axis" -> "pandas" [];
	"pandas.tests.frame.methods.test_select_dtypes" -> "numpy" [];
	"pandas.tests.frame.methods.test_select_dtypes" -> "pytest" [];
	"pandas.tests.frame.methods.test_select_dtypes" -> "pandas" [];
	"pandas.tests.frame.methods.test_sample" -> "numpy" [];
	"pandas.tests.frame.methods.test_sample" -> "pytest" [];
	"pandas.tests.frame.methods.test_sample" -> "pandas" [];
	"pandas.tests.frame.methods.test_round" -> "numpy" [];
	"pandas.tests.frame.methods.test_round" -> "pytest" [];
	"pandas.tests.frame.methods.test_round" -> "pandas" [];
	"pandas.tests.frame.methods.test_reset_index" -> "datetime" [];
	"pandas.tests.frame.methods.test_reset_index" -> "itertools" [];
	"pandas.tests.frame.methods.test_reset_index" -> "numpy" [];
	"pandas.tests.frame.methods.test_reset_index" -> "pytest" [];
	"pandas.tests.frame.methods.test_reset_index" -> "pandas" [];
	"pandas.tests.frame.methods.test_replace" -> "__future__" [];
	"pandas.tests.frame.methods.test_replace" -> "datetime" [];
	"pandas.tests.frame.methods.test_replace" -> "re" [];
	"pandas.tests.frame.methods.test_replace" -> "numpy" [];
	"pandas.tests.frame.methods.test_replace" -> "pytest" [];
	"pandas.tests.frame.methods.test_replace" -> "pandas" [];
	"pandas.tests.frame.methods.test_reorder_levels" -> "numpy" [];
	"pandas.tests.frame.methods.test_reorder_levels" -> "pytest" [];
	"pandas.tests.frame.methods.test_reorder_levels" -> "pandas" [];
	"pandas.tests.frame.methods.test_rename_axis" -> "numpy" [];
	"pandas.tests.frame.methods.test_rename_axis" -> "pytest" [];
	"pandas.tests.frame.methods.test_rename_axis" -> "pandas" [];
	"pandas.tests.frame.methods.test_rename" -> "collections" [];
	"pandas.tests.frame.methods.test_rename" -> "inspect" [];
	"pandas.tests.frame.methods.test_rename" -> "numpy" [];
	"pandas.tests.frame.methods.test_rename" -> "pytest" [];
	"pandas.tests.frame.methods.test_rename" -> "pandas" [];
	"pandas.tests.frame.methods.test_reindex_like" -> "numpy" [];
	"pandas.tests.frame.methods.test_reindex_like" -> "pytest" [];
	"pandas.tests.frame.methods.test_reindex_like" -> "pandas" [];
	"pandas.tests.frame.methods.test_reindex" -> "datetime" [];
	"pandas.tests.frame.methods.test_reindex" -> "inspect" [];
	"pandas.tests.frame.methods.test_reindex" -> "numpy" [];
	"pandas.tests.frame.methods.test_reindex" -> "pytest" [];
	"pandas.tests.frame.methods.test_reindex" -> "pandas" [];
	"pandas.tests.frame.methods.test_rank" -> "datetime" [];
	"pandas.tests.frame.methods.test_rank" -> "numpy" [];
	"pandas.tests.frame.methods.test_rank" -> "pytest" [];
	"pandas.tests.frame.methods.test_rank" -> "pandas" [];
	"pandas.tests.frame.methods.test_quantile" -> "numpy" [];
	"pandas.tests.frame.methods.test_quantile" -> "pytest" [];
	"pandas.tests.frame.methods.test_quantile" -> "pandas" [];
	"pandas.tests.frame.methods.test_pop" -> "numpy" [];
	"pandas.tests.frame.methods.test_pop" -> "pandas" [];
	"pandas.tests.frame.methods.test_pipe" -> "pytest" [];
	"pandas.tests.frame.methods.test_pipe" -> "pandas" [];
	"pandas.tests.frame.methods.test_pct_change" -> "numpy" [];
	"pandas.tests.frame.methods.test_pct_change" -> "pytest" [];
	"pandas.tests.frame.methods.test_pct_change" -> "pandas" [];
	"pandas.tests.frame.methods.test_nlargest" -> "string" [];
	"pandas.tests.frame.methods.test_nlargest" -> "numpy" [];
	"pandas.tests.frame.methods.test_nlargest" -> "pytest" [];
	"pandas.tests.frame.methods.test_nlargest" -> "pandas" [];
	"pandas.tests.frame.methods.test_matmul" -> "operator" [];
	"pandas.tests.frame.methods.test_matmul" -> "numpy" [];
	"pandas.tests.frame.methods.test_matmul" -> "pytest" [];
	"pandas.tests.frame.methods.test_matmul" -> "pandas" [];
	"pandas.tests.frame.methods.test_map" -> "datetime" [];
	"pandas.tests.frame.methods.test_map" -> "numpy" [];
	"pandas.tests.frame.methods.test_map" -> "pytest" [];
	"pandas.tests.frame.methods.test_map" -> "pandas" [];
	"pandas.tests.frame.methods.test_join" -> "datetime" [];
	"pandas.tests.frame.methods.test_join" -> "numpy" [];
	"pandas.tests.frame.methods.test_join" -> "pytest" [];
	"pandas.tests.frame.methods.test_join" -> "pandas" [];
	"pandas.tests.frame.methods.test_iterrows" -> "pandas" [];
	"pandas.tests.frame.methods.test_isin" -> "numpy" [];
	"pandas.tests.frame.methods.test_isin" -> "pytest" [];
	"pandas.tests.frame.methods.test_isin" -> "pandas" [];
	"pandas.tests.frame.methods.test_isetitem" -> "pytest" [];
	"pandas.tests.frame.methods.test_isetitem" -> "pandas" [];
	"pandas.tests.frame.methods.test_is_homogeneous_dtype" -> "numpy" [];
	"pandas.tests.frame.methods.test_is_homogeneous_dtype" -> "pytest" [];
	"pandas.tests.frame.methods.test_is_homogeneous_dtype" -> "pandas" [];
	"pandas.tests.frame.methods.test_interpolate" -> "numpy" [];
	"pandas.tests.frame.methods.test_interpolate" -> "pytest" [];
	"pandas.tests.frame.methods.test_interpolate" -> "pandas" [];
	"pandas.tests.frame.methods.test_info" -> "io" [];
	"pandas.tests.frame.methods.test_info" -> "re" [];
	"pandas.tests.frame.methods.test_info" -> "string" [];
	"pandas.tests.frame.methods.test_info" -> "sys" [];
	"pandas.tests.frame.methods.test_info" -> "textwrap" [];
	"pandas.tests.frame.methods.test_info" -> "numpy" [];
	"pandas.tests.frame.methods.test_info" -> "pytest" [];
	"pandas.tests.frame.methods.test_info" -> "pandas" [];
	"pandas.tests.frame.methods.test_infer_objects" -> "datetime" [];
	"pandas.tests.frame.methods.test_infer_objects" -> "pandas" [];
	"pandas.tests.frame.methods.test_head_tail" -> "numpy" [];
	"pandas.tests.frame.methods.test_head_tail" -> "pandas" [];
	"pandas.tests.frame.methods.test_get_numeric_data" -> "numpy" [];
	"pandas.tests.frame.methods.test_get_numeric_data" -> "pandas" [];
	"pandas.tests.frame.methods.test_first_valid_index" -> "numpy" [];
	"pandas.tests.frame.methods.test_first_valid_index" -> "pytest" [];
	"pandas.tests.frame.methods.test_first_valid_index" -> "pandas" [];
	"pandas.tests.frame.methods.test_first_and_last" -> "numpy" [];
	"pandas.tests.frame.methods.test_first_and_last" -> "pytest" [];
	"pandas.tests.frame.methods.test_first_and_last" -> "pandas" [];
	"pandas.tests.frame.methods.test_filter" -> "numpy" [];
	"pandas.tests.frame.methods.test_filter" -> "pytest" [];
	"pandas.tests.frame.methods.test_filter" -> "pandas" [];
	"pandas.tests.frame.methods.test_fillna" -> "numpy" [];
	"pandas.tests.frame.methods.test_fillna" -> "pytest" [];
	"pandas.tests.frame.methods.test_fillna" -> "pandas" [];
	"pandas.tests.frame.methods.test_explode" -> "re" [];
	"pandas.tests.frame.methods.test_explode" -> "numpy" [];
	"pandas.tests.frame.methods.test_explode" -> "pytest" [];
	"pandas.tests.frame.methods.test_explode" -> "pandas" [];
	"pandas.tests.frame.methods.test_equals" -> "numpy" [];
	"pandas.tests.frame.methods.test_equals" -> "pandas" [];
	"pandas.tests.frame.methods.test_duplicated" -> "re" [];
	"pandas.tests.frame.methods.test_duplicated" -> "sys" [];
	"pandas.tests.frame.methods.test_duplicated" -> "numpy" [];
	"pandas.tests.frame.methods.test_duplicated" -> "pytest" [];
	"pandas.tests.frame.methods.test_duplicated" -> "pandas" [];
	"pandas.tests.frame.methods.test_dtypes" -> "datetime" [];
	"pandas.tests.frame.methods.test_dtypes" -> "numpy" [];
	"pandas.tests.frame.methods.test_dtypes" -> "pytest" [];
	"pandas.tests.frame.methods.test_dtypes" -> "pandas" [];
	"pandas.tests.frame.methods.test_dropna" -> "datetime" [];
	"pandas.tests.frame.methods.test_dropna" -> "dateutil" [];
	"pandas.tests.frame.methods.test_dropna" -> "numpy" [];
	"pandas.tests.frame.methods.test_dropna" -> "pytest" [];
	"pandas.tests.frame.methods.test_dropna" -> "pandas" [];
	"pandas.tests.frame.methods.test_droplevel" -> "pytest" [];
	"pandas.tests.frame.methods.test_droplevel" -> "pandas" [];
	"pandas.tests.frame.methods.test_drop_duplicates" -> "datetime" [];
	"pandas.tests.frame.methods.test_drop_duplicates" -> "re" [];
	"pandas.tests.frame.methods.test_drop_duplicates" -> "numpy" [];
	"pandas.tests.frame.methods.test_drop_duplicates" -> "pytest" [];
	"pandas.tests.frame.methods.test_drop_duplicates" -> "pandas" [];
	"pandas.tests.frame.methods.test_drop" -> "re" [];
	"pandas.tests.frame.methods.test_drop" -> "numpy" [];
	"pandas.tests.frame.methods.test_drop" -> "pytest" [];
	"pandas.tests.frame.methods.test_drop" -> "pandas" [];
	"pandas.tests.frame.methods.test_dot" -> "numpy" [];
	"pandas.tests.frame.methods.test_dot" -> "pytest" [];
	"pandas.tests.frame.methods.test_dot" -> "pandas" [];
	"pandas.tests.frame.methods.test_diff" -> "numpy" [];
	"pandas.tests.frame.methods.test_diff" -> "pytest" [];
	"pandas.tests.frame.methods.test_diff" -> "pandas" [];
	"pandas.tests.frame.methods.test_describe" -> "numpy" [];
	"pandas.tests.frame.methods.test_describe" -> "pytest" [];
	"pandas.tests.frame.methods.test_describe" -> "pandas" [];
	"pandas.tests.frame.methods.test_cov_corr" -> "numpy" [];
	"pandas.tests.frame.methods.test_cov_corr" -> "pytest" [];
	"pandas.tests.frame.methods.test_cov_corr" -> "pandas" [];
	"pandas.tests.frame.methods.test_count" -> "pandas" [];
	"pandas.tests.frame.methods.test_copy" -> "numpy" [];
	"pandas.tests.frame.methods.test_copy" -> "pytest" [];
	"pandas.tests.frame.methods.test_copy" -> "pandas" [];
	"pandas.tests.frame.methods.test_convert_dtypes" -> "datetime" [];
	"pandas.tests.frame.methods.test_convert_dtypes" -> "numpy" [];
	"pandas.tests.frame.methods.test_convert_dtypes" -> "pytest" [];
	"pandas.tests.frame.methods.test_convert_dtypes" -> "pandas" [];
	"pandas.tests.frame.methods.test_compare" -> "numpy" [];
	"pandas.tests.frame.methods.test_compare" -> "pytest" [];
	"pandas.tests.frame.methods.test_compare" -> "pandas" [];
	"pandas.tests.frame.methods.test_combine_first" -> "datetime" [];
	"pandas.tests.frame.methods.test_combine_first" -> "numpy" [];
	"pandas.tests.frame.methods.test_combine_first" -> "pytest" [];
	"pandas.tests.frame.methods.test_combine_first" -> "pandas" [];
	"pandas.tests.frame.methods.test_combine" -> "numpy" [];
	"pandas.tests.frame.methods.test_combine" -> "pytest" [];
	"pandas.tests.frame.methods.test_combine" -> "pandas" [];
	"pandas.tests.frame.methods.test_clip" -> "numpy" [];
	"pandas.tests.frame.methods.test_clip" -> "pytest" [];
	"pandas.tests.frame.methods.test_clip" -> "pandas" [];
	"pandas.tests.frame.methods.test_between_time" -> "datetime" [];
	"pandas.tests.frame.methods.test_between_time" -> "numpy" [];
	"pandas.tests.frame.methods.test_between_time" -> "pytest" [];
	"pandas.tests.frame.methods.test_between_time" -> "pandas" [];
	"pandas.tests.frame.methods.test_at_time" -> "datetime" [];
	"pandas.tests.frame.methods.test_at_time" -> "numpy" [];
	"pandas.tests.frame.methods.test_at_time" -> "pytest" [];
	"pandas.tests.frame.methods.test_at_time" -> "pytz" [];
	"pandas.tests.frame.methods.test_at_time" -> "pandas" [];
	"pandas.tests.frame.methods.test_astype" -> "re" [];
	"pandas.tests.frame.methods.test_astype" -> "numpy" [];
	"pandas.tests.frame.methods.test_astype" -> "pytest" [];
	"pandas.tests.frame.methods.test_astype" -> "pandas" [];
	"pandas.tests.frame.methods.test_assign" -> "pytest" [];
	"pandas.tests.frame.methods.test_assign" -> "pandas" [];
	"pandas.tests.frame.methods.test_asof" -> "numpy" [];
	"pandas.tests.frame.methods.test_asof" -> "pytest" [];
	"pandas.tests.frame.methods.test_asof" -> "pandas" [];
	"pandas.tests.frame.methods.test_asfreq" -> "datetime" [];
	"pandas.tests.frame.methods.test_asfreq" -> "numpy" [];
	"pandas.tests.frame.methods.test_asfreq" -> "pytest" [];
	"pandas.tests.frame.methods.test_asfreq" -> "pandas" [];
	"pandas.tests.frame.methods.test_align" -> "datetime" [];
	"pandas.tests.frame.methods.test_align" -> "numpy" [];
	"pandas.tests.frame.methods.test_align" -> "pytest" [];
	"pandas.tests.frame.methods.test_align" -> "pandas" [];
	"pandas.tests.frame.methods.test_add_prefix_suffix" -> "pytest" [];
	"pandas.tests.frame.methods.test_add_prefix_suffix" -> "pandas" [];
	"pandas.tests.frame.indexing.test_xs" -> "re" [];
	"pandas.tests.frame.indexing.test_xs" -> "numpy" [];
	"pandas.tests.frame.indexing.test_xs" -> "pytest" [];
	"pandas.tests.frame.indexing.test_xs" -> "pandas" [];
	"pandas.tests.frame.indexing.test_where" -> "datetime" [];
	"pandas.tests.frame.indexing.test_where" -> "hypothesis" [];
	"pandas.tests.frame.indexing.test_where" -> "numpy" [];
	"pandas.tests.frame.indexing.test_where" -> "pytest" [];
	"pandas.tests.frame.indexing.test_where" -> "pandas" [];
	"pandas.tests.frame.indexing.test_take" -> "pytest" [];
	"pandas.tests.frame.indexing.test_setitem" -> "datetime" [];
	"pandas.tests.frame.indexing.test_setitem" -> "numpy" [];
	"pandas.tests.frame.indexing.test_setitem" -> "pytest" [];
	"pandas.tests.frame.indexing.test_setitem" -> "pandas" [];
	"pandas.tests.frame.indexing.test_set_value" -> "numpy" [];
	"pandas.tests.frame.indexing.test_set_value" -> "pandas" [];
	"pandas.tests.frame.indexing.test_mask" -> "numpy" [];
	"pandas.tests.frame.indexing.test_mask" -> "pandas" [];
	"pandas.tests.frame.indexing.test_insert" -> "numpy" [];
	"pandas.tests.frame.indexing.test_insert" -> "pytest" [];
	"pandas.tests.frame.indexing.test_insert" -> "pandas" [];
	"pandas.tests.frame.indexing.test_indexing" -> "collections" [];
	"pandas.tests.frame.indexing.test_indexing" -> "datetime" [];
	"pandas.tests.frame.indexing.test_indexing" -> "decimal" [];
	"pandas.tests.frame.indexing.test_indexing" -> "re" [];
	"pandas.tests.frame.indexing.test_indexing" -> "numpy" [];
	"pandas.tests.frame.indexing.test_indexing" -> "pytest" [];
	"pandas.tests.frame.indexing.test_indexing" -> "pandas" [];
	"pandas.tests.frame.indexing.test_getitem" -> "re" [];
	"pandas.tests.frame.indexing.test_getitem" -> "numpy" [];
	"pandas.tests.frame.indexing.test_getitem" -> "pytest" [];
	"pandas.tests.frame.indexing.test_getitem" -> "pandas" [];
	"pandas.tests.frame.indexing.test_get_value" -> "pytest" [];
	"pandas.tests.frame.indexing.test_get_value" -> "pandas" [];
	"pandas.tests.frame.indexing.test_get" -> "pytest" [];
	"pandas.tests.frame.indexing.test_get" -> "pandas" [];
	"pandas.tests.frame.indexing.test_delitem" -> "re" [];
	"pandas.tests.frame.indexing.test_delitem" -> "numpy" [];
	"pandas.tests.frame.indexing.test_delitem" -> "pytest" [];
	"pandas.tests.frame.indexing.test_delitem" -> "pandas" [];
	"pandas.tests.frame.indexing.test_coercion" -> "numpy" [];
	"pandas.tests.frame.indexing.test_coercion" -> "pytest" [];
	"pandas.tests.frame.indexing.test_coercion" -> "pandas" [];
	"pandas.tests.frame.constructors.test_from_records" -> "datetime" [];
	"pandas.tests.frame.constructors.test_from_records" -> "decimal" [];
	"pandas.tests.frame.constructors.test_from_records" -> "numpy" [];
	"pandas.tests.frame.constructors.test_from_records" -> "pytest" [];
	"pandas.tests.frame.constructors.test_from_records" -> "pytz" [];
	"pandas.tests.frame.constructors.test_from_records" -> "pandas" [];
	"pandas.tests.frame.constructors.test_from_dict" -> "collections" [];
	"pandas.tests.frame.constructors.test_from_dict" -> "numpy" [];
	"pandas.tests.frame.constructors.test_from_dict" -> "pytest" [];
	"pandas.tests.frame.constructors.test_from_dict" -> "pandas" [];
	"pandas.tests.frame.conftest" -> "numpy" [];
	"pandas.tests.frame.conftest" -> "pytest" [];
	"pandas.tests.frame.conftest" -> "pandas" [];
	"pandas.tests.extension.test_string" -> "__future__" [];
	"pandas.tests.extension.test_string" -> "string" [];
	"pandas.tests.extension.test_string" -> "typing" [];
	"pandas.tests.extension.test_string" -> "numpy" [];
	"pandas.tests.extension.test_string" -> "pytest" [];
	"pandas.tests.extension.test_string" -> "pandas" [];
	"pandas.tests.extension.base" -> "warnings" [];
	"pandas.tests.extension.base.setitem" -> "numpy" [];
	"pandas.tests.extension.base.setitem" -> "pytest" [];
	"pandas.tests.extension.base.setitem" -> "pandas" [];
	"pandas.tests.extension.base.reshaping" -> "itertools" [];
	"pandas.tests.extension.base.reshaping" -> "numpy" [];
	"pandas.tests.extension.base.reshaping" -> "pytest" [];
	"pandas.tests.extension.base.reshaping" -> "pandas" [];
	"pandas.tests.extension.base.reduce" -> "typing" [];
	"pandas.tests.extension.base.reduce" -> "pytest" [];
	"pandas.tests.extension.base.reduce" -> "pandas" [];
	"pandas.tests.extension.base.printing" -> "io" [];
	"pandas.tests.extension.base.printing" -> "pytest" [];
	"pandas.tests.extension.base.printing" -> "pandas" [];
	"pandas.tests.extension.base.ops" -> "__future__" [];
	"pandas.tests.extension.base.ops" -> "typing" [];
	"pandas.tests.extension.base.ops" -> "numpy" [];
	"pandas.tests.extension.base.ops" -> "pytest" [];
	"pandas.tests.extension.base.ops" -> "pandas" [];
	"pandas.tests.extension.base.missing" -> "numpy" [];
	"pandas.tests.extension.base.missing" -> "pytest" [];
	"pandas.tests.extension.base.missing" -> "pandas" [];
	"pandas.tests.extension.base.methods" -> "inspect" [];
	"pandas.tests.extension.base.methods" -> "operator" [];
	"pandas.tests.extension.base.methods" -> "numpy" [];
	"pandas.tests.extension.base.methods" -> "pytest" [];
	"pandas.tests.extension.base.methods" -> "pandas" [];
	"pandas.tests.extension.base.io" -> "io" [];
	"pandas.tests.extension.base.io" -> "numpy" [];
	"pandas.tests.extension.base.io" -> "pytest" [];
	"pandas.tests.extension.base.io" -> "pandas" [];
	"pandas.tests.extension.base.interface" -> "warnings" [];
	"pandas.tests.extension.base.interface" -> "numpy" [];
	"pandas.tests.extension.base.interface" -> "pytest" [];
	"pandas.tests.extension.base.interface" -> "pandas" [];
	"pandas.tests.extension.base.index" -> "pandas" [];
	"pandas.tests.extension.base.groupby" -> "re" [];
	"pandas.tests.extension.base.groupby" -> "pytest" [];
	"pandas.tests.extension.base.groupby" -> "pandas" [];
	"pandas.tests.extension.base.getitem" -> "numpy" [];
	"pandas.tests.extension.base.getitem" -> "pytest" [];
	"pandas.tests.extension.base.getitem" -> "pandas" [];
	"pandas.tests.extension.base.dtype" -> "numpy" [];
	"pandas.tests.extension.base.dtype" -> "pytest" [];
	"pandas.tests.extension.base.dtype" -> "pandas" [];
	"pandas.tests.extension.base.dim2" -> "numpy" [];
	"pandas.tests.extension.base.dim2" -> "pytest" [];
	"pandas.tests.extension.base.dim2" -> "pandas" [];
	"pandas.tests.extension.base.constructors" -> "numpy" [];
	"pandas.tests.extension.base.constructors" -> "pytest" [];
	"pandas.tests.extension.base.constructors" -> "pandas" [];
	"pandas.tests.extension.base.casting" -> "numpy" [];
	"pandas.tests.extension.base.casting" -> "pytest" [];
	"pandas.tests.extension.base.casting" -> "pandas" [];
	"pandas.tests.extension.base.accumulate" -> "pytest" [];
	"pandas.tests.extension.base.accumulate" -> "pandas" [];
	"pandas.tests.extension.test_sparse" -> "numpy" [];
	"pandas.tests.extension.test_sparse" -> "pytest" [];
	"pandas.tests.extension.test_sparse" -> "pandas" [];
	"pandas.tests.extension.test_period" -> "__future__" [];
	"pandas.tests.extension.test_period" -> "typing" [];
	"pandas.tests.extension.test_period" -> "numpy" [];
	"pandas.tests.extension.test_period" -> "pytest" [];
	"pandas.tests.extension.test_period" -> "pandas" [];
	"pandas.tests.extension.test_numpy" -> "numpy" [];
	"pandas.tests.extension.test_numpy" -> "pytest" [];
	"pandas.tests.extension.test_numpy" -> "pandas" [];
	"pandas.tests.extension.test_masked" -> "warnings" [];
	"pandas.tests.extension.test_masked" -> "numpy" [];
	"pandas.tests.extension.test_masked" -> "pytest" [];
	"pandas.tests.extension.test_masked" -> "pandas" [];
	"pandas.tests.extension.test_interval" -> "__future__" [];
	"pandas.tests.extension.test_interval" -> "typing" [];
	"pandas.tests.extension.test_interval" -> "numpy" [];
	"pandas.tests.extension.test_interval" -> "pytest" [];
	"pandas.tests.extension.test_interval" -> "pandas" [];
	"pandas.tests.extension.test_extension" -> "numpy" [];
	"pandas.tests.extension.test_extension" -> "pytest" [];
	"pandas.tests.extension.test_datetime" -> "numpy" [];
	"pandas.tests.extension.test_datetime" -> "pytest" [];
	"pandas.tests.extension.test_datetime" -> "pandas" [];
	"pandas.tests.extension.test_common" -> "numpy" [];
	"pandas.tests.extension.test_common" -> "pytest" [];
	"pandas.tests.extension.test_common" -> "pandas" [];
	"pandas.tests.extension.test_categorical" -> "string" [];
	"pandas.tests.extension.test_categorical" -> "numpy" [];
	"pandas.tests.extension.test_categorical" -> "pytest" [];
	"pandas.tests.extension.test_categorical" -> "pandas" [];
	"pandas.tests.extension.test_arrow" -> "__future__" [];
	"pandas.tests.extension.test_arrow" -> "datetime" [];
	"pandas.tests.extension.test_arrow" -> "decimal" [];
	"pandas.tests.extension.test_arrow" -> "io" [];
	"pandas.tests.extension.test_arrow" -> "operator" [];
	"pandas.tests.extension.test_arrow" -> "pickle" [];
	"pandas.tests.extension.test_arrow" -> "re" [];
	"pandas.tests.extension.test_arrow" -> "numpy" [];
	"pandas.tests.extension.test_arrow" -> "pytest" [];
	"pandas.tests.extension.test_arrow" -> "pandas" [];
	"pandas.tests.extension.list.test_list" -> "pytest" [];
	"pandas.tests.extension.list.test_list" -> "pandas" [];
	"pandas.tests.extension.list.array" -> "__future__" [];
	"pandas.tests.extension.list.array" -> "numbers" [];
	"pandas.tests.extension.list.array" -> "string" [];
	"pandas.tests.extension.list.array" -> "typing" [];
	"pandas.tests.extension.list.array" -> "numpy" [];
	"pandas.tests.extension.list.array" -> "pandas" [];
	"pandas.tests.extension.json.test_json" -> "collections" [];
	"pandas.tests.extension.json.test_json" -> "operator" [];
	"pandas.tests.extension.json.test_json" -> "sys" [];
	"pandas.tests.extension.json.test_json" -> "numpy" [];
	"pandas.tests.extension.json.test_json" -> "pytest" [];
	"pandas.tests.extension.json.test_json" -> "pandas" [];
	"pandas.tests.extension.json.array" -> "__future__" [];
	"pandas.tests.extension.json.array" -> "collections" [];
	"pandas.tests.extension.json.array" -> "itertools" [];
	"pandas.tests.extension.json.array" -> "numbers" [];
	"pandas.tests.extension.json.array" -> "string" [];
	"pandas.tests.extension.json.array" -> "sys" [];
	"pandas.tests.extension.json.array" -> "typing" [];
	"pandas.tests.extension.json.array" -> "warnings" [];
	"pandas.tests.extension.json.array" -> "numpy" [];
	"pandas.tests.extension.json.array" -> "pandas" [];
	"pandas.tests.extension.decimal.test_decimal" -> "__future__" [];
	"pandas.tests.extension.decimal.test_decimal" -> "decimal" [];
	"pandas.tests.extension.decimal.test_decimal" -> "operator" [];
	"pandas.tests.extension.decimal.test_decimal" -> "numpy" [];
	"pandas.tests.extension.decimal.test_decimal" -> "pytest" [];
	"pandas.tests.extension.decimal.test_decimal" -> "pandas" [];
	"pandas.tests.extension.date.array" -> "__future__" [];
	"pandas.tests.extension.date.array" -> "datetime" [];
	"pandas.tests.extension.date.array" -> "typing" [];
	"pandas.tests.extension.date.array" -> "numpy" [];
	"pandas.tests.extension.conftest" -> "operator" [];
	"pandas.tests.extension.conftest" -> "pytest" [];
	"pandas.tests.extension.conftest" -> "pandas" [];
	"pandas.tests.extension.array_with_attr.test_array_with_attr" -> "numpy" [];
	"pandas.tests.extension.array_with_attr.test_array_with_attr" -> "pandas" [];
	"pandas.tests.extension.array_with_attr.array" -> "__future__" [];
	"pandas.tests.extension.array_with_attr.array" -> "numbers" [];
	"pandas.tests.extension.array_with_attr.array" -> "typing" [];
	"pandas.tests.extension.array_with_attr.array" -> "numpy" [];
	"pandas.tests.extension.array_with_attr.array" -> "pandas" [];
	"pandas.tests.dtypes.test_missing" -> "contextlib" [];
	"pandas.tests.dtypes.test_missing" -> "datetime" [];
	"pandas.tests.dtypes.test_missing" -> "decimal" [];
	"pandas.tests.dtypes.test_missing" -> "numpy" [];
	"pandas.tests.dtypes.test_missing" -> "pytest" [];
	"pandas.tests.dtypes.test_missing" -> "pandas" [];
	"pandas.tests.dtypes.test_inference" -> "collections" [];
	"pandas.tests.dtypes.test_inference" -> "datetime" [];
	"pandas.tests.dtypes.test_inference" -> "decimal" [];
	"pandas.tests.dtypes.test_inference" -> "fractions" [];
	"pandas.tests.dtypes.test_inference" -> "io" [];
	"pandas.tests.dtypes.test_inference" -> "itertools" [];
	"pandas.tests.dtypes.test_inference" -> "numbers" [];
	"pandas.tests.dtypes.test_inference" -> "re" [];
	"pandas.tests.dtypes.test_inference" -> "sys" [];
	"pandas.tests.dtypes.test_inference" -> "typing" [];
	"pandas.tests.dtypes.test_inference" -> "numpy" [];
	"pandas.tests.dtypes.test_inference" -> "pytest" [];
	"pandas.tests.dtypes.test_inference" -> "pytz" [];
	"pandas.tests.dtypes.test_inference" -> "pandas" [];
	"pandas.tests.dtypes.test_generic" -> "re" [];
	"pandas.tests.dtypes.test_generic" -> "numpy" [];
	"pandas.tests.dtypes.test_generic" -> "pytest" [];
	"pandas.tests.dtypes.test_generic" -> "pandas" [];
	"pandas.tests.dtypes.test_dtypes" -> "re" [];
	"pandas.tests.dtypes.test_dtypes" -> "weakref" [];
	"pandas.tests.dtypes.test_dtypes" -> "numpy" [];
	"pandas.tests.dtypes.test_dtypes" -> "pytest" [];
	"pandas.tests.dtypes.test_dtypes" -> "pytz" [];
	"pandas.tests.dtypes.test_dtypes" -> "pandas" [];
	"pandas.tests.dtypes.test_concat" -> "pytest" [];
	"pandas.tests.dtypes.test_concat" -> "pandas" [];
	"pandas.tests.dtypes.test_common" -> "__future__" [];
	"pandas.tests.dtypes.test_common" -> "numpy" [];
	"pandas.tests.dtypes.test_common" -> "pytest" [];
	"pandas.tests.dtypes.test_common" -> "pandas" [];
	"pandas.tests.dtypes.test_common" -> "'scipy.sparse'" [];
	"pandas.tests.dtypes.cast.test_promote" -> "datetime" [];
	"pandas.tests.dtypes.cast.test_promote" -> "decimal" [];
	"pandas.tests.dtypes.cast.test_promote" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_promote" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_promote" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_maybe_box_native" -> "datetime" [];
	"pandas.tests.dtypes.cast.test_maybe_box_native" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_maybe_box_native" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_maybe_box_native" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_infer_dtype" -> "datetime" [];
	"pandas.tests.dtypes.cast.test_infer_dtype" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_infer_dtype" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_infer_dtype" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_infer_datetimelike" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_infer_datetimelike" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_infer_datetimelike" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_find_common_type" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_find_common_type" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_find_common_type" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_downcast" -> "decimal" [];
	"pandas.tests.dtypes.cast.test_downcast" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_downcast" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_downcast" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_dict_compat" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_dict_compat" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_construct_object_arr" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_construct_ndarray" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_construct_ndarray" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_construct_ndarray" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_construct_from_scalar" -> "numpy" [];
	"pandas.tests.dtypes.cast.test_construct_from_scalar" -> "pytest" [];
	"pandas.tests.dtypes.cast.test_construct_from_scalar" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_can_hold_element" -> "numpy" [];
	"pandas.tests.copy_view.test_util" -> "numpy" [];
	"pandas.tests.copy_view.test_util" -> "pandas" [];
	"pandas.tests.copy_view.util" -> "pandas" [];
	"pandas.tests.copy_view.test_setitem" -> "numpy" [];
	"pandas.tests.copy_view.test_setitem" -> "pandas" [];
	"pandas.tests.copy_view.test_replace" -> "numpy" [];
	"pandas.tests.copy_view.test_replace" -> "pytest" [];
	"pandas.tests.copy_view.test_replace" -> "pandas" [];
	"pandas.tests.copy_view.test_methods" -> "numpy" [];
	"pandas.tests.copy_view.test_methods" -> "pytest" [];
	"pandas.tests.copy_view.test_methods" -> "pandas" [];
	"pandas.tests.copy_view.test_interp_fillna" -> "numpy" [];
	"pandas.tests.copy_view.test_interp_fillna" -> "pytest" [];
	"pandas.tests.copy_view.test_interp_fillna" -> "pandas" [];
	"pandas.tests.copy_view.test_internals" -> "numpy" [];
	"pandas.tests.copy_view.test_internals" -> "pytest" [];
	"pandas.tests.copy_view.test_internals" -> "pandas" [];
	"pandas.tests.copy_view.test_indexing" -> "numpy" [];
	"pandas.tests.copy_view.test_indexing" -> "pytest" [];
	"pandas.tests.copy_view.test_indexing" -> "pandas" [];
	"pandas.tests.copy_view.test_functions" -> "numpy" [];
	"pandas.tests.copy_view.test_functions" -> "pytest" [];
	"pandas.tests.copy_view.test_functions" -> "pandas" [];
	"pandas.tests.copy_view.test_core_functionalities" -> "numpy" [];
	"pandas.tests.copy_view.test_core_functionalities" -> "pytest" [];
	"pandas.tests.copy_view.test_core_functionalities" -> "pandas" [];
	"pandas.tests.copy_view.test_constructors" -> "numpy" [];
	"pandas.tests.copy_view.test_constructors" -> "pytest" [];
	"pandas.tests.copy_view.test_constructors" -> "pandas" [];
	"pandas.tests.copy_view.test_clip" -> "numpy" [];
	"pandas.tests.copy_view.test_clip" -> "pandas" [];
	"pandas.tests.copy_view.test_chained_assignment_deprecation" -> "numpy" [];
	"pandas.tests.copy_view.test_chained_assignment_deprecation" -> "pytest" [];
	"pandas.tests.copy_view.test_chained_assignment_deprecation" -> "pandas" [];
	"pandas.tests.copy_view.test_astype" -> "pickle" [];
	"pandas.tests.copy_view.test_astype" -> "numpy" [];
	"pandas.tests.copy_view.test_astype" -> "pytest" [];
	"pandas.tests.copy_view.test_astype" -> "pandas" [];
	"pandas.tests.copy_view.test_array" -> "numpy" [];
	"pandas.tests.copy_view.test_array" -> "pytest" [];
	"pandas.tests.copy_view.test_array" -> "pandas" [];
	"pandas.tests.copy_view.index.test_timedeltaindex" -> "pytest" [];
	"pandas.tests.copy_view.index.test_timedeltaindex" -> "pandas" [];
	"pandas.tests.copy_view.index.test_periodindex" -> "pytest" [];
	"pandas.tests.copy_view.index.test_periodindex" -> "pandas" [];
	"pandas.tests.copy_view.index.test_index" -> "numpy" [];
	"pandas.tests.copy_view.index.test_index" -> "pytest" [];
	"pandas.tests.copy_view.index.test_index" -> "pandas" [];
	"pandas.tests.copy_view.index.test_datetimeindex" -> "pytest" [];
	"pandas.tests.copy_view.index.test_datetimeindex" -> "pandas" [];
	"pandas.tests.construction.test_extract_array" -> "pandas" [];
	"pandas.tests.config.test_localization" -> "codecs" [];
	"pandas.tests.config.test_localization" -> "locale" [];
	"pandas.tests.config.test_localization" -> "os" [];
	"pandas.tests.config.test_localization" -> "pytest" [];
	"pandas.tests.config.test_localization" -> "pandas" [];
	"pandas.tests.config.test_config" -> "pytest" [];
	"pandas.tests.config.test_config" -> "pandas" [];
	"pandas.tests.computation.test_eval" -> "__future__" [];
	"pandas.tests.computation.test_eval" -> "functools" [];
	"pandas.tests.computation.test_eval" -> "itertools" [];
	"pandas.tests.computation.test_eval" -> "operator" [];
	"pandas.tests.computation.test_eval" -> "numpy" [];
	"pandas.tests.computation.test_eval" -> "pytest" [];
	"pandas.tests.computation.test_eval" -> "pandas" [];
	"pandas.tests.computation.test_eval" -> "numexpr" [];
	"pandas.tests.computation.test_compat" -> "pytest" [];
	"pandas.tests.computation.test_compat" -> "pandas" [];
	"pandas.tests.base.test_value_counts" -> "collections" [];
	"pandas.tests.base.test_value_counts" -> "datetime" [];
	"pandas.tests.base.test_value_counts" -> "numpy" [];
	"pandas.tests.base.test_value_counts" -> "pytest" [];
	"pandas.tests.base.test_value_counts" -> "pandas" [];
	"pandas.tests.base.test_unique" -> "numpy" [];
	"pandas.tests.base.test_unique" -> "pytest" [];
	"pandas.tests.base.test_unique" -> "pandas" [];
	"pandas.tests.base.test_transpose" -> "numpy" [];
	"pandas.tests.base.test_transpose" -> "pytest" [];
	"pandas.tests.base.test_transpose" -> "pandas" [];
	"pandas.tests.base.test_misc" -> "sys" [];
	"pandas.tests.base.test_misc" -> "numpy" [];
	"pandas.tests.base.test_misc" -> "pytest" [];
	"pandas.tests.base.test_misc" -> "pandas" [];
	"pandas.tests.base.test_fillna" -> "numpy" [];
	"pandas.tests.base.test_fillna" -> "pytest" [];
	"pandas.tests.base.test_fillna" -> "pandas" [];
	"pandas.tests.base.test_conversion" -> "numpy" [];
	"pandas.tests.base.test_conversion" -> "pytest" [];
	"pandas.tests.base.test_conversion" -> "pandas" [];
	"pandas.tests.base.test_constructors" -> "datetime" [];
	"pandas.tests.base.test_constructors" -> "sys" [];
	"pandas.tests.base.test_constructors" -> "numpy" [];
	"pandas.tests.base.test_constructors" -> "pytest" [];
	"pandas.tests.base.test_constructors" -> "pandas" [];
	"pandas.tests.base.common" -> "typing" [];
	"pandas.tests.base.common" -> "pandas" [];
	"pandas.tests.arrays.timedeltas.test_reductions" -> "numpy" [];
	"pandas.tests.arrays.timedeltas.test_reductions" -> "pytest" [];
	"pandas.tests.arrays.timedeltas.test_reductions" -> "pandas" [];
	"pandas.tests.arrays.timedeltas.test_cumulative" -> "pytest" [];
	"pandas.tests.arrays.timedeltas.test_constructors" -> "numpy" [];
	"pandas.tests.arrays.timedeltas.test_constructors" -> "pytest" [];
	"pandas.tests.arrays.test_timedeltas" -> "datetime" [];
	"pandas.tests.arrays.test_timedeltas" -> "numpy" [];
	"pandas.tests.arrays.test_timedeltas" -> "pytest" [];
	"pandas.tests.arrays.test_timedeltas" -> "pandas" [];
	"pandas.tests.arrays.test_period" -> "numpy" [];
	"pandas.tests.arrays.test_period" -> "pytest" [];
	"pandas.tests.arrays.test_period" -> "pandas" [];
	"pandas.tests.arrays.test_ndarray_backed" -> "numpy" [];
	"pandas.tests.arrays.test_ndarray_backed" -> "pandas" [];
	"pandas.tests.arrays.test_datetimes" -> "__future__" [];
	"pandas.tests.arrays.test_datetimes" -> "datetime" [];
	"pandas.tests.arrays.test_datetimes" -> "operator" [];
	"pandas.tests.arrays.test_datetimes" -> "zoneinfo" [];
	"pandas.tests.arrays.test_datetimes" -> "numpy" [];
	"pandas.tests.arrays.test_datetimes" -> "pytest" [];
	"pandas.tests.arrays.test_datetimes" -> "pandas" [];
	"pandas.tests.arrays.test_datetimelike" -> "__future__" [];
	"pandas.tests.arrays.test_datetimelike" -> "re" [];
	"pandas.tests.arrays.test_datetimelike" -> "warnings" [];
	"pandas.tests.arrays.test_datetimelike" -> "numpy" [];
	"pandas.tests.arrays.test_datetimelike" -> "pytest" [];
	"pandas.tests.arrays.test_datetimelike" -> "pandas" [];
	"pandas.tests.arrays.test_array" -> "datetime" [];
	"pandas.tests.arrays.test_array" -> "decimal" [];
	"pandas.tests.arrays.test_array" -> "re" [];
	"pandas.tests.arrays.test_array" -> "numpy" [];
	"pandas.tests.arrays.test_array" -> "pytest" [];
	"pandas.tests.arrays.test_array" -> "pytz" [];
	"pandas.tests.arrays.test_array" -> "pandas" [];
	"pandas.tests.arrays.string_.test_string_arrow" -> "pickle" [];
	"pandas.tests.arrays.string_.test_string_arrow" -> "re" [];
	"pandas.tests.arrays.string_.test_string_arrow" -> "numpy" [];
	"pandas.tests.arrays.string_.test_string_arrow" -> "pytest" [];
	"pandas.tests.arrays.string_.test_string_arrow" -> "pandas" [];
	"pandas.tests.arrays.string_.test_string" -> "operator" [];
	"pandas.tests.arrays.string_.test_string" -> "numpy" [];
	"pandas.tests.arrays.string_.test_string" -> "pytest" [];
	"pandas.tests.arrays.string_.test_string" -> "pandas" [];
	"pandas.tests.arrays.string_.test_string" -> "pyarrow" [];
	"pandas.tests.arrays.string_.test_string" -> "'pyarrow.compute'" [];
	"pandas.tests.arrays.string_.test_concat" -> "numpy" [];
	"pandas.tests.arrays.string_.test_concat" -> "pytest" [];
	"pandas.tests.arrays.string_.test_concat" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_unary" -> "operator" [];
	"pandas.tests.arrays.sparse.test_unary" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_unary" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_unary" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_reductions" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_reductions" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_reductions" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_libsparse" -> "operator" [];
	"pandas.tests.arrays.sparse.test_libsparse" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_libsparse" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_libsparse" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_indexing" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_indexing" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_dtype" -> "re" [];
	"pandas.tests.arrays.sparse.test_dtype" -> "warnings" [];
	"pandas.tests.arrays.sparse.test_dtype" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_dtype" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_dtype" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_constructors" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_constructors" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_constructors" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_combine_concat" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_combine_concat" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_combine_concat" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_astype" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_astype" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_astype" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_array" -> "re" [];
	"pandas.tests.arrays.sparse.test_array" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_array" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_array" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_arithmetics" -> "operator" [];
	"pandas.tests.arrays.sparse.test_arithmetics" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_arithmetics" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_arithmetics" -> "pandas" [];
	"pandas.tests.arrays.sparse.test_accessor" -> "string" [];
	"pandas.tests.arrays.sparse.test_accessor" -> "numpy" [];
	"pandas.tests.arrays.sparse.test_accessor" -> "pytest" [];
	"pandas.tests.arrays.sparse.test_accessor" -> "pandas" [];
	"pandas.tests.arrays.period.test_reductions" -> "pytest" [];
	"pandas.tests.arrays.period.test_reductions" -> "pandas" [];
	"pandas.tests.arrays.period.test_constructors" -> "numpy" [];
	"pandas.tests.arrays.period.test_constructors" -> "pytest" [];
	"pandas.tests.arrays.period.test_constructors" -> "pandas" [];
	"pandas.tests.arrays.period.test_astype" -> "numpy" [];
	"pandas.tests.arrays.period.test_astype" -> "pytest" [];
	"pandas.tests.arrays.period.test_astype" -> "pandas" [];
	"pandas.tests.arrays.period.test_arrow_compat" -> "pytest" [];
	"pandas.tests.arrays.period.test_arrow_compat" -> "pandas" [];
	"pandas.tests.arrays.numpy_.test_numpy" -> "numpy" [];
	"pandas.tests.arrays.numpy_.test_numpy" -> "pytest" [];
	"pandas.tests.arrays.numpy_.test_numpy" -> "pandas" [];
	"pandas.tests.arrays.numpy_.test_indexing" -> "numpy" [];
	"pandas.tests.arrays.numpy_.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.masked.test_indexing" -> "re" [];
	"pandas.tests.arrays.masked.test_indexing" -> "numpy" [];
	"pandas.tests.arrays.masked.test_indexing" -> "pytest" [];
	"pandas.tests.arrays.masked.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.masked.test_function" -> "numpy" [];
	"pandas.tests.arrays.masked.test_function" -> "pytest" [];
	"pandas.tests.arrays.masked.test_function" -> "pandas" [];
	"pandas.tests.arrays.masked.test_arrow_compat" -> "numpy" [];
	"pandas.tests.arrays.masked.test_arrow_compat" -> "pytest" [];
	"pandas.tests.arrays.masked.test_arrow_compat" -> "pandas" [];
	"pandas.tests.arrays.masked.test_arithmetic" -> "__future__" [];
	"pandas.tests.arrays.masked.test_arithmetic" -> "typing" [];
	"pandas.tests.arrays.masked.test_arithmetic" -> "numpy" [];
	"pandas.tests.arrays.masked.test_arithmetic" -> "pytest" [];
	"pandas.tests.arrays.masked.test_arithmetic" -> "pandas" [];
	"pandas.tests.arrays.interval.test_overlaps" -> "numpy" [];
	"pandas.tests.arrays.interval.test_overlaps" -> "pytest" [];
	"pandas.tests.arrays.interval.test_overlaps" -> "pandas" [];
	"pandas.tests.arrays.interval.test_interval_pyarrow" -> "numpy" [];
	"pandas.tests.arrays.interval.test_interval_pyarrow" -> "pytest" [];
	"pandas.tests.arrays.interval.test_interval_pyarrow" -> "pandas" [];
	"pandas.tests.arrays.interval.test_interval" -> "numpy" [];
	"pandas.tests.arrays.interval.test_interval" -> "pytest" [];
	"pandas.tests.arrays.interval.test_interval" -> "pandas" [];
	"pandas.tests.arrays.interval.test_astype" -> "pytest" [];
	"pandas.tests.arrays.interval.test_astype" -> "pandas" [];
	"pandas.tests.arrays.integer.test_repr" -> "numpy" [];
	"pandas.tests.arrays.integer.test_repr" -> "pytest" [];
	"pandas.tests.arrays.integer.test_repr" -> "pandas" [];
	"pandas.tests.arrays.integer.test_reduction" -> "numpy" [];
	"pandas.tests.arrays.integer.test_reduction" -> "pytest" [];
	"pandas.tests.arrays.integer.test_reduction" -> "pandas" [];
	"pandas.tests.arrays.integer.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.integer.test_function" -> "numpy" [];
	"pandas.tests.arrays.integer.test_function" -> "pytest" [];
	"pandas.tests.arrays.integer.test_function" -> "pandas" [];
	"pandas.tests.arrays.integer.test_dtypes" -> "numpy" [];
	"pandas.tests.arrays.integer.test_dtypes" -> "pytest" [];
	"pandas.tests.arrays.integer.test_dtypes" -> "pandas" [];
	"pandas.tests.arrays.integer.test_construction" -> "numpy" [];
	"pandas.tests.arrays.integer.test_construction" -> "pytest" [];
	"pandas.tests.arrays.integer.test_construction" -> "pandas" [];
	"pandas.tests.arrays.integer.test_concat" -> "numpy" [];
	"pandas.tests.arrays.integer.test_concat" -> "pytest" [];
	"pandas.tests.arrays.integer.test_concat" -> "pandas" [];
	"pandas.tests.arrays.integer.test_comparison" -> "pytest" [];
	"pandas.tests.arrays.integer.test_comparison" -> "pandas" [];
	"pandas.tests.arrays.masked_shared" -> "numpy" [];
	"pandas.tests.arrays.masked_shared" -> "pytest" [];
	"pandas.tests.arrays.masked_shared" -> "pandas" [];
	"pandas.tests.arrays.integer.test_arithmetic" -> "operator" [];
	"pandas.tests.arrays.integer.test_arithmetic" -> "numpy" [];
	"pandas.tests.arrays.integer.test_arithmetic" -> "pytest" [];
	"pandas.tests.arrays.integer.test_arithmetic" -> "pandas" [];
	"pandas.tests.arrays.integer.conftest" -> "numpy" [];
	"pandas.tests.arrays.integer.conftest" -> "pytest" [];
	"pandas.tests.arrays.integer.conftest" -> "pandas" [];
	"pandas.tests.arrays.floating.test_to_numpy" -> "numpy" [];
	"pandas.tests.arrays.floating.test_to_numpy" -> "pytest" [];
	"pandas.tests.arrays.floating.test_to_numpy" -> "pandas" [];
	"pandas.tests.arrays.floating.test_repr" -> "numpy" [];
	"pandas.tests.arrays.floating.test_repr" -> "pytest" [];
	"pandas.tests.arrays.floating.test_repr" -> "pandas" [];
	"pandas.tests.arrays.floating.test_function" -> "numpy" [];
	"pandas.tests.arrays.floating.test_function" -> "pytest" [];
	"pandas.tests.arrays.floating.test_function" -> "pandas" [];
	"pandas.tests.arrays.floating.test_contains" -> "numpy" [];
	"pandas.tests.arrays.floating.test_contains" -> "pandas" [];
	"pandas.tests.arrays.floating.test_construction" -> "numpy" [];
	"pandas.tests.arrays.floating.test_construction" -> "pytest" [];
	"pandas.tests.arrays.floating.test_construction" -> "pandas" [];
	"pandas.tests.arrays.floating.test_concat" -> "pytest" [];
	"pandas.tests.arrays.floating.test_concat" -> "pandas" [];
	"pandas.tests.arrays.floating.test_comparison" -> "numpy" [];
	"pandas.tests.arrays.floating.test_comparison" -> "pytest" [];
	"pandas.tests.arrays.floating.test_comparison" -> "pandas" [];
	"pandas.tests.arrays.floating.test_astype" -> "numpy" [];
	"pandas.tests.arrays.floating.test_astype" -> "pytest" [];
	"pandas.tests.arrays.floating.test_astype" -> "pandas" [];
	"pandas.tests.arrays.floating.test_arithmetic" -> "operator" [];
	"pandas.tests.arrays.floating.test_arithmetic" -> "numpy" [];
	"pandas.tests.arrays.floating.test_arithmetic" -> "pytest" [];
	"pandas.tests.arrays.floating.test_arithmetic" -> "pandas" [];
	"pandas.tests.arrays.floating.conftest" -> "numpy" [];
	"pandas.tests.arrays.floating.conftest" -> "pytest" [];
	"pandas.tests.arrays.floating.conftest" -> "pandas" [];
	"pandas.tests.arrays.datetimes.test_reductions" -> "numpy" [];
	"pandas.tests.arrays.datetimes.test_reductions" -> "pytest" [];
	"pandas.tests.arrays.datetimes.test_reductions" -> "pandas" [];
	"pandas.tests.arrays.datetimes.test_cumulative" -> "pytest" [];
	"pandas.tests.arrays.datetimes.test_constructors" -> "numpy" [];
	"pandas.tests.arrays.datetimes.test_constructors" -> "pytest" [];
	"pandas.tests.arrays.datetimes.test_constructors" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_warnings" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_warnings" -> "'IPython.core'" [];
	"pandas.tests.arrays.categorical.test_take" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_take" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_take" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_subclass" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_sorting" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_sorting" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_sorting" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_repr" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_repr" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_repr" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_replace" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_replace" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_operators" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_operators" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_operators" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_missing" -> "collections" [];
	"pandas.tests.arrays.categorical.test_missing" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_missing" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_missing" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_map" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_map" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_map" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_indexing" -> "math" [];
	"pandas.tests.arrays.categorical.test_indexing" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_indexing" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_dtypes" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_dtypes" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_dtypes" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_constructors" -> "datetime" [];
	"pandas.tests.arrays.categorical.test_constructors" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_constructors" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_constructors" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_astype" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_astype" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_astype" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_api" -> "re" [];
	"pandas.tests.arrays.categorical.test_api" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_api" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_api" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_analytics" -> "re" [];
	"pandas.tests.arrays.categorical.test_analytics" -> "sys" [];
	"pandas.tests.arrays.categorical.test_analytics" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_analytics" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_analytics" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_algos" -> "numpy" [];
	"pandas.tests.arrays.categorical.test_algos" -> "pytest" [];
	"pandas.tests.arrays.categorical.test_algos" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_repr" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_reduction" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_reduction" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_reduction" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_ops" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_logical" -> "operator" [];
	"pandas.tests.arrays.boolean.test_logical" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_logical" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_logical" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_indexing" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_indexing" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_indexing" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_function" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_function" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_function" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_construction" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_construction" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_construction" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_comparison" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_comparison" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_comparison" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_astype" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_astype" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_astype" -> "pandas" [];
	"pandas.tests.arrays.boolean.test_arithmetic" -> "operator" [];
	"pandas.tests.arrays.boolean.test_arithmetic" -> "numpy" [];
	"pandas.tests.arrays.boolean.test_arithmetic" -> "pytest" [];
	"pandas.tests.arrays.boolean.test_arithmetic" -> "pandas" [];
	"pandas.tests.arithmetic.test_timedelta64" -> "datetime" [];
	"pandas.tests.arithmetic.test_timedelta64" -> "numpy" [];
	"pandas.tests.arithmetic.test_timedelta64" -> "pytest" [];
	"pandas.tests.arithmetic.test_timedelta64" -> "pandas" [];
	"pandas.tests.arithmetic.test_period" -> "operator" [];
	"pandas.tests.arithmetic.test_period" -> "numpy" [];
	"pandas.tests.arithmetic.test_period" -> "pytest" [];
	"pandas.tests.arithmetic.test_period" -> "pandas" [];
	"pandas.tests.arithmetic.test_object" -> "datetime" [];
	"pandas.tests.arithmetic.test_object" -> "decimal" [];
	"pandas.tests.arithmetic.test_object" -> "operator" [];
	"pandas.tests.arithmetic.test_object" -> "numpy" [];
	"pandas.tests.arithmetic.test_object" -> "pytest" [];
	"pandas.tests.arithmetic.test_object" -> "pandas" [];
	"pandas.tests.arithmetic.test_numeric" -> "__future__" [];
	"pandas.tests.arithmetic.test_numeric" -> "collections" [];
	"pandas.tests.arithmetic.test_numeric" -> "datetime" [];
	"pandas.tests.arithmetic.test_numeric" -> "decimal" [];
	"pandas.tests.arithmetic.test_numeric" -> "operator" [];
	"pandas.tests.arithmetic.test_numeric" -> "numpy" [];
	"pandas.tests.arithmetic.test_numeric" -> "pytest" [];
	"pandas.tests.arithmetic.test_numeric" -> "pandas" [];
	"pandas.tests.arithmetic.test_interval" -> "operator" [];
	"pandas.tests.arithmetic.test_interval" -> "numpy" [];
	"pandas.tests.arithmetic.test_interval" -> "pytest" [];
	"pandas.tests.arithmetic.test_interval" -> "pandas" [];
	"pandas.tests.arithmetic.test_datetime64" -> "datetime" [];
	"pandas.tests.arithmetic.test_datetime64" -> "itertools" [];
	"pandas.tests.arithmetic.test_datetime64" -> "operator" [];
	"pandas.tests.arithmetic.test_datetime64" -> "numpy" [];
	"pandas.tests.arithmetic.test_datetime64" -> "pytest" [];
	"pandas.tests.arithmetic.test_datetime64" -> "pytz" [];
	"pandas.tests.arithmetic.test_datetime64" -> "pandas" [];
	"pandas.tests.arithmetic.test_categorical" -> "numpy" [];
	"pandas.tests.arithmetic.test_categorical" -> "pandas" [];
	"pandas.tests.arithmetic.test_array_ops" -> "operator" [];
	"pandas.tests.arithmetic.test_array_ops" -> "numpy" [];
	"pandas.tests.arithmetic.test_array_ops" -> "pytest" [];
	"pandas.tests.arithmetic.conftest" -> "numpy" [];
	"pandas.tests.arithmetic.conftest" -> "pytest" [];
	"pandas.tests.arithmetic.conftest" -> "pandas" [];
	"pandas.tests.arithmetic.common" -> "numpy" [];
	"pandas.tests.arithmetic.common" -> "pytest" [];
	"pandas.tests.arithmetic.common" -> "pandas" [];
	"pandas.tests.apply.test_str" -> "itertools" [];
	"pandas.tests.apply.test_str" -> "operator" [];
	"pandas.tests.apply.test_str" -> "numpy" [];
	"pandas.tests.apply.test_str" -> "pytest" [];
	"pandas.tests.apply.test_str" -> "pandas" [];
	"pandas.tests.apply.test_series_transform" -> "numpy" [];
	"pandas.tests.apply.test_series_transform" -> "pytest" [];
	"pandas.tests.apply.test_series_transform" -> "pandas" [];
	"pandas.tests.apply.test_series_apply_relabeling" -> "pandas" [];
	"pandas.tests.apply.test_series_apply" -> "numpy" [];
	"pandas.tests.apply.test_series_apply" -> "pytest" [];
	"pandas.tests.apply.test_series_apply" -> "pandas" [];
	"pandas.tests.apply.test_numba" -> "numpy" [];
	"pandas.tests.apply.test_numba" -> "pytest" [];
	"pandas.tests.apply.test_numba" -> "pandas" [];
	"pandas.tests.apply.test_invalid_arg" -> "itertools" [];
	"pandas.tests.apply.test_invalid_arg" -> "re" [];
	"pandas.tests.apply.test_invalid_arg" -> "numpy" [];
	"pandas.tests.apply.test_invalid_arg" -> "pytest" [];
	"pandas.tests.apply.test_invalid_arg" -> "pandas" [];
	"pandas.tests.apply.test_frame_transform" -> "numpy" [];
	"pandas.tests.apply.test_frame_transform" -> "pytest" [];
	"pandas.tests.apply.test_frame_transform" -> "pandas" [];
	"pandas.tests.apply.test_frame_apply_relabeling" -> "numpy" [];
	"pandas.tests.apply.test_frame_apply_relabeling" -> "pytest" [];
	"pandas.tests.apply.test_frame_apply_relabeling" -> "pandas" [];
	"pandas.tests.apply.test_frame_apply" -> "datetime" [];
	"pandas.tests.apply.test_frame_apply" -> "warnings" [];
	"pandas.tests.apply.test_frame_apply" -> "numpy" [];
	"pandas.tests.apply.test_frame_apply" -> "pytest" [];
	"pandas.tests.apply.test_frame_apply" -> "pandas" [];
	"pandas.tests.api.test_types" -> "__future__" [];
	"pandas.tests.api.test_api" -> "__future__" [];
	"pandas.tests.api.test_api" -> "pytest" [];
	"pandas.tests.api.test_api" -> "pandas" [];
	"pandas.conftest" -> "__future__" [];
	"pandas.conftest" -> "collections" [];
	"pandas.conftest" -> "datetime" [];
	"pandas.conftest" -> "decimal" [];
	"pandas.conftest" -> "operator" [];
	"pandas.conftest" -> "os" [];
	"pandas.conftest" -> "typing" [];
	"pandas.conftest" -> "hypothesis" [];
	"pandas.conftest" -> "numpy" [];
	"pandas.conftest" -> "pytest" [];
	"pandas.conftest" -> "pytz" [];
	"pandas.conftest" -> "pyarrow" [];
	"pandas.conftest" -> "zoneinfo" [];
	"pandas.conftest" -> "'IPython.core'" [];
	"pandas.conftest" -> "'traitlets.config'" [];
	"pandas._testing._hypothesis" -> "datetime" [];
	"pandas._testing._hypothesis" -> "hypothesis" [];
	"pandas._testing._hypothesis" -> "'hypothesis.extra'" [];
	"pandas._testing._hypothesis" -> "pandas" [];
	"_elementtree" -> "pyexpat" [];
	"xml.etree.ElementInclude" -> "copy" [];
	"zipimport" -> "_frozen_importlib_external" [];
	"zipimport" -> "_frozen_importlib" [];
	"zipimport" -> "_imp" [];
	"zipimport" -> "_io" [];
	"zipimport" -> "marshal" [];
	"zipimport" -> "sys" [];
	"zipimport" -> "time" [];
	"zipimport" -> "_warnings" [];
	"zipimport" -> "zlib" [];
	"setuptools._vendor.typing_extensions" -> "abc" [];
	"setuptools._vendor.typing_extensions" -> "collections" [];
	"setuptools._vendor.typing_extensions" -> "contextlib" [];
	"setuptools._vendor.typing_extensions" -> "functools" [];
	"setuptools._vendor.typing_extensions" -> "inspect" [];
	"setuptools._vendor.typing_extensions" -> "operator" [];
	"setuptools._vendor.typing_extensions" -> "sys" [];
	"setuptools._vendor.typing_extensions" -> "types" [];
	"setuptools._vendor.typing_extensions" -> "typing" [];
	"setuptools._vendor.typing_extensions" -> "warnings" [];
	"setuptools._vendor.typing_extensions" -> "_socket" [];
	"setuptools._vendor.wheel" -> "__future__" [];
	"setuptools._vendor.tomli._parser" -> "__future__" [];
	"setuptools._vendor.tomli._parser" -> "string" [];
	"setuptools._vendor.tomli._parser" -> "types" [];
	"setuptools._vendor.tomli._parser" -> "typing" [];
	"setuptools._vendor.tomli._types" -> "typing" [];
	"setuptools._vendor.tomli._re" -> "__future__" [];
	"setuptools._vendor.tomli._re" -> "datetime" [];
	"setuptools._vendor.tomli._re" -> "functools" [];
	"setuptools._vendor.tomli._re" -> "re" [];
	"setuptools._vendor.tomli._re" -> "typing" [];
	"setuptools._vendor.importlib_metadata" -> "__future__" [];
	"setuptools._vendor.importlib_metadata" -> "os" [];
	"setuptools._vendor.importlib_metadata" -> "re" [];
	"setuptools._vendor.importlib_metadata" -> "abc" [];
	"setuptools._vendor.importlib_metadata" -> "sys" [];
	"setuptools._vendor.importlib_metadata" -> "json" [];
	"setuptools._vendor.importlib_metadata" -> "zipp" [];
	"setuptools._vendor.importlib_metadata" -> "email" [];
	"setuptools._vendor.importlib_metadata" -> "types" [];
	"setuptools._vendor.importlib_metadata" -> "inspect" [];
	"setuptools._vendor.importlib_metadata" -> "pathlib" [];
	"setuptools._vendor.importlib_metadata" -> "operator" [];
	"setuptools._vendor.importlib_metadata" -> "textwrap" [];
	"setuptools._vendor.importlib_metadata" -> "functools" [];
	"setuptools._vendor.importlib_metadata" -> "itertools" [];
	"setuptools._vendor.importlib_metadata" -> "posixpath" [];
	"setuptools._vendor.importlib_metadata" -> "collections" [];
	"setuptools._vendor.importlib_metadata" -> "contextlib" [];
	"setuptools._vendor.importlib_metadata" -> "importlib" [];
	"setuptools._vendor.importlib_metadata" -> "typing" [];
	"setuptools._vendor.importlib_metadata" -> "csv" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "re" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "textwrap" [];
	"setuptools._vendor.importlib_metadata._text" -> "re" [];
	"setuptools._vendor.importlib_metadata._itertools" -> "itertools" [];
	"setuptools._vendor.importlib_metadata._functools" -> "types" [];
	"setuptools._vendor.importlib_metadata._functools" -> "functools" [];
	"setuptools._vendor.importlib_metadata._compat" -> "sys" [];
	"setuptools._vendor.importlib_metadata._compat" -> "platform" [];
	"setuptools._vendor.importlib_metadata._collections" -> "collections" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "os" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "pathlib" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "sys" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "types" [];
	"setuptools._vendor.importlib_metadata.compat.py39" -> "typing" [];
	"setuptools._vendor.importlib_metadata._meta" -> "__future__" [];
	"setuptools._vendor.importlib_metadata._meta" -> "os" [];
	"setuptools._vendor.importlib_metadata._meta" -> "typing" [];
	"setuptools._vendor.zipp" -> "io" [];
	"setuptools._vendor.zipp" -> "posixpath" [];
	"setuptools._vendor.zipp" -> "zipfile" [];
	"setuptools._vendor.zipp" -> "itertools" [];
	"setuptools._vendor.zipp" -> "contextlib" [];
	"setuptools._vendor.zipp" -> "pathlib" [];
	"setuptools._vendor.zipp" -> "re" [];
	"setuptools._vendor.zipp" -> "stat" [];
	"setuptools._vendor.zipp" -> "sys" [];
	"setuptools._vendor.zipp.glob" -> "os" [];
	"setuptools._vendor.zipp.glob" -> "re" [];
	"setuptools._vendor.zipp.compat.py310" -> "sys" [];
	"setuptools._vendor.zipp.compat.py310" -> "io" [];
	"setuptools._vendor.jaraco.text" -> "re" [];
	"setuptools._vendor.jaraco.text" -> "itertools" [];
	"setuptools._vendor.jaraco.text" -> "textwrap" [];
	"setuptools._vendor.jaraco.text" -> "functools" [];
	"setuptools._vendor.jaraco.text" -> "importlib_resources" [];
	"setuptools._vendor.jaraco.context" -> "__future__" [];
	"setuptools._vendor.jaraco.context" -> "contextlib" [];
	"setuptools._vendor.jaraco.context" -> "functools" [];
	"setuptools._vendor.jaraco.context" -> "operator" [];
	"setuptools._vendor.jaraco.context" -> "os" [];
	"setuptools._vendor.jaraco.context" -> "shutil" [];
	"setuptools._vendor.jaraco.context" -> "subprocess" [];
	"setuptools._vendor.jaraco.context" -> "sys" [];
	"setuptools._vendor.jaraco.context" -> "tempfile" [];
	"setuptools._vendor.jaraco.context" -> "warnings" [];
	"setuptools._vendor.jaraco.context" -> "typing" [];
	"setuptools._vendor.jaraco.context" -> "backports" [];
	"setuptools._vendor.jaraco.context" -> "tarfile" [];
	"backports" -> "pkgutil" [];
	"setuptools._vendor.backports.tarfile" -> "builtins" [];
	"setuptools._vendor.backports.tarfile" -> "sys" [];
	"setuptools._vendor.backports.tarfile" -> "os" [];
	"setuptools._vendor.backports.tarfile" -> "io" [];
	"setuptools._vendor.backports.tarfile" -> "shutil" [];
	"setuptools._vendor.backports.tarfile" -> "stat" [];
	"setuptools._vendor.backports.tarfile" -> "time" [];
	"setuptools._vendor.backports.tarfile" -> "struct" [];
	"setuptools._vendor.backports.tarfile" -> "copy" [];
	"setuptools._vendor.backports.tarfile" -> "re" [];
	"setuptools._vendor.backports.tarfile" -> "pwd" [];
	"setuptools._vendor.backports.tarfile" -> "grp" [];
	"setuptools._vendor.backports.tarfile" -> "zlib" [];
	"setuptools._vendor.backports.tarfile" -> "bz2" [];
	"setuptools._vendor.backports.tarfile" -> "lzma" [];
	"setuptools._vendor.backports.tarfile" -> "warnings" [];
	"setuptools._vendor.backports.tarfile" -> "gzip" [];
	"setuptools._vendor.backports.tarfile" -> "argparse" [];
	"setuptools._vendor.backports.tarfile.compat.py38" -> "sys" [];
	"setuptools._vendor.jaraco.functools" -> "functools" [];
	"setuptools._vendor.jaraco.functools" -> "inspect" [];
	"setuptools._vendor.jaraco.functools" -> "itertools" [];
	"setuptools._vendor.jaraco.functools" -> "operator" [];
	"setuptools._vendor.jaraco.functools" -> "time" [];
	"setuptools._vendor.jaraco.functools" -> "types" [];
	"setuptools._vendor.jaraco.functools" -> "warnings" [];
	"setuptools._vendor.jaraco.functools" -> "more_itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "math" [];
	"setuptools._vendor.more_itertools.recipes" -> "operator" [];
	"setuptools._vendor.more_itertools.recipes" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "functools" [];
	"setuptools._vendor.more_itertools.recipes" -> "itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "random" [];
	"setuptools._vendor.more_itertools.recipes" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "math" [];
	"setuptools._vendor.more_itertools.more" -> "warnings" [];
	"setuptools._vendor.more_itertools.more" -> "collections" [];
	"setuptools._vendor.more_itertools.more" -> "functools" [];
	"setuptools._vendor.more_itertools.more" -> "heapq" [];
	"setuptools._vendor.more_itertools.more" -> "itertools" [];
	"setuptools._vendor.more_itertools.more" -> "queue" [];
	"setuptools._vendor.more_itertools.more" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "operator" [];
	"setuptools._vendor.more_itertools.more" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "time" [];
	"setuptools._distutils" -> "importlib" [];
	"setuptools._distutils" -> "sys" [];
	"_ssl" -> "socket" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "os" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "datetime" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "re" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "time" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "random" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "hashlib" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "requests" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "pandas" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "sre_compile" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "weakref" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "heapq" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "sre_parse" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "functools" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "keyword" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "abc" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "warnings" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "operator" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "posixpath" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "sre_constants" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "traceback" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "stat" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "types" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "genericpath" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "reprlib" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "encodings" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "io" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "codecs" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "enum" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "linecache" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "copyreg" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "_collections_abc" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "_weakrefset" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "ntpath" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "locale" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "collections" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "numpy" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "openpyxl" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" [];
	"D:\JAVA\code\pdd_project_final\main.py" -> "D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "os" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pathlib" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "sys" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "warnings" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pkg_resources" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pyimod02_importers" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "os" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "setuptools" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "_distutils_hack" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "sys" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "multiprocessing" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "subprocess" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" -> "pkgutil" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" -> "pyimod02_importers" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "inspect" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "os" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "sys" [];
	"D:\JAVA\code\pdd_project_final\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "zipfile" [];
	"requests" -> "warnings" [];
	"requests" -> "charset_normalizer" [];
	"requests" -> "chardet" [];
	"requests" -> "ssl" [];
	"requests" -> "cryptography" [];
	"requests" -> "logging" [];
	"requests.structures" -> "collections" [];
	"requests.compat" -> "importlib" [];
	"requests.compat" -> "sys" [];
	"requests.compat" -> "simplejson" [];
	"requests.compat" -> "json" [];
	"requests.compat" -> "collections" [];
	"requests.compat" -> "http" [];
	"requests.compat" -> "io" [];
	"http.cookies" -> "re" [];
	"http.cookies" -> "string" [];
	"http.cookies" -> "types" [];
	"http.cookies" -> "time" [];
	"requests.models" -> "datetime" [];
	"requests.models" -> "io" [];
	"requests.models" -> "idna" [];
	"idna.intranges" -> "bisect" [];
	"idna.intranges" -> "typing" [];
	"idna.core" -> "bisect" [];
	"idna.core" -> "re" [];
	"idna.core" -> "unicodedata" [];
	"idna.core" -> "typing" [];
	"idna.uts46data" -> "typing" [];
	"requests.cookies" -> "calendar" [];
	"requests.cookies" -> "copy" [];
	"requests.cookies" -> "time" [];
	"requests.cookies" -> "threading" [];
	"requests.cookies" -> "dummy_threading" [];
	"requests.auth" -> "hashlib" [];
	"requests.auth" -> "os" [];
	"requests.auth" -> "re" [];
	"requests.auth" -> "threading" [];
	"requests.auth" -> "time" [];
	"requests.auth" -> "warnings" [];
	"requests.auth" -> "base64" [];
	"requests._internal_utils" -> "re" [];
	"urllib3.util" -> "__future__" [];
	"urllib3.util.wait" -> "__future__" [];
	"urllib3.util.wait" -> "select" [];
	"urllib3.util.wait" -> "socket" [];
	"urllib3.util.wait" -> "functools" [];
	"urllib3.util.url" -> "__future__" [];
	"urllib3.util.url" -> "re" [];
	"urllib3.util.url" -> "typing" [];
	"urllib3.util.url" -> "idna" [];
	"urllib3.util.util" -> "__future__" [];
	"urllib3.util.util" -> "typing" [];
	"urllib3.util.util" -> "types" [];
	"urllib3.util.timeout" -> "__future__" [];
	"urllib3.util.timeout" -> "time" [];
	"urllib3.util.timeout" -> "typing" [];
	"urllib3.util.timeout" -> "enum" [];
	"urllib3.util.timeout" -> "socket" [];
	"urllib3.util.ssl_" -> "__future__" [];
	"urllib3.util.ssl_" -> "hashlib" [];
	"urllib3.util.ssl_" -> "hmac" [];
	"urllib3.util.ssl_" -> "os" [];
	"urllib3.util.ssl_" -> "socket" [];
	"urllib3.util.ssl_" -> "sys" [];
	"urllib3.util.ssl_" -> "typing" [];
	"urllib3.util.ssl_" -> "warnings" [];
	"urllib3.util.ssl_" -> "binascii" [];
	"urllib3.util.ssl_" -> "ssl" [];
	"urllib3.util.ssltransport" -> "__future__" [];
	"urllib3.util.ssltransport" -> "io" [];
	"urllib3.util.ssltransport" -> "socket" [];
	"urllib3.util.ssltransport" -> "ssl" [];
	"urllib3.util.ssltransport" -> "typing" [];
	"urllib3.util.ssltransport" -> "typing_extensions" [];
	"urllib3.util.retry" -> "__future__" [];
	"urllib3.util.retry" -> "email" [];
	"urllib3.util.retry" -> "logging" [];
	"urllib3.util.retry" -> "random" [];
	"urllib3.util.retry" -> "re" [];
	"urllib3.util.retry" -> "time" [];
	"urllib3.util.retry" -> "typing" [];
	"urllib3.util.retry" -> "itertools" [];
	"urllib3.util.retry" -> "types" [];
	"urllib3.util.retry" -> "typing_extensions" [];
	"urllib3.response" -> "__future__" [];
	"urllib3.response" -> "collections" [];
	"urllib3.response" -> "io" [];
	"urllib3.response" -> "json" [];
	"urllib3.response" -> "logging" [];
	"urllib3.response" -> "re" [];
	"urllib3.response" -> "socket" [];
	"urllib3.response" -> "sys" [];
	"urllib3.response" -> "typing" [];
	"urllib3.response" -> "warnings" [];
	"urllib3.response" -> "zlib" [];
	"urllib3.response" -> "contextlib" [];
	"urllib3.response" -> "brotlicffi" [];
	"urllib3.response" -> "brotli" [];
	"urllib3.response" -> "compression" [];
	"urllib3.response" -> "zstandard" [];
	"urllib3.connection" -> "__future__" [];
	"urllib3.connection" -> "datetime" [];
	"urllib3.connection" -> "logging" [];
	"urllib3.connection" -> "os" [];
	"urllib3.connection" -> "re" [];
	"urllib3.connection" -> "socket" [];
	"urllib3.connection" -> "sys" [];
	"urllib3.connection" -> "threading" [];
	"urllib3.connection" -> "typing" [];
	"urllib3.connection" -> "warnings" [];
	"urllib3.connection" -> "ssl" [];
	"urllib3.util.ssl_match_hostname" -> "__future__" [];
	"urllib3.util.ssl_match_hostname" -> "ipaddress" [];
	"urllib3.util.ssl_match_hostname" -> "re" [];
	"urllib3.util.ssl_match_hostname" -> "typing" [];
	"urllib3._version" -> "typing" [];
	"urllib3.http2.probe" -> "__future__" [];
	"urllib3.http2.probe" -> "threading" [];
	"urllib3.http2" -> "__future__" [];
	"urllib3.http2" -> "typing" [];
	"urllib3.http2.connection" -> "__future__" [];
	"urllib3.http2.connection" -> "logging" [];
	"urllib3.http2.connection" -> "re" [];
	"urllib3.http2.connection" -> "threading" [];
	"urllib3.http2.connection" -> "types" [];
	"urllib3.http2.connection" -> "typing" [];
	"urllib3.http2.connection" -> "h2" [];
	"urllib3.http2.connection" -> "'h2.connection'" [];
	"urllib3.http2.connection" -> "'h2.events'" [];
	"urllib3._collections" -> "__future__" [];
	"urllib3._collections" -> "typing" [];
	"urllib3._collections" -> "collections" [];
	"urllib3._collections" -> "enum" [];
	"urllib3._collections" -> "threading" [];
	"urllib3._collections" -> "typing_extensions" [];
	"urllib3._base_connection" -> "__future__" [];
	"urllib3._base_connection" -> "typing" [];
	"urllib3._base_connection" -> "ssl" [];
	"urllib3.connectionpool" -> "__future__" [];
	"urllib3.connectionpool" -> "errno" [];
	"urllib3.connectionpool" -> "logging" [];
	"urllib3.connectionpool" -> "queue" [];
	"urllib3.connectionpool" -> "sys" [];
	"urllib3.connectionpool" -> "typing" [];
	"urllib3.connectionpool" -> "warnings" [];
	"urllib3.connectionpool" -> "weakref" [];
	"urllib3.connectionpool" -> "socket" [];
	"urllib3.connectionpool" -> "types" [];
	"urllib3.connectionpool" -> "ssl" [];
	"urllib3.connectionpool" -> "typing_extensions" [];
	"urllib3.util.proxy" -> "__future__" [];
	"urllib3.util.proxy" -> "typing" [];
	"urllib3._request_methods" -> "__future__" [];
	"urllib3._request_methods" -> "json" [];
	"urllib3._request_methods" -> "typing" [];
	"urllib3.util.response" -> "__future__" [];
	"urllib3.util.request" -> "__future__" [];
	"urllib3.util.request" -> "io" [];
	"urllib3.util.request" -> "typing" [];
	"urllib3.util.request" -> "base64" [];
	"urllib3.util.request" -> "enum" [];
	"urllib3.util.request" -> "brotlicffi" [];
	"urllib3.util.request" -> "brotli" [];
	"urllib3.util.request" -> "compression" [];
	"urllib3.util.request" -> "zstandard" [];
	"urllib3.util.connection" -> "__future__" [];
	"urllib3.util.connection" -> "socket" [];
	"urllib3.util.connection" -> "typing" [];
	"urllib3.filepost" -> "__future__" [];
	"urllib3.filepost" -> "binascii" [];
	"urllib3.filepost" -> "codecs" [];
	"urllib3.filepost" -> "os" [];
	"urllib3.filepost" -> "typing" [];
	"urllib3.filepost" -> "io" [];
	"urllib3.fields" -> "__future__" [];
	"urllib3.fields" -> "mimetypes" [];
	"urllib3.fields" -> "typing" [];
	"urllib3.fields" -> "warnings" [];
	"requests.sessions" -> "os" [];
	"requests.sessions" -> "sys" [];
	"requests.sessions" -> "time" [];
	"requests.sessions" -> "collections" [];
	"requests.sessions" -> "datetime" [];
	"requests.adapters" -> "os.path" [];
	"requests.adapters" -> "socket" [];
	"requests.adapters" -> "typing" [];
	"requests.adapters" -> "warnings" [];
	"urllib3.contrib.socks" -> "__future__" [];
	"urllib3.contrib.socks" -> "socks" [];
	"urllib3.contrib.socks" -> "warnings" [];
	"urllib3.contrib.socks" -> "typing" [];
	"urllib3.contrib.socks" -> "socket" [];
	"urllib3.contrib.socks" -> "ssl" [];
	"urllib3.poolmanager" -> "__future__" [];
	"urllib3.poolmanager" -> "functools" [];
	"urllib3.poolmanager" -> "logging" [];
	"urllib3.poolmanager" -> "typing" [];
	"urllib3.poolmanager" -> "warnings" [];
	"urllib3.poolmanager" -> "types" [];
	"urllib3.poolmanager" -> "ssl" [];
	"urllib3.poolmanager" -> "typing_extensions" [];
	"requests.utils" -> "codecs" [];
	"requests.utils" -> "contextlib" [];
	"requests.utils" -> "io" [];
	"requests.utils" -> "os" [];
	"requests.utils" -> "re" [];
	"requests.utils" -> "socket" [];
	"requests.utils" -> "struct" [];
	"requests.utils" -> "sys" [];
	"requests.utils" -> "tempfile" [];
	"requests.utils" -> "warnings" [];
	"requests.utils" -> "zipfile" [];
	"requests.utils" -> "collections" [];
	"requests.utils" -> "winreg" [];
	"requests.utils" -> "netrc" [];
	"requests.certs" -> "certifi" [];
	"certifi.core" -> "sys" [];
	"certifi.core" -> "atexit" [];
	"requests.packages" -> "sys" [];
	"urllib3.exceptions" -> "__future__" [];
	"urllib3.exceptions" -> "socket" [];
	"urllib3.exceptions" -> "typing" [];
	"urllib3.exceptions" -> "warnings" [];
	"urllib3.contrib.pyopenssl" -> "__future__" [];
	"urllib3.contrib.pyopenssl" -> "OpenSSL" [];
	"urllib3.contrib.pyopenssl" -> "cryptography" [];
	"urllib3.contrib.pyopenssl" -> "'cryptography.x509'" [];
	"urllib3.contrib.pyopenssl" -> "logging" [];
	"urllib3.contrib.pyopenssl" -> "ssl" [];
	"urllib3.contrib.pyopenssl" -> "typing" [];
	"urllib3.contrib.pyopenssl" -> "io" [];
	"urllib3.contrib.pyopenssl" -> "socket" [];
	"urllib3.contrib.pyopenssl" -> "'OpenSSL.crypto'" [];
	"urllib3.contrib.pyopenssl" -> "idna" [];
	"urllib3" -> "__future__" [];
	"urllib3" -> "logging" [];
	"urllib3" -> "sys" [];
	"urllib3" -> "typing" [];
	"urllib3" -> "warnings" [];
	"urllib3" -> "ssl" [];
	"urllib3.contrib.emscripten" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "os" [];
	"urllib3.contrib.emscripten.connection" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "__future__" [];
	"urllib3.contrib.emscripten.response" -> "json" [];
	"urllib3.contrib.emscripten.response" -> "logging" [];
	"urllib3.contrib.emscripten.response" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "contextlib" [];
	"urllib3.contrib.emscripten.response" -> "dataclasses" [];
	"urllib3.contrib.emscripten.response" -> "io" [];
	"urllib3.contrib.emscripten.request" -> "__future__" [];
	"urllib3.contrib.emscripten.request" -> "dataclasses" [];
	"urllib3.contrib.emscripten.fetch" -> "__future__" [];
	"urllib3.contrib.emscripten.fetch" -> "io" [];
	"urllib3.contrib.emscripten.fetch" -> "json" [];
	"urllib3.contrib.emscripten.fetch" -> "typing" [];
	"urllib3.contrib.emscripten.fetch" -> "js" [];
	"urllib3.contrib.emscripten.fetch" -> "pyodide" [];
	"urllib3.contrib.emscripten.fetch" -> "typing_extensions" [];
	"urllib3.contrib.emscripten.fetch" -> "'pyodide.ffi'" [];
	"collections.abc" -> "_collections_abc" [];
	"collections" -> "_collections_abc" [];
	"collections" -> "sys" [];
	"collections" -> "itertools" [];
	"collections" -> "keyword" [];
	"collections" -> "operator" [];
	"collections" -> "reprlib" [];
	"collections" -> "_weakref" [];
	"collections" -> "_collections" [];
	"collections" -> "heapq" [];
	"collections" -> "copy" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "_collections_abc" [];
	"locale" -> "builtins" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "warnings" [];
	"locale" -> "os" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "types" [];
	"_collections_abc" -> "abc" [];
	"_collections_abc" -> "sys" [];
	"_collections_abc" -> "warnings" [];
	"copyreg" -> "functools" [];
	"copyreg" -> "operator" [];
	"linecache" -> "functools" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"linecache" -> "tokenize" [];
	"enum" -> "sys" [];
	"enum" -> "builtins" [];
	"enum" -> "types" [];
	"enum" -> "operator" [];
	"enum" -> "functools" [];
	"enum" -> "warnings" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"encodings.zlib_codec" -> "codecs" [];
	"encodings.zlib_codec" -> "zlib" [];
	"encodings.uu_codec" -> "codecs" [];
	"encodings.uu_codec" -> "binascii" [];
	"encodings.uu_codec" -> "io" [];
	"encodings.utf_8_sig" -> "codecs" [];
	"encodings.utf_8" -> "codecs" [];
	"encodings.utf_7" -> "codecs" [];
	"encodings.utf_32_le" -> "codecs" [];
	"encodings.utf_32_be" -> "codecs" [];
	"encodings.utf_32" -> "codecs" [];
	"encodings.utf_32" -> "sys" [];
	"encodings.utf_16_le" -> "codecs" [];
	"encodings.utf_16_be" -> "codecs" [];
	"encodings.utf_16" -> "codecs" [];
	"encodings.utf_16" -> "sys" [];
	"encodings.unicode_escape" -> "codecs" [];
	"encodings.undefined" -> "codecs" [];
	"encodings.tis_620" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_codecs_jp" [];
	"encodings.shift_jisx0213" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_multibytecodec" [];
	"encodings.shift_jis_2004" -> "_codecs_jp" [];
	"encodings.shift_jis_2004" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_multibytecodec" [];
	"encodings.shift_jis" -> "_codecs_jp" [];
	"encodings.shift_jis" -> "codecs" [];
	"encodings.shift_jis" -> "_multibytecodec" [];
	"encodings.rot_13" -> "codecs" [];
	"encodings.rot_13" -> "sys" [];
	"encodings.raw_unicode_escape" -> "codecs" [];
	"encodings.quopri_codec" -> "codecs" [];
	"encodings.quopri_codec" -> "quopri" [];
	"encodings.quopri_codec" -> "io" [];
	"encodings.punycode" -> "codecs" [];
	"encodings.ptcp154" -> "codecs" [];
	"encodings.palmos" -> "codecs" [];
	"encodings.oem" -> "codecs" [];
	"encodings.mbcs" -> "codecs" [];
	"encodings.mac_turkish" -> "codecs" [];
	"encodings.mac_romanian" -> "codecs" [];
	"encodings.mac_roman" -> "codecs" [];
	"encodings.mac_latin2" -> "codecs" [];
	"encodings.mac_iceland" -> "codecs" [];
	"encodings.mac_greek" -> "codecs" [];
	"encodings.mac_farsi" -> "codecs" [];
	"encodings.mac_cyrillic" -> "codecs" [];
	"encodings.mac_croatian" -> "codecs" [];
	"encodings.mac_arabic" -> "codecs" [];
	"encodings.latin_1" -> "codecs" [];
	"encodings.kz1048" -> "codecs" [];
	"encodings.koi8_u" -> "codecs" [];
	"encodings.koi8_t" -> "codecs" [];
	"encodings.koi8_r" -> "codecs" [];
	"encodings.johab" -> "_codecs_kr" [];
	"encodings.johab" -> "codecs" [];
	"encodings.johab" -> "_multibytecodec" [];
	"encodings.iso8859_9" -> "codecs" [];
	"encodings.iso8859_8" -> "codecs" [];
	"encodings.iso8859_7" -> "codecs" [];
	"encodings.iso8859_6" -> "codecs" [];
	"encodings.iso8859_5" -> "codecs" [];
	"encodings.iso8859_4" -> "codecs" [];
	"encodings.iso8859_3" -> "codecs" [];
	"encodings.iso8859_2" -> "codecs" [];
	"encodings.iso8859_16" -> "codecs" [];
	"encodings.iso8859_15" -> "codecs" [];
	"encodings.iso8859_14" -> "codecs" [];
	"encodings.iso8859_13" -> "codecs" [];
	"encodings.iso8859_11" -> "codecs" [];
	"encodings.iso8859_10" -> "codecs" [];
	"encodings.iso8859_1" -> "codecs" [];
	"encodings.iso2022_kr" -> "_codecs_iso2022" [];
	"encodings.iso2022_kr" -> "codecs" [];
	"encodings.iso2022_kr" -> "_multibytecodec" [];
	"encodings.iso2022_jp_ext" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_ext" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_multibytecodec" [];
	"encodings.iso2022_jp_3" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_3" -> "codecs" [];
	"encodings.iso2022_jp_3" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2004" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2004" -> "codecs" [];
	"encodings.iso2022_jp_2004" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_multibytecodec" [];
	"encodings.iso2022_jp_1" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_1" -> "codecs" [];
	"encodings.iso2022_jp_1" -> "_multibytecodec" [];
	"encodings.iso2022_jp" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp" -> "codecs" [];
	"encodings.iso2022_jp" -> "_multibytecodec" [];
	"encodings.idna" -> "stringprep" [];
	"encodings.idna" -> "re" [];
	"encodings.idna" -> "codecs" [];
	"encodings.idna" -> "unicodedata" [];
	"stringprep" -> "unicodedata" [];
	"encodings.hz" -> "_codecs_cn" [];
	"encodings.hz" -> "codecs" [];
	"encodings.hz" -> "_multibytecodec" [];
	"encodings.hp_roman8" -> "codecs" [];
	"encodings.hex_codec" -> "codecs" [];
	"encodings.hex_codec" -> "binascii" [];
	"encodings.gbk" -> "_codecs_cn" [];
	"encodings.gbk" -> "codecs" [];
	"encodings.gbk" -> "_multibytecodec" [];
	"encodings.gb2312" -> "_codecs_cn" [];
	"encodings.gb2312" -> "codecs" [];
	"encodings.gb2312" -> "_multibytecodec" [];
	"encodings.gb18030" -> "_codecs_cn" [];
	"encodings.gb18030" -> "codecs" [];
	"encodings.gb18030" -> "_multibytecodec" [];
	"encodings.euc_kr" -> "_codecs_kr" [];
	"encodings.euc_kr" -> "codecs" [];
	"encodings.euc_kr" -> "_multibytecodec" [];
	"encodings.euc_jp" -> "_codecs_jp" [];
	"encodings.euc_jp" -> "codecs" [];
	"encodings.euc_jp" -> "_multibytecodec" [];
	"encodings.euc_jisx0213" -> "_codecs_jp" [];
	"encodings.euc_jisx0213" -> "codecs" [];
	"encodings.euc_jisx0213" -> "_multibytecodec" [];
	"encodings.euc_jis_2004" -> "_codecs_jp" [];
	"encodings.euc_jis_2004" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_multibytecodec" [];
	"encodings.cp950" -> "_codecs_tw" [];
	"encodings.cp950" -> "codecs" [];
	"encodings.cp950" -> "_multibytecodec" [];
	"encodings.cp949" -> "_codecs_kr" [];
	"encodings.cp949" -> "codecs" [];
	"encodings.cp949" -> "_multibytecodec" [];
	"encodings.cp932" -> "_codecs_jp" [];
	"encodings.cp932" -> "codecs" [];
	"encodings.cp932" -> "_multibytecodec" [];
	"encodings.cp875" -> "codecs" [];
	"encodings.cp874" -> "codecs" [];
	"encodings.cp869" -> "codecs" [];
	"encodings.cp866" -> "codecs" [];
	"encodings.cp865" -> "codecs" [];
	"encodings.cp864" -> "codecs" [];
	"encodings.cp863" -> "codecs" [];
	"encodings.cp862" -> "codecs" [];
	"encodings.cp861" -> "codecs" [];
	"encodings.cp860" -> "codecs" [];
	"encodings.cp858" -> "codecs" [];
	"encodings.cp857" -> "codecs" [];
	"encodings.cp856" -> "codecs" [];
	"encodings.cp855" -> "codecs" [];
	"encodings.cp852" -> "codecs" [];
	"encodings.cp850" -> "codecs" [];
	"encodings.cp775" -> "codecs" [];
	"encodings.cp737" -> "codecs" [];
	"encodings.cp720" -> "codecs" [];
	"encodings.cp500" -> "codecs" [];
	"encodings.cp437" -> "codecs" [];
	"encodings.cp424" -> "codecs" [];
	"encodings.cp273" -> "codecs" [];
	"encodings.cp1258" -> "codecs" [];
	"encodings.cp1257" -> "codecs" [];
	"encodings.cp1256" -> "codecs" [];
	"encodings.cp1255" -> "codecs" [];
	"encodings.cp1254" -> "codecs" [];
	"encodings.cp1253" -> "codecs" [];
	"encodings.cp1252" -> "codecs" [];
	"encodings.cp1251" -> "codecs" [];
	"encodings.cp1250" -> "codecs" [];
	"encodings.cp1140" -> "codecs" [];
	"encodings.cp1125" -> "codecs" [];
	"encodings.cp1026" -> "codecs" [];
	"encodings.cp1006" -> "codecs" [];
	"encodings.cp037" -> "codecs" [];
	"encodings.charmap" -> "codecs" [];
	"encodings.bz2_codec" -> "codecs" [];
	"encodings.bz2_codec" -> "bz2" [];
	"encodings.big5hkscs" -> "_codecs_hk" [];
	"encodings.big5hkscs" -> "codecs" [];
	"encodings.big5hkscs" -> "_multibytecodec" [];
	"encodings.big5" -> "_codecs_tw" [];
	"encodings.big5" -> "codecs" [];
	"encodings.big5" -> "_multibytecodec" [];
	"encodings.base64_codec" -> "codecs" [];
	"encodings.base64_codec" -> "base64" [];
	"encodings.ascii" -> "codecs" [];
	"encodings" -> "codecs" [];
	"encodings" -> "sys" [];
	"encodings" -> "_winapi" [];
	"reprlib" -> "builtins" [];
	"reprlib" -> "itertools" [];
	"reprlib" -> "_thread" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"types" -> "sys" [];
	"types" -> "functools" [];
	"types" -> "_collections_abc" [];
	"stat" -> "_stat" [];
	"traceback" -> "itertools" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"traceback" -> "textwrap" [];
	"traceback" -> "contextlib" [];
	"traceback" -> "ast" [];
	"traceback" -> "unicodedata" [];
	"sre_constants" -> "warnings" [];
	"sre_constants" -> "re" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"posixpath" -> "posix" [];
	"operator" -> "builtins" [];
	"operator" -> "functools" [];
	"operator" -> "_operator" [];
	"warnings" -> "sys" [];
	"warnings" -> "linecache" [];
	"warnings" -> "tracemalloc" [];
	"warnings" -> "re" [];
	"warnings" -> "builtins" [];
	"warnings" -> "traceback" [];
	"warnings" -> "_warnings" [];
	"abc" -> "_abc" [];
	"abc" -> "_py_abc" [];
	"_py_abc" -> "_weakrefset" [];
	"functools" -> "abc" [];
	"functools" -> "collections" [];
	"functools" -> "reprlib" [];
	"functools" -> "_thread" [];
	"functools" -> "types" [];
	"functools" -> "_functools" [];
	"functools" -> "weakref" [];
	"functools" -> "typing" [];
	"sre_parse" -> "warnings" [];
	"sre_parse" -> "re" [];
	"heapq" -> "_heapq" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "_collections_abc" [];
	"weakref" -> "sys" [];
	"weakref" -> "itertools" [];
	"weakref" -> "copy" [];
	"weakref" -> "atexit" [];
	"weakref" -> "gc" [];
	"os" -> "abc" [];
	"os" -> "sys" [];
	"os" -> "stat" [];
	"os" -> "_collections_abc" [];
	"os" -> "posix" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "ntpath" [];
	"os" -> "os.path" [];
	"os" -> "warnings" [];
	"os" -> "subprocess" [];
	"os" -> "io" [];
	"re._parser" -> "unicodedata" [];
	"re._parser" -> "warnings" [];
	"re._constants" -> "_sre" [];
	"re._compiler" -> "_sre" [];
	"re._compiler" -> "sys" [];
	"re" -> "enum" [];
	"re" -> "functools" [];
	"re" -> "_sre" [];
	"re" -> "warnings" [];
	"re" -> "copyreg" [];
	"sre_compile" -> "warnings" [];
	"sre_compile" -> "re" [];
	"_posixsubprocess" -> "gc" [];
	"datetime" -> "_datetime" [];
	"datetime" -> "_pydatetime" [];
	"datetime" -> "time" [];
	"_pydatetime" -> "time" [];
	"_pydatetime" -> "math" [];
	"_pydatetime" -> "sys" [];
	"_pydatetime" -> "operator" [];
	"_pydatetime" -> "warnings" [];
	"_pydatetime" -> "_strptime" [];
	"_strptime" -> "time" [];
	"_strptime" -> "locale" [];
	"_strptime" -> "calendar" [];
	"_strptime" -> "re" [];
	"_strptime" -> "datetime" [];
	"_strptime" -> "_thread" [];
	"_datetime" -> "time" [];
	"_datetime" -> "_strptime" [];
	"_pickle" -> "codecs" [];
	"_pickle" -> "copyreg" [];
	"_pickle" -> "_compat_pickle" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "_winapi" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "string" [];
	"posix" -> "resource" [];
	"_sre" -> "copy" [];
	"_sre" -> "re" [];
	"codecs" -> "builtins" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"time" -> "_strptime" [];
	"gc" -> "time" [];
	"<PyiModuleGraph>" -> "setuptools" [];
	"<PyiModuleGraph>" -> "pandas" [];
	"<PyiModuleGraph>" -> "numpy" [];
	"setuptools._distutils.util" -> "importlib" [];
	"setuptools._distutils.util" -> "collections" [];
	"setuptools._distutils.util" -> "jaraco" [];
	"py_compile" -> "importlib" [];
	"zipfile" -> "importlib" [];
	"importlib.metadata._adapters" -> "email" [];
	"logging" -> "collections" [];
	"email.utils" -> "urllib" [];
	"setuptools._distutils.sysconfig" -> "jaraco" [];
	"setuptools._distutils.compat" -> "collections" [];
	"setuptools._distutils.compilers.C.base" -> "collections" [];
	"setuptools._distutils.fancy_getopt" -> "collections" [];
	"setuptools._distutils.compilers.C.msvc" -> "unittest" [];
	"setuptools._distutils.compilers.C.msvc" -> "collections" [];
	"asyncio.base_events" -> "concurrent" [];
	"runpy" -> "importlib" [];
	"multiprocessing.connection" -> "xmlrpc" [];
	"xmlrpc.client" -> "http" [];
	"xmlrpc.client" -> "urllib" [];
	"xmlrpc.client" -> "xml" [];
	"xml.sax.expatreader" -> "xml" [];
	"xml.sax.saxutils" -> "urllib" [];
	"urllib.request" -> "http" [];
	"nturl2path" -> "urllib" [];
	"mimetypes" -> "urllib" [];
	"http.cookiejar" -> "urllib" [];
	"http.client" -> "email" [];
	"http.client" -> "collections" [];
	"http.client" -> "urllib" [];
	"asyncio.tasks" -> "concurrent" [];
	"asyncio.futures" -> "concurrent" [];
	"asyncio.coroutines" -> "collections" [];
	"distutils" -> "setuptools" [];
	"setuptools._distutils.spawn" -> "collections" [];
	"setuptools._distutils._modified" -> "collections" [];
	"setuptools._distutils._modified" -> "jaraco" [];
	"pathlib" -> "urllib" [];
	"setuptools._distutils.core" -> "collections" [];
	"setuptools._distutils.extension" -> "collections" [];
	"setuptools._distutils.dist" -> "collections" [];
	"setuptools._distutils.dist" -> "packaging" [];
	"packaging.tags" -> "importlib" [];
	"setuptools._distutils.cmd" -> "collections" [];
	"openpyxl.worksheet.smart_tag" -> "openpyxl" [];
	"openpyxl.reader.excel" -> "openpyxl" [];
	"openpyxl.chart.reference" -> "openpyxl" [];
	"openpyxl.utils.formulas" -> "openpyxl" [];
	"openpyxl.worksheet.worksheet" -> "openpyxl" [];
	"openpyxl.worksheet.print_settings" -> "openpyxl" [];
	"openpyxl.worksheet.formula" -> "openpyxl" [];
	"openpyxl.worksheet.scenario" -> "openpyxl" [];
	"openpyxl.worksheet.pagebreak" -> "openpyxl" [];
	"openpyxl.worksheet.properties" -> "openpyxl" [];
	"openpyxl.styles.colors" -> "openpyxl" [];
	"openpyxl.styles.named_styles" -> "openpyxl" [];
	"openpyxl.styles.cell_style" -> "openpyxl" [];
	"openpyxl.descriptors.excel" -> "openpyxl" [];
	"openpyxl.styles.protection" -> "openpyxl" [];
	"openpyxl.styles.numbers" -> "openpyxl" [];
	"openpyxl.styles.fonts" -> "openpyxl" [];
	"openpyxl.descriptors.nested" -> "openpyxl" [];
	"openpyxl.styles.fills" -> "openpyxl" [];
	"openpyxl.styles.borders" -> "openpyxl" [];
	"openpyxl.styles.alignment" -> "openpyxl" [];
	"openpyxl.descriptors.sequence" -> "openpyxl" [];
	"openpyxl.worksheet.merge" -> "openpyxl" [];
	"openpyxl.cell.cell" -> "openpyxl" [];
	"openpyxl.cell.rich_text" -> "openpyxl" [];
	"openpyxl.cell.text" -> "openpyxl" [];
	"openpyxl.worksheet.hyperlink" -> "openpyxl" [];
	"openpyxl.styles.proxy" -> "openpyxl" [];
	"openpyxl.worksheet.cell_range" -> "openpyxl" [];
	"openpyxl.worksheet.views" -> "openpyxl" [];
	"openpyxl.worksheet.filters" -> "openpyxl" [];
	"openpyxl.worksheet.protection" -> "openpyxl" [];
	"openpyxl.worksheet.dimensions" -> "openpyxl" [];
	"openpyxl.worksheet.page" -> "openpyxl" [];
	"openpyxl.worksheet.datavalidation" -> "openpyxl" [];
	"openpyxl.formula.translate" -> "openpyxl" [];
	"openpyxl.workbook.defined_name" -> "openpyxl" [];
	"openpyxl.worksheet.header_footer" -> "openpyxl" [];
	"openpyxl.formatting.formatting" -> "openpyxl" [];
	"openpyxl.formatting.rule" -> "openpyxl" [];
	"openpyxl.styles.differential" -> "openpyxl" [];
	"openpyxl.chart.series_factory" -> "openpyxl" [];
	"openpyxl.chart.series" -> "openpyxl" [];
	"openpyxl.chart.trendline" -> "openpyxl" [];
	"openpyxl.chart.layout" -> "openpyxl" [];
	"openpyxl.chart.text" -> "openpyxl" [];
	"openpyxl.drawing.text" -> "openpyxl" [];
	"openpyxl.drawing.geometry" -> "openpyxl" [];
	"openpyxl.drawing.line" -> "openpyxl" [];
	"openpyxl.drawing.fill" -> "openpyxl" [];
	"openpyxl.drawing.effect" -> "openpyxl" [];
	"openpyxl.drawing.colors" -> "openpyxl" [];
	"openpyxl.chart.marker" -> "openpyxl" [];
	"openpyxl.chart.label" -> "openpyxl" [];
	"openpyxl.chart.error_bar" -> "openpyxl" [];
	"openpyxl.chart.shapes" -> "openpyxl" [];
	"openpyxl.chart.data_source" -> "openpyxl" [];
	"openpyxl.chart.surface_chart" -> "openpyxl" [];
	"openpyxl.chart.axis" -> "openpyxl" [];
	"openpyxl.chart.title" -> "openpyxl" [];
	"openpyxl.chart.descriptors" -> "openpyxl" [];
	"openpyxl.chart._3d" -> "openpyxl" [];
	"openpyxl.chart._chart" -> "openpyxl" [];
	"openpyxl.chart.legend" -> "openpyxl" [];
	"openpyxl.chart.stock_chart" -> "openpyxl" [];
	"openpyxl.chart.updown_bars" -> "openpyxl" [];
	"openpyxl.chart.scatter_chart" -> "openpyxl" [];
	"openpyxl.chart.radar_chart" -> "openpyxl" [];
	"openpyxl.chart.pie_chart" -> "openpyxl" [];
	"openpyxl.chart.line_chart" -> "openpyxl" [];
	"openpyxl.chart.bubble_chart" -> "openpyxl" [];
	"openpyxl.chart.bar_chart" -> "openpyxl" [];
	"openpyxl.chart.area_chart" -> "openpyxl" [];
	"openpyxl.chart.chartspace" -> "openpyxl" [];
	"openpyxl.chart.print_settings" -> "openpyxl" [];
	"openpyxl.chart.pivot" -> "openpyxl" [];
	"openpyxl.chart.plotarea" -> "openpyxl" [];
	"xml.etree.ElementTree" -> "xml" [];
	"openpyxl.drawing.spreadsheet_drawing" -> "openpyxl" [];
	"openpyxl.drawing.picture" -> "openpyxl" [];
	"openpyxl.drawing.properties" -> "openpyxl" [];
	"openpyxl.drawing.graphic" -> "openpyxl" [];
	"openpyxl.drawing.connector" -> "openpyxl" [];
	"openpyxl.worksheet.table" -> "openpyxl" [];
	"openpyxl.chartsheet.chartsheet" -> "openpyxl" [];
	"openpyxl.chartsheet.publish" -> "openpyxl" [];
	"openpyxl.chartsheet.custom" -> "openpyxl" [];
	"openpyxl.chartsheet.views" -> "openpyxl" [];
	"openpyxl.chartsheet.protection" -> "openpyxl" [];
	"openpyxl.chartsheet.properties" -> "openpyxl" [];
	"openpyxl.chartsheet.relation" -> "openpyxl" [];
	"openpyxl.worksheet._reader" -> "openpyxl" [];
	"openpyxl.worksheet._read_only" -> "openpyxl" [];
	"openpyxl.cell.read_only" -> "openpyxl" [];
	"openpyxl.packaging.relationship" -> "openpyxl" [];
	"openpyxl.packaging.manifest" -> "openpyxl" [];
	"openpyxl.packaging.custom" -> "openpyxl" [];
	"openpyxl.packaging.core" -> "openpyxl" [];
	"openpyxl.styles.stylesheet" -> "openpyxl" [];
	"openpyxl.styles.table" -> "openpyxl" [];
	"openpyxl.reader.workbook" -> "openpyxl" [];
	"openpyxl.pivot.record" -> "openpyxl" [];
	"openpyxl.pivot.fields" -> "openpyxl" [];
	"openpyxl.pivot.cache" -> "openpyxl" [];
	"openpyxl.workbook.external_link.external" -> "openpyxl" [];
	"openpyxl.packaging.workbook" -> "openpyxl" [];
	"openpyxl.workbook.web" -> "openpyxl" [];
	"openpyxl.workbook.views" -> "openpyxl" [];
	"openpyxl.workbook.smart_tags" -> "openpyxl" [];
	"openpyxl.workbook.protection" -> "openpyxl" [];
	"openpyxl.workbook.properties" -> "openpyxl" [];
	"openpyxl.workbook.function_group" -> "openpyxl" [];
	"openpyxl.workbook.external_reference" -> "openpyxl" [];
	"openpyxl.comments.comment_sheet" -> "openpyxl" [];
	"openpyxl.comments.shape_writer" -> "openpyxl" [];
	"openpyxl.comments.author" -> "openpyxl" [];
	"openpyxl.pivot.table" -> "openpyxl" [];
	"openpyxl.workbook.workbook" -> "openpyxl" [];
	"openpyxl.workbook._writer" -> "openpyxl" [];
	"openpyxl.worksheet._write_only" -> "openpyxl" [];
	"numpy._core.overrides" -> "numpy" [];
	"numpy._core.numerictypes" -> "numpy" [];
	"numpy._core._ufunc_config" -> "numpy" [];
	"numpy._core.records" -> "numpy" [];
	"numpy._typing._array_like" -> "collections" [];
	"numpy._typing._shape" -> "collections" [];
	"numpy._typing._nested_sequence" -> "collections" [];
	"numpy._typing._nbit_base" -> "numpy" [];
	"numpy._typing._dtype_like" -> "collections" [];
	"charset_normalizer.utils" -> "encodings" [];
	"charset_normalizer.constant" -> "encodings" [];
	"charset_normalizer.models" -> "encodings" [];
	"numpy.f2py._backends._distutils" -> "numpy" [];
	"numpy.f2py.__version__" -> "numpy" [];
	"numpy.matrixlib.defmatrix" -> "numpy" [];
	"numpy.testing._private.utils" -> "concurrent" [];
	"numpy.testing._private.utils" -> "importlib" [];
	"pydoc" -> "importlib" [];
	"pydoc" -> "urllib" [];
	"pydoc" -> "pydoc_data" [];
	"pydoc" -> "http" [];
	"pydoc" -> "email" [];
	"http.server" -> "email" [];
	"http.server" -> "urllib" [];
	"numpy.testing._private.extbuild" -> "importlib" [];
	"numpy.lib._array_utils_impl" -> "numpy" [];
	"numpy.polynomial._polybase" -> "collections" [];
	"numpy.random.mtrand" -> "collections" [];
	"numpy.random.bit_generator" -> "collections" [];
	"numpy.random._pcg64" -> "numpy" [];
	"numpy.random._generator" -> "collections" [];
	"numpy.random._common" -> "collections" [];
	"numpy.fft._pocketfft" -> "numpy" [];
	"numpy.fft._helper" -> "numpy" [];
	"numpy.lib._type_check_impl" -> "numpy" [];
	"numpy._core.getlimits" -> "numpy" [];
	"numpy.lib._shape_base_impl" -> "numpy" [];
	"numpy.lib._polynomial_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "collections" [];
	"numpy.lib._datasource" -> "numpy" [];
	"numpy.lib._datasource" -> "urllib" [];
	"numpy.lib._function_base_impl" -> "collections" [];
	"numpy.lib.mixins" -> "numpy" [];
	"openpyxl.descriptors.serialisable" -> "openpyxl" [];
	"openpyxl.worksheet.errors" -> "openpyxl" [];
	"openpyxl.worksheet.custom" -> "openpyxl" [];
	"openpyxl.worksheet.controls" -> "openpyxl" [];
	"openpyxl.worksheet.ole" -> "openpyxl" [];
	"openpyxl.worksheet.cell_watch" -> "openpyxl" [];
	"openpyxl.utils.inference" -> "openpyxl" [];
	"pandas._libs.writers" -> "pandas" [];
	"pandas._typing" -> "collections" [];
	"pandas.tseries.holiday" -> "dateutil" [];
	"six" -> "importlib" [];
	"pandas.io.formats.format" -> "collections" [];
	"pandas.io.formats.csvs" -> "collections" [];
	"pandas.io.formats.csvs" -> "pandas" [];
	"pandas.core.arraylike" -> "pandas" [];
	"pandas.core.ops.common" -> "pandas" [];
	"pandas.core.ops.mask_ops" -> "pandas" [];
	"pandas.core.ops.invalid" -> "pandas" [];
	"pandas.core.ops.array_ops" -> "pandas" [];
	"pandas.core.ops.dispatch" -> "pandas" [];
	"pandas.core.computation.expressions" -> "pandas" [];
	"pandas.core.util.hashing" -> "collections" [];
	"pandas.core.computation.scope" -> "pandas" [];
	"pandas.core.computation.parsing" -> "collections" [];
	"pandas.core.computation.ops" -> "collections" [];
	"pandas.core.computation.engines" -> "pandas" [];
	"pandas.core.computation.align" -> "collections" [];
	"pandas.util._validators" -> "collections" [];
	"pandas.util._validators" -> "pandas" [];
	"pandas.core.computation.common" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "collections" [];
	"pandas.core.arrays.timedeltas" -> "collections" [];
	"pandas.core.arrays._ranges" -> "pandas" [];
	"pandas.core.arrays.datetimelike" -> "collections" [];
	"pandas.core.groupby.ops" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "collections" [];
	"pandas.core.arrays.categorical" -> "collections" [];
	"pandas.core.dtypes.concat" -> "collections" [];
	"pandas.core.dtypes.astype" -> "pandas" [];
	"pandas.core.strings.object_array" -> "collections" [];
	"pandas.core.strings.base" -> "collections" [];
	"pandas.core.groupby.groupby" -> "collections" [];
	"pandas.core.groupby.groupby" -> "pandas" [];
	"pandas.core._numba.kernels.var_" -> "pandas" [];
	"pandas.core._numba.kernels.sum_" -> "pandas" [];
	"pandas.core._numba.kernels.min_max_" -> "pandas" [];
	"pandas.core._numba.kernels.mean_" -> "pandas" [];
	"pandas.core.window.numba_" -> "pandas" [];
	"pandas.core.util.numba_" -> "pandas" [];
	"pandas.core.internals.blocks" -> "pandas" [];
	"pandas.core.internals.blocks" -> "collections" [];
	"pandas.core.array_algos.transforms" -> "pandas" [];
	"pandas.core.array_algos.replace" -> "pandas" [];
	"pandas.core.array_algos.quantile" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "collections" [];
	"pandas.core.arrays.string_arrow" -> "collections" [];
	"pandas.core.arrays.masked" -> "collections" [];
	"pandas.core.arrays._utils" -> "pandas" [];
	"pandas.core.array_algos.masked_reductions" -> "pandas" [];
	"pandas.core.array_algos.masked_accumulations" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "collections" [];
	"pandas.core.arrays.boolean" -> "pandas" [];
	"pandas.core.arrays.arrow.accessors" -> "collections" [];
	"pandas.core.arrays._arrow_string_mixins" -> "collections" [];
	"pandas.core._numba.extensions" -> "pandas" [];
	"pandas.core._numba.executor" -> "pandas" [];
	"pandas.core.groupby.numba_" -> "pandas" [];
	"pandas.core.groupby.base" -> "collections" [];
	"pandas.core.arrays.period" -> "pandas" [];
	"pandas.core.arrays.period" -> "collections" [];
	"pandas.core.arrays.arrow.extension_types" -> "pandas" [];
	"pandas.core.arrays.interval" -> "collections" [];
	"pandas.core.indexers.utils" -> "pandas" [];
	"pandas.core.arrays._mixins" -> "collections" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "pandas" [];
	"pandas.compat.numpy.function" -> "pandas" [];
	"pandas.core.arrays.datetimes" -> "collections" [];
	"pandas.core.arrays.arrow.array" -> "collections" [];
	"pandas.core.tools.times" -> "pandas" [];
	"pandas.core.tools.timedeltas" -> "collections" [];
	"pandas.io._util" -> "collections" [];
	"pandas.core.dtypes.inference" -> "pandas" [];
	"pandas.util._exceptions" -> "collections" [];
	"pandas.core.ops.missing" -> "pandas" [];
	"pandas.core.construction" -> "collections" [];
	"pandas.core.internals.construction" -> "pandas" [];
	"pandas.core.internals.managers" -> "collections" [];
	"pandas.core.internals.managers" -> "pandas" [];
	"pandas.core.internals.ops" -> "collections" [];
	"pandas.core.internals.ops" -> "pandas" [];
	"pandas.core.internals.base" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "collections" [];
	"pandas.core.array_algos.take" -> "pandas" [];
	"pandas.core.sample" -> "pandas" [];
	"pandas.core.indexing" -> "collections" [];
	"pandas.core.nanops" -> "pandas" [];
	"pandas.util._decorators" -> "pandas" [];
	"pandas.util._decorators" -> "collections" [];
	"pandas.io.formats.string" -> "collections" [];
	"pandas.io.formats.html" -> "collections" [];
	"pandas.core.indexes.multi" -> "collections" [];
	"pandas.core.reshape.util" -> "pandas" [];
	"pandas.core.indexes.frozen" -> "pandas" [];
	"pandas.io.formats.printing" -> "collections" [];
	"pandas.io.formats.printing" -> "pandas" [];
	"pandas.io.formats.style" -> "collections" [];
	"pandas.io.formats.excel" -> "collections" [];
	"pandas.io.excel._xlsxwriter" -> "pandas" [];
	"pandas.io.excel._util" -> "collections" [];
	"pandas.io.excel._openpyxl" -> "pandas" [];
	"pandas.io.excel._odswriter" -> "pandas" [];
	"pandas.io.excel._base" -> "collections" [];
	"pandas.io.excel._base" -> "pandas" [];
	"pandas.io.excel._xlrd" -> "pandas" [];
	"pandas.io.excel._pyxlsb" -> "pandas" [];
	"pandas.io.formats.css" -> "pandas" [];
	"pandas.io.formats.css" -> "collections" [];
	"pandas.io.common" -> "urllib" [];
	"pandas.core.indexes.timedeltas" -> "pandas" [];
	"pandas.core.indexes.extension" -> "pandas" [];
	"pandas.core.indexes.datetimelike" -> "collections" [];
	"pandas.core.indexes.range" -> "collections" [];
	"pandas.core.indexes.range" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "collections" [];
	"pandas.core.indexes.datetimes" -> "dateutil" [];
	"pandas.core.indexes.api" -> "pandas" [];
	"pandas.core.indexes.period" -> "pandas" [];
	"pandas.core.indexes.period" -> "collections" [];
	"pandas.core.indexes.interval" -> "pandas" [];
	"pandas.core.indexes.interval" -> "collections" [];
	"pandas.core.indexes.category" -> "pandas" [];
	"pandas.core.indexes.category" -> "collections" [];
	"pandas.core.base" -> "collections" [];
	"pandas.core.arrays.string_" -> "collections" [];
	"pandas.core.arrays.numpy_" -> "collections" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "collections" [];
	"pandas.core.dtypes.common" -> "pandas" [];
	"pandas._config.config" -> "pandas" [];
	"pandas._config.config" -> "collections" [];
	"pandas.core.window.rolling" -> "collections" [];
	"pandas.core.series" -> "collections" [];
	"pandas.core.series" -> "pandas" [];
	"pandas.core.reshape.reshape" -> "pandas" [];
	"pandas.io.formats.info" -> "collections" [];
	"pandas.core.strings.accessor" -> "collections" [];
	"pandas.core.methods.selectn" -> "collections" [];
	"pandas.core.resample" -> "collections" [];
	"pandas.core.internals.concat" -> "collections" [];
	"pandas.core.internals.api" -> "pandas" [];
	"pandas.core.reshape.merge" -> "collections" [];
	"pandas.io.clipboard" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "collections" [];
	"pandas.io.sql" -> "collections" [];
	"sqlite3.dbapi2" -> "collections" [];
	"pandas.io.pytables" -> "collections" [];
	"pandas.core.computation.pytables" -> "pandas" [];
	"pandas.core.methods.describe" -> "collections" [];
	"pandas.core.reshape.pivot" -> "collections" [];
	"xml.dom.pulldom" -> "xml" [];
	"xml.dom.expatbuilder" -> "xml" [];
	"xml.dom.xmlbuilder" -> "urllib" [];
	"pandas.io.xml" -> "collections" [];
	"pandas.io.orc" -> "pandas" [];
	"pandas.io.feather_format" -> "pandas" [];
	"pandas.io.feather_format" -> "collections" [];
	"pandas.core.interchange.dataframe_protocol" -> "collections" [];
	"pandas.core.reshape.melt" -> "collections" [];
	"pandas.core.arrays.base" -> "collections" [];
	"pandas._libs.window.indexers" -> "pandas" [];
	"pandas._libs.window.aggregations" -> "pandas" [];
	"pandas._libs.tslibs.vectorized" -> "pandas" [];
	"pandas._libs.tslibs.tzconversion" -> "pandas" [];
	"pandas._libs.tslibs.timestamps" -> "pandas" [];
	"pandas._libs.tslibs.timedeltas" -> "pandas" [];
	"pandas._libs.tslibs.strptime" -> "pandas" [];
	"pandas._libs.tslibs.period" -> "pandas" [];
	"pandas._libs.tslibs.parsing" -> "pandas" [];
	"pandas._libs.tslibs.offsets" -> "pandas" [];
	"pandas._libs.tslibs.np_datetime" -> "pandas" [];
	"pandas._libs.tslibs.nattype" -> "pandas" [];
	"pandas._libs.tslibs.fields" -> "pandas" [];
	"pandas._libs.tslib" -> "pandas" [];
	"pandas._libs.sparse" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "collections" [];
	"pandas._libs.reshape" -> "pandas" [];
	"pandas._libs.properties" -> "pandas" [];
	"pandas._libs.parsers" -> "pandas" [];
	"pandas._libs.ops" -> "pandas" [];
	"pandas._libs.lib" -> "pandas" [];
	"pandas._libs.join" -> "pandas" [];
	"pandas._libs.interval" -> "pandas" [];
	"pandas._libs.hashtable" -> "pandas" [];
	"pandas._libs.hashing" -> "pandas" [];
	"pandas._libs.groupby" -> "pandas" [];
	"pandas._libs.arrays" -> "pandas" [];
	"pandas._libs.algos" -> "pandas" [];
	"pandas.io.spss" -> "collections" [];
	"pandas.util._print_versions" -> "pandas" [];
	"pandas._testing.contexts" -> "collections" [];
	"pandas._testing._warnings" -> "pandas" [];
	"pandas._testing._warnings" -> "collections" [];
	"pandas._config.localization" -> "collections" [];
	"pandas.plotting._misc" -> "collections" [];
	"pandas.plotting._core" -> "collections" [];
	"pandas.api.typing" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "pandas" [];
	"pandas.core.dtypes.dtypes" -> "collections" [];
	"pandas.core.api" -> "pandas" [];
	"pandas.core.config_init" -> "pandas" [];
	"numpy.typing.tests.test_typing" -> "importlib" [];
	"numpy.typing.mypy_plugin" -> "collections" [];
	"numpy.tests.test_public_api" -> "collections" [];
	"numpy.tests.test_numpy_config" -> "unittest" [];
	"numpy.tests.test_lazyloading" -> "importlib" [];
	"numpy.tests.test_lazyloading" -> "numpy" [];
	"numpy.random.tests.test_extending" -> "importlib" [];
	"numpy.polynomial.tests.test_symbol" -> "numpy" [];
	"numpy.polynomial.tests.test_printing" -> "numpy" [];
	"numpy.matrixlib.tests.test_defmatrix" -> "collections" [];
	"numpy.lib.tests.test__version" -> "numpy" [];
	"numpy.lib.tests.test__datasource" -> "urllib" [];
	"numpy.lib.tests.test__datasource" -> "numpy" [];
	"numpy.lib._user_array_impl" -> "numpy" [];
	"numpy.core.umath" -> "numpy" [];
	"numpy.core.shape_base" -> "numpy" [];
	"numpy.core.records" -> "numpy" [];
	"numpy.core.overrides" -> "numpy" [];
	"numpy.core.numerictypes" -> "numpy" [];
	"numpy.core.numeric" -> "numpy" [];
	"numpy.core.multiarray" -> "numpy" [];
	"numpy.core.getlimits" -> "numpy" [];
	"numpy.core.function_base" -> "numpy" [];
	"numpy.core.fromnumeric" -> "numpy" [];
	"numpy.core.einsumfunc" -> "numpy" [];
	"numpy.core.defchararray" -> "numpy" [];
	"numpy.core.arrayprint" -> "numpy" [];
	"numpy.core._dtype_ctypes" -> "numpy" [];
	"numpy.core._dtype" -> "numpy" [];
	"numpy._pyinstaller.hook-numpy" -> "PyInstaller" [];
	"PyInstaller.utils.hooks" -> "packaging" [];
	"PyInstaller.utils.hooks.conda" -> "importlib" [];
	"PyInstaller.utils.win32.versioninfo" -> "PyInstaller" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "urllib" [];
	"PyInstaller.lib.modulegraph.modulegraph" -> "importlib" [];
	"pkg_resources" -> "email" [];
	"pkg_resources" -> "jaraco" [];
	"packaging.metadata" -> "email" [];
	"PyInstaller.compat" -> "importlib" [];
	"PyInstaller.compat" -> "packaging" [];
	"PyInstaller.compat" -> "win32ctypes" [];
	"PyInstaller.compat" -> "ctypes" [];
	"ctypes.util" -> "importlib" [];
	"win32ctypes.pywin32.win32api" -> "win32ctypes" [];
	"win32ctypes.core.ctypes._time" -> "ctypes" [];
	"win32ctypes.core.ctypes._nl_support" -> "ctypes" [];
	"win32ctypes.core.ctypes._dll" -> "ctypes" [];
	"win32ctypes.pywin32.win32cred" -> "win32ctypes" [];
	"setuptools" -> "collections" [];
	"setuptools" -> "_distutils_hack" [];
	"setuptools._distutils.command.build_ext" -> "collections" [];
	"setuptools._distutils.command.build_ext" -> "concurrent" [];
	"setuptools._importlib" -> "importlib" [];
	"setuptools.dist" -> "collections" [];
	"setuptools.dist" -> "packaging" [];
	"setuptools.command.bdist_wheel" -> "collections" [];
	"setuptools.command.bdist_wheel" -> "email" [];
	"setuptools.command.egg_info" -> "collections" [];
	"setuptools._distutils.filelist" -> "collections" [];
	"setuptools.command._requirestxt" -> "jaraco" [];
	"setuptools.command._requirestxt" -> "packaging" [];
	"setuptools.glob" -> "collections" [];
	"setuptools.command.sdist" -> "setuptools" [];
	"setuptools._distutils.command.sdist" -> "collections" [];
	"setuptools.command.build" -> "setuptools" [];
	"setuptools._distutils.command.build" -> "collections" [];
	"setuptools._vendor.wheel.cli.tags" -> "email" [];
	"setuptools._vendor.wheel.cli.tags" -> "collections" [];
	"setuptools._vendor.wheel.cli.convert" -> "email" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "importlib" [];
	"setuptools._vendor.wheel.metadata" -> "email" [];
	"setuptools._vendor.wheel.cli.pack" -> "email" [];
	"setuptools.installer" -> "packaging" [];
	"setuptools.wheel" -> "packaging" [];
	"setuptools._discovery" -> "packaging" [];
	"setuptools.config.setupcfg" -> "packaging" [];
	"setuptools.config.expand" -> "collections" [];
	"setuptools.config.pyprojecttoml" -> "collections" [];
	"setuptools.config.pyprojecttoml" -> "setuptools" [];
	"setuptools.config._validate_pyproject.formats" -> "email" [];
	"setuptools.config._validate_pyproject.formats" -> "urllib" [];
	"setuptools._vendor.packaging.tags" -> "importlib" [];
	"tomllib._parser" -> "collections" [];
	"setuptools.config._apply_pyprojecttoml" -> "collections" [];
	"setuptools.config._apply_pyprojecttoml" -> "email" [];
	"setuptools._static" -> "packaging" [];
	"setuptools._distutils.command.bdist" -> "collections" [];
	"setuptools._entry_points" -> "jaraco" [];
	"setuptools.discovery" -> "collections" [];
	"setuptools.discovery" -> "_distutils_hack" [];
	"setuptools.depends" -> "packaging" [];
	"setuptools._imp" -> "importlib" [];
	"setuptools._core_metadata" -> "packaging" [];
	"setuptools._reqs" -> "collections" [];
	"setuptools._reqs" -> "jaraco" [];
	"setuptools._reqs" -> "packaging" [];
	"setuptools._vendor.platformdirs.windows" -> "collections" [];
	"pandas.util._doctools" -> "collections" [];
	"pandas.util._test_decorators" -> "pandas" [];
	"pandas.tests.util.test_rewrite_warning" -> "pandas" [];
	"pandas.tests.util.test_deprecate_nonkeyword_arguments" -> "pandas" [];
	"pandas.tests.util.test_deprecate_kwarg" -> "pandas" [];
	"pandas.tests.util.test_deprecate" -> "pandas" [];
	"pandas.tests.util.test_assert_produces_warning" -> "pandas" [];
	"pandas.tests.util.test_assert_attr_equal" -> "pandas" [];
	"pandas.tests.tslibs.test_timezones" -> "dateutil" [];
	"pandas.tests.tslibs.test_resolution" -> "pandas" [];
	"pandas.tests.tslibs.test_period" -> "pandas" [];
	"pandas.tests.tslibs.test_parsing" -> "dateutil" [];
	"pandas.tests.tslibs.test_parsing" -> "pandas" [];
	"pandas.tests.tslibs.test_np_datetime" -> "pandas" [];
	"pandas.tests.tslibs.test_libfrequencies" -> "pandas" [];
	"pandas.tests.tslibs.test_fields" -> "pandas" [];
	"pandas.tests.tslibs.test_api" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_week" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_quarter" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_fiscal" -> "dateutil" [];
	"pandas.tests.tseries.offsets.test_custom_business_month" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_common" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_business_quarter" -> "pandas" [];
	"pandas.tests.tools.test_to_datetime" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.test_timezones" -> "dateutil" [];
	"pandas.tests.test_take" -> "pandas" [];
	"pandas.tests.test_register_accessor" -> "collections" [];
	"pandas.tests.test_optional_dependency" -> "pandas" [];
	"pandas.tests.series.test_constructors" -> "dateutil" [];
	"pandas.tests.series.methods.test_head_tail" -> "pandas" [];
	"pandas.tests.series.indexing.test_datetime" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.test_timestamp" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.test_formats" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.test_constructors" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.test_arithmetic" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_tz_localize" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.methods.test_timestamp_method" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_round" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "dateutil" [];
	"pandas.tests.scalar.timestamp.methods.test_replace" -> "pandas" [];
	"pandas.plotting._matplotlib.style" -> "collections" [];
	"pandas.plotting._matplotlib.style" -> "pandas" [];
	"pandas.plotting._matplotlib.misc" -> "collections" [];
	"pandas.plotting._matplotlib.groupby" -> "collections" [];
	"pandas.plotting._matplotlib.core" -> "collections" [];
	"pandas.plotting._matplotlib.converter" -> "collections" [];
	"pandas.plotting._matplotlib.boxplot" -> "collections" [];
	"pandas.plotting._matplotlib.tools" -> "collections" [];
	"pandas.tests.plotting.common" -> "collections" [];
	"pandas.tests.libs.test_libalgos" -> "pandas" [];
	"pandas.tests.libs.test_join" -> "pandas" [];
	"pandas.tests.libs.test_hashtable" -> "collections" [];
	"tracemalloc" -> "collections" [];
	"pandas.tests.io.xml.test_xml" -> "urllib" [];
	"pandas.tests.io.test_html" -> "collections" [];
	"pandas.tests.io.test_html" -> "urllib" [];
	"pandas.tests.io.sas.test_byteswap" -> "pandas" [];
	"pandas.tests.io.pytables.common" -> "collections" [];
	"pandas.tests.io.parser.test_unsupported" -> "pandas" [];
	"pandas.tests.io.parser.test_python_parser_only" -> "collections" [];
	"pandas.tests.io.parser.test_parse_dates" -> "dateutil" [];
	"pandas.tests.io.parser.test_multi_thread" -> "multiprocessing" [];
	"pandas.tests.io.parser.test_converters" -> "dateutil" [];
	"pandas.tests.io.parser.test_concatenate_chunks" -> "pandas" [];
	"pandas.tests.io.parser.common.test_verbose" -> "pandas" [];
	"pandas.tests.io.parser.common.test_file_buffer_url" -> "urllib" [];
	"pandas.tests.io.json.test_readlines" -> "collections" [];
	"pandas.tests.io.formats.test_to_excel" -> "pandas" [];
	"pandas.tests.io.formats.test_css" -> "pandas" [];
	"pandas.tests.io.formats.test_console" -> "pandas" [];
	"pandas.tests.io.excel.test_readers" -> "urllib" [];
	"pandas.tests.io.conftest" -> "pandas" [];
	"pandas.tests.indexing.test_loc" -> "dateutil" [];
	"pandas.tests.indexes.test_any_index" -> "pandas" [];
	"pandas.tests.indexes.numeric.test_setops" -> "pandas" [];
	"pandas.tests.indexes.numeric.test_join" -> "pandas" [];
	"pandas.tests.indexes.multi.test_astype" -> "pandas" [];
	"pandas.tests.indexes.interval.test_interval_tree" -> "pandas" [];
	"pandas.tests.indexes.datetimes.test_iter" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.test_formats" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_localize" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_tz_convert" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_to_pydatetime" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_to_period" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_resolution" -> "dateutil" [];
	"pandas.tests.indexes.datetimes.methods.test_normalize" -> "dateutil" [];
	"pandas.tests.frame.test_reductions" -> "dateutil" [];
	"pandas.tests.frame.indexing.test_take" -> "pandas" [];
	"pandas.tests.frame.constructors.test_from_records" -> "collections" [];
	"pandas.tests.extension.date.array" -> "collections" [];
	"pandas.tests.extension.date.array" -> "pandas" [];
	"pandas.tests.arrays.timedeltas.test_cumulative" -> "pandas" [];
	"pandas.tests.arrays.timedeltas.test_constructors" -> "pandas" [];
	"pandas.tests.arrays.datetimes.test_cumulative" -> "pandas" [];
	"pandas.tests.arrays.categorical.test_warnings" -> "pandas" [];
	"pandas.tests.arithmetic.test_array_ops" -> "pandas" [];
	"pandas.tests.api.test_types" -> "pandas" [];
	"pandas.conftest" -> "dateutil" [];
	"xml.etree.ElementInclude" -> "urllib" [];
	"zipimport" -> "importlib" [];
	"setuptools._vendor.tomli._parser" -> "collections" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "email" [];
	"setuptools._vendor.jaraco.text" -> "importlib" [];
	"setuptools._vendor.jaraco.text" -> "jaraco" [];
	"setuptools._vendor.jaraco.context" -> "urllib" [];
	"setuptools._vendor.jaraco.functools" -> "collections" [];
	"_json" -> "json" [];
	"requests" -> "urllib" [];
	"requests.compat" -> "urllib" [];
	"requests.models" -> "encodings" [];
	"urllib3.response" -> "http" [];
	"urllib3.connection" -> "http" [];
	"urllib3.http2" -> "importlib" [];
	"urllib3._request_methods" -> "urllib" [];
	"urllib3.util.response" -> "http" [];
	"urllib3.util.response" -> "email" [];
	"urllib3.fields" -> "email" [];
	"urllib3.poolmanager" -> "urllib" [];
	"certifi.core" -> "importlib" [];
	"urllib3.exceptions" -> "email" [];
	"urllib3.exceptions" -> "http" [];
	"urllib3.contrib.pyopenssl" -> "urllib" [];
	"urllib3.contrib.emscripten.connection" -> "http" [];
	"urllib3.contrib.emscripten.response" -> "http" [];
	"urllib3.contrib.emscripten.fetch" -> "email" [];
	"urllib3.contrib.emscripten.fetch" -> "importlib" [];
	"traceback" -> "collections" [];
	"<PyiModuleGraph>" -> "openpyxl" [];
	"setuptools._distutils.compilers.C.base" -> "setuptools" [];
	"more_itertools" -> "setuptools" [];
	"setuptools._distutils.compilers.C.msvc" -> "setuptools" [];
	"typing_extensions" -> "setuptools" [];
	"setuptools._distutils.command.check" -> "setuptools" [];
	"openpyxl.reader.drawings" -> "openpyxl" [];
	"openpyxl.styles.builtins" -> "openpyxl" [];
	"openpyxl.workbook.child" -> "openpyxl" [];
	"openpyxl.drawing.drawing" -> "openpyxl" [];
	"openpyxl.chart.picture" -> "openpyxl" [];
	"openpyxl.xml.functions" -> "xml" [];
	"et_xmlfile.xmlfile" -> "xml" [];
	"et_xmlfile.incremental_tree" -> "xml" [];
	"openpyxl.drawing.relation" -> "openpyxl" [];
	"openpyxl.worksheet.related" -> "openpyxl" [];
	"openpyxl.worksheet.drawing" -> "openpyxl" [];
	"openpyxl.descriptors.container" -> "openpyxl" [];
	"openpyxl.reader.strings" -> "openpyxl" [];
	"openpyxl.writer.excel" -> "openpyxl" [];
	"openpyxl.worksheet._writer" -> "openpyxl" [];
	"numpy.lib._ufunclike_impl" -> "numpy" [];
	"numpy.lib._scimath_impl" -> "numpy" [];
	"numpy.lib.introspect" -> "numpy" [];
	"openpyxl.worksheet.picture" -> "openpyxl" [];
	"openpyxl.utils.dataframe" -> "openpyxl" [];
	"pandas.core.computation.check" -> "pandas" [];
	"pandas.compat._optional" -> "pandas" [];
	"pandas.core.computation.ops" -> "pandas" [];
	"pandas.core.computation.eval" -> "pandas" [];
	"pandas.core.groupby.categorical" -> "pandas" [];
	"pandas.core.window.doc" -> "pandas" [];
	"pandas.core.indexers.objects" -> "pandas" [];
	"pandas.core.window.online" -> "pandas" [];
	"pandas.compat.numpy" -> "pandas" [];
	"pandas.api.extensions" -> "pandas" [];
	"pandas.io.excel._util" -> "pandas" [];
	"pandas.api.types" -> "pandas" [];
	"pandas.io.formats.xml" -> "xml" [];
	"pandas.io.xml" -> "xml" [];
	"pandas._libs.indexing" -> "pandas" [];
	"pandas.util._tester" -> "pandas" [];
	"pandas.api.indexers" -> "pandas" [];
	"pandas.compat.pyarrow" -> "pandas" [];
	"openpyxl.packaging.interface" -> "openpyxl" [];
	"PyInstaller.depend.imphookapi" -> "PyInstaller" [];
	"platformdirs" -> "setuptools" [];
	"plistlib" -> "xml" [];
	"importlib_metadata" -> "setuptools" [];
	"win32ctypes.core.ctypes._authentication" -> "win32ctypes" [];
	"setuptools._distutils.command.build_ext" -> "setuptools" [];
	"wheel" -> "setuptools" [];
	"setuptools._distutils.command.sdist" -> "setuptools" [];
	"setuptools._distutils.command.build" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.convert" -> "setuptools" [];
	"setuptools.config._validate_pyproject.formats" -> "setuptools" [];
	"tomli" -> "setuptools" [];
	"setuptools._distutils.command.bdist" -> "setuptools" [];
	"pandas.tests.util.test_validate_kwargs" -> "pandas" [];
	"pandas.tests.util.test_validate_args_and_kwargs" -> "pandas" [];
	"pandas.tests.util.test_validate_args" -> "pandas" [];
	"pandas.tests.util.test_doc" -> "pandas" [];
	"pandas.tests.tslibs.test_to_offset" -> "pandas" [];
	"pandas.tests.tslibs.test_ccalendar" -> "pandas" [];
	"pandas.tests.tslibs.test_array_to_datetime" -> "dateutil" [];
	"pandas.tests.tseries.offsets.test_easter" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_custom_business_hour" -> "pandas" [];
	"pandas.tests.tseries.offsets.test_common" -> "dateutil" [];
	"pandas.tests.tseries.offsets.test_business_year" -> "pandas" [];
	"pandas.tests.tseries.holiday.test_observance" -> "pandas" [];
	"pandas.tests.tseries.frequencies.test_frequencies" -> "pandas" [];
	"pandas.tests.tseries.frequencies.test_freq_code" -> "pandas" [];
	"pandas.tests.test_aggregation" -> "pandas" [];
	"pandas.tests.scalar.timestamp.methods.test_normalize" -> "pandas" [];
	"pandas.tests.io.xml.test_xml" -> "xml" [];
	"pandas.tests.io.pytables.common" -> "pandas" [];
	"pandas.tests.io.formats.test_printing" -> "pandas" [];
	"pandas.tests.indexing.test_indexers" -> "pandas" [];
	"pandas.tests.frame.test_validate" -> "pandas" [];
	"pandas.tests.extension.test_extension" -> "pandas" [];
	"pandas.tests.arrays.interval.test_formats" -> "pandas" [];
	"_elementtree" -> "xml" [];
	"setuptools._vendor.importlib_metadata.compat.py39" -> "setuptools" [];
	"zipp" -> "setuptools" [];
	"requests.models" -> "urllib" [];
	"urllib3.util.url" -> "urllib" [];
	"urllib3.util.timeout" -> "urllib" [];
	"urllib3.util.ssl_" -> "urllib" [];
	"urllib3.util.ssltransport" -> "urllib" [];
	"urllib3.util.retry" -> "urllib" [];
	"urllib3.http2.connection" -> "urllib" [];
	"urllib3.util.proxy" -> "urllib" [];
	"urllib3.util.response" -> "urllib" [];
	"urllib3.util.request" -> "urllib" [];
	"urllib3.util.connection" -> "urllib" [];
	"requests.adapters" -> "urllib" [];
	"urllib3.contrib.socks" -> "urllib" [];
	"requests.utils" -> "urllib" [];
	"requests.exceptions" -> "urllib" [];
	"urllib3.contrib.emscripten" -> "urllib" [];
	"urllib3.contrib.emscripten.connection" -> "urllib" [];
	"urllib3.contrib.emscripten.response" -> "urllib" [];
	"urllib3.contrib.emscripten.request" -> "urllib" [];
	"jaraco.functools" -> "setuptools" [];
	"pandas.core.arrays.floating" -> "pandas" [];
	"pandas.core.arrays.integer" -> "pandas" [];
	"pandas._libs.sas" -> "pandas" [];
	"pandas.api.interchange" -> "pandas" [];
	"pandas.tseries.offsets" -> "pandas" [];
	"pandas.tseries.api" -> "pandas" [];
	"jaraco.text" -> "setuptools" [];
	"platformdirs.android" -> "setuptools" [];
	"platformdirs.unix" -> "setuptools" [];
	"platformdirs.macos" -> "setuptools" [];
	"platformdirs.windows" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.tags" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.pack" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.unpack" -> "setuptools" [];
	"pandas.tests.tslibs.test_tzconversion" -> "pandas" [];
	"pandas.tests.tslibs.test_npy_units" -> "pandas" [];
	"pandas.tests.indexes.test_frozen" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_construct_object_arr" -> "pandas" [];
	"pandas.tests.dtypes.cast.test_can_hold_element" -> "pandas" [];
	"pandas.tests.apply.common" -> "pandas" [];
	"pandas.core.sparse.api" -> "pandas" [];
	"jaraco.context" -> "setuptools" [];
	"backports.tarfile" -> "setuptools" [];
	"setuptools._distutils.compat.numpy" -> "setuptools" [];
}
